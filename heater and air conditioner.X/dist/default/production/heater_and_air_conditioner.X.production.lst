

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Feb 06 19:48:15 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=3
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=3
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=3
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=3
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    68                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    69                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    70   000000                     
    71                           ; Generated 23/03/2023 GMT
    72                           ; 
    73                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    74                           ; All rights reserved.
    75                           ; 
    76                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    77                           ; 
    78                           ; Redistribution and use in source and binary forms, with or without modification, are
    79                           ; permitted provided that the following conditions are met:
    80                           ; 
    81                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    82                           ;        conditions and the following disclaimer.
    83                           ; 
    84                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    85                           ;        of conditions and the following disclaimer in the documentation and/or other
    86                           ;        materials provided with the distribution. Publication is not required when
    87                           ;        this file is used in an embedded application.
    88                           ; 
    89                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    90                           ;        software without specific prior written permission.
    91                           ; 
    92                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    93                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    94                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    95                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    96                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    97                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    98                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    99                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   100                           ; 
   101                           ; 
   102                           ; Code-generator required, PIC18F4620 Definitions
   103                           ; 
   104                           ; SFR Addresses
   105   000000                     
   106                           	psect	idataCOMRAM
   107   0034FA                     __pidataCOMRAM:
   108                           	callstack 0
   109                           
   110                           ;initializer for _RB7_Flag
   111   0034FA  01                 	db	1
   112                           
   113                           ;initializer for _RB6_Flag
   114   0034FB  01                 	db	1
   115                           
   116                           ;initializer for _RB5_Flag
   117   0034FC  01                 	db	1
   118                           
   119                           ;initializer for _RB4_Flag
   120   0034FD  01                 	db	1
   121                           
   122                           ;initializer for _lcd
   123   0034FE  22                 	db	34
   124   0034FF  2A                 	db	42
   125   003500  02                 	db	2
   126   003501  0A                 	db	10
   127   003502  12                 	db	18
   128   003503  1A                 	db	26
   129                           
   130                           ;initializer for _heater
   131   003504  13                 	db	19
   132   003505  1B                 	db	27
   133   003506  00                 	db	0
   134                           
   135                           ;initializer for _air_conditioners
   136   003507  03                 	db	3
   137   003508  0B                 	db	11
   138   003509  00                 	db	0
   139                           
   140                           ;initializer for _led_red
   141   00350A  23                 	db	35
   142   00350B  00                 	db	0
   143                           
   144                           ;initializer for _led_white
   145   00350C  2B                 	db	43
   146   00350D  00                 	db	0
   147                           
   148                           ;initializer for _led_blue
   149   00350E  33                 	db	51
   150   00350F  00                 	db	0
   151                           
   152                           	psect	idataBANK0
   153   003458                     __pidataBANK0:
   154                           	callstack 0
   155                           
   156                           ;initializer for _portx
   157   003458  80                 	db	128
   158   003459  0F                 	db	15
   159   00345A  81                 	db	129
   160   00345B  0F                 	db	15
   161   00345C  82                 	db	130
   162   00345D  0F                 	db	15
   163   00345E  83                 	db	131
   164   00345F  0F                 	db	15
   165   003460  84                 	db	132
   166   003461  0F                 	db	15
   167                           
   168                           ;initializer for _latx
   169   003462  89                 	db	137
   170   003463  0F                 	db	15
   171   003464  8A                 	db	138
   172   003465  0F                 	db	15
   173   003466  8B                 	db	139
   174   003467  0F                 	db	15
   175   003468  8C                 	db	140
   176   003469  0F                 	db	15
   177   00346A  8D                 	db	141
   178   00346B  0F                 	db	15
   179                           
   180                           ;initializer for _trisx
   181   00346C  92                 	db	146
   182   00346D  0F                 	db	15
   183   00346E  93                 	db	147
   184   00346F  0F                 	db	15
   185   003470  94                 	db	148
   186   003471  0F                 	db	15
   187   003472  95                 	db	149
   188   003473  0F                 	db	15
   189   003474  96                 	db	150
   190   003475  0F                 	db	15
   191                           
   192                           ;initializer for _n
   193   003476  04                 	db	4
   194                           
   195                           ;initializer for _uart
   196   003477  2580               	dw	9600
   197   003479  00                 	db	0
   198   00347A  00                 	db	0
   199   00347B  00                 	db	0
   200   00347C  00                 	db	0
   201   00347D  03                 	db	3
   202   00347E  00                 	db	0
   203   00347F  00                 	db	0
   204   003480  00                 	db	0
   205   003481  CE                 	db	low _MY_EUSART_RX_ISR
   206   003482  26                 	db	high _MY_EUSART_RX_ISR
   207   003483  00                 	db	0
   208   003484  00                 	db	0
   209   003485  00                 	db	0
   210   003486  00                 	db	0
   211   000000                     _ADCON1bits	set	4033
   212   000000                     _TRISD	set	3989
   213   000000                     _TRISC	set	3988
   214   000000                     _TRISB	set	3987
   215   000000                     _TRISE	set	3990
   216   000000                     _TRISCbits	set	3988
   217   000000                     _PIE1bits	set	3997
   218   000000                     _PIR1bits	set	3998
   219   000000                     _ADCON2bits	set	4032
   220   000000                     _ADCON0bits	set	4034
   221   000000                     _PORTE	set	3972
   222   000000                     _PORTD	set	3971
   223   000000                     _PORTC	set	3970
   224   000000                     _PORTB	set	3969
   225   000000                     _PORTA	set	3968
   226   000000                     _LATA	set	3977
   227   000000                     _TRISA	set	3986
   228   000000                     _ADRESH	set	4036
   229   000000                     _ADRESL	set	4035
   230   000000                     _INTCONbits	set	4082
   231   000000                     _RCSTAbits	set	4011
   232   000000                     _LATE	set	3981
   233   000000                     _LATD	set	3980
   234   000000                     _LATC	set	3979
   235   000000                     _LATB	set	3978
   236   000000                     _SPBRGH	set	4016
   237   000000                     _SPBRG	set	4015
   238   000000                     _BAUDCONbits	set	4024
   239   000000                     _RCREG	set	4014
   240   000000                     _TXREG	set	4013
   241   000000                     _TXSTAbits	set	4012
   242                           
   243                           	psect	smallconst
   244   001000                     __psmallconst:
   245                           	callstack 0
   246   001000  00                 	db	0
   247   001001                     STR_1:
   248   001001  25                 	db	37
   249   001002  69                 	db	105	;'i'
   250   001003  00                 	db	0
   251   001004  00                 	db	0	; dummy byte at the end
   252   000000                     
   253                           ; #config settings
   254                           
   255                           	psect	cinit
   256   002E0C                     __pcinit:
   257                           	callstack 0
   258   002E0C                     start_initialization:
   259                           	callstack 0
   260   002E0C                     __initialization:
   261                           	callstack 0
   262                           
   263                           ; Initialize objects allocated to BANK0 (47 bytes)
   264                           ; load TBLPTR registers with __pidataBANK0
   265   002E0C  0E58               	movlw	low __pidataBANK0
   266   002E0E  6EF6               	movwf	tblptrl,c
   267   002E10  0E34               	movlw	high __pidataBANK0
   268   002E12  6EF7               	movwf	tblptrh,c
   269   002E14  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   270   002E16  6EF8               	movwf	tblptru,c
   271   002E18  EE00  F0C4         	lfsr	0,__pdataBANK0
   272   002E1C  EE10 F02F          	lfsr	1,47
   273   002E20                     copy_data0:
   274   002E20  0009               	tblrd		*+
   275   002E22  CFF5 FFEE          	movff	tablat,postinc0
   276   002E26  50E5               	movf	postdec1,w,c
   277   002E28  50E1               	movf	fsr1l,w,c
   278   002E2A  E1FA               	bnz	copy_data0
   279                           
   280                           ; Initialize objects allocated to COMRAM (22 bytes)
   281                           ; load TBLPTR registers with __pidataCOMRAM
   282   002E2C  0EFA               	movlw	low __pidataCOMRAM
   283   002E2E  6EF6               	movwf	tblptrl,c
   284   002E30  0E34               	movlw	high __pidataCOMRAM
   285   002E32  6EF7               	movwf	tblptrh,c
   286   002E34  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   287   002E36  6EF8               	movwf	tblptru,c
   288   002E38  EE00  F064         	lfsr	0,__pdataCOMRAM
   289   002E3C  EE10 F016          	lfsr	1,22
   290   002E40                     copy_data1:
   291   002E40  0009               	tblrd		*+
   292   002E42  CFF5 FFEE          	movff	tablat,postinc0
   293   002E46  50E5               	movf	postdec1,w,c
   294   002E48  50E1               	movf	fsr1l,w,c
   295   002E4A  E1FA               	bnz	copy_data1
   296                           
   297                           ; Clear objects allocated to BANK1 (32 bytes)
   298   002E4C  EE01  F000         	lfsr	0,__pbssBANK1
   299   002E50  0E20               	movlw	32
   300   002E52                     clear_0:
   301   002E52  6AEE               	clrf	postinc0,c
   302   002E54  06E8               	decf	wreg,f,c
   303   002E56  E1FD               	bnz	clear_0
   304                           
   305                           ; Clear objects allocated to BANK0 (2 bytes)
   306   002E58  0100               	movlb	0
   307   002E5A  6BF4               	clrf	(__pbssBANK0+1)& (0+255),b
   308   002E5C  6BF3               	clrf	__pbssBANK0& (0+255),b
   309                           
   310                           ; Clear objects allocated to COMRAM (28 bytes)
   311   002E5E  EE00  F048         	lfsr	0,__pbssCOMRAM
   312   002E62  0E1C               	movlw	28
   313   002E64                     clear_1:
   314   002E64  6AEE               	clrf	postinc0,c
   315   002E66  06E8               	decf	wreg,f,c
   316   002E68  E1FD               	bnz	clear_1
   317   002E6A                     end_of_initialization:
   318                           	callstack 0
   319   002E6A                     __end_of__initialization:
   320                           	callstack 0
   321   002E6A  907A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   322   002E6C  927A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   323   002E6E  0100               	movlb	0
   324   002E70  EF88  F01A         	goto	_main	;jump to C main() function
   325                           
   326                           	psect	bssCOMRAM
   327   000048                     __pbssCOMRAM:
   328                           	callstack 0
   329   000048                     convert_uint16_to_string@F3180:
   330                           	callstack 0
   331   000048                     	ds	6
   332   00004E                     _width:
   333                           	callstack 0
   334   00004E                     	ds	2
   335   000050                     _prec:
   336                           	callstack 0
   337   000050                     	ds	2
   338   000052                     _EUSART_OverrunErrorHandler:
   339                           	callstack 0
   340   000052                     	ds	2
   341   000054                     _EUSART_FramingErrorHandler:
   342                           	callstack 0
   343   000054                     	ds	2
   344   000056                     _EUSART_RxInterruptHandler:
   345                           	callstack 0
   346   000056                     	ds	2
   347   000058                     _ADC_InterruptHandler:
   348                           	callstack 0
   349   000058                     	ds	2
   350   00005A                     _flags:
   351                           	callstack 0
   352   00005A                     	ds	1
   353   00005B                     _ret:
   354                           	callstack 0
   355   00005B                     	ds	1
   356   00005C                     	ds	1
   357   00005D                     	ds	1
   358   00005E                     	ds	1
   359   00005F                     	ds	1
   360   000060                     lcd_send_custom_char@counter:
   361                           	callstack 0
   362   000060                     	ds	1
   363   000061                     _uart_value:
   364                           	callstack 0
   365   000061                     	ds	1
   366   000062                     lcd_send_number_pos@number:
   367                           	callstack 0
   368   000062                     	ds	1
   369   000063                     lcd_send_number@number:
   370                           	callstack 0
   371   000063                     	ds	1
   372                           
   373                           	psect	dataCOMRAM
   374   000064                     __pdataCOMRAM:
   375                           	callstack 0
   376   000064                     _RB7_Flag:
   377                           	callstack 0
   378   000064                     	ds	1
   379   000065                     _RB6_Flag:
   380                           	callstack 0
   381   000065                     	ds	1
   382   000066                     _RB5_Flag:
   383                           	callstack 0
   384   000066                     	ds	1
   385   000067                     _RB4_Flag:
   386                           	callstack 0
   387   000067                     	ds	1
   388   000068                     _lcd:
   389                           	callstack 0
   390   000068                     	ds	6
   391   00006E                     _heater:
   392                           	callstack 0
   393   00006E                     	ds	3
   394   000071                     _air_conditioners:
   395                           	callstack 0
   396   000071                     	ds	3
   397   000074                     _led_red:
   398                           	callstack 0
   399   000074                     	ds	2
   400   000076                     _led_white:
   401                           	callstack 0
   402   000076                     	ds	2
   403   000078                     _led_blue:
   404                           	callstack 0
   405   000078                     	ds	2
   406                           
   407                           	psect	bssBANK0
   408   0000F3                     __pbssBANK0:
   409                           	callstack 0
   410   0000F3                     _EUSART_TxInterruptHandler:
   411                           	callstack 0
   412   0000F3                     	ds	2
   413                           
   414                           	psect	dataBANK0
   415   0000C4                     __pdataBANK0:
   416                           	callstack 0
   417   0000C4                     _portx:
   418                           	callstack 0
   419   0000C4                     	ds	10
   420   0000CE                     _latx:
   421                           	callstack 0
   422   0000CE                     	ds	10
   423   0000D8                     _trisx:
   424                           	callstack 0
   425   0000D8                     	ds	10
   426   0000E2                     _n:
   427                           	callstack 0
   428   0000E2                     	ds	1
   429   0000E3                     _uart:
   430                           	callstack 0
   431   0000E3                     	ds	16
   432                           
   433                           	psect	bssBANK1
   434   000100                     __pbssBANK1:
   435                           	callstack 0
   436   000100                     _dbuf:
   437                           	callstack 0
   438   000100                     	ds	32
   439                           
   440                           	psect	cstackBANK0
   441   000080                     __pcstackBANK0:
   442                           	callstack 0
   443   000080                     ?___fltol:
   444                           	callstack 0
   445   000080                     ?___xxtofl:
   446                           	callstack 0
   447   000080                     gpio_pin_direction_init@pin:
   448                           	callstack 0
   449   000080                     gpio_pin_logic_write@pin:
   450                           	callstack 0
   451   000080                     EUSART_ASYNC_TX_Init@_eusart:
   452                           	callstack 0
   453   000080                     EUSART_ASYNC_RX_Init@_eusart:
   454                           	callstack 0
   455   000080                     ___fltol@f1:
   456                           	callstack 0
   457   000080                     ___xxtofl@val:
   458                           	callstack 0
   459                           
   460                           ; 4 bytes @ 0x0
   461   000080                     	ds	1
   462   000081                     gpio_pin_direction_init@pin_direction:
   463                           	callstack 0
   464   000081                     gpio_pin_logic_write@pin_logic:
   465                           	callstack 0
   466                           
   467                           ; 1 bytes @ 0x1
   468   000081                     	ds	1
   469   000082                     ??_gpio_pin_logic_write:
   470   000082                     ??_gpio_pin_direction_init:
   471                           
   472                           ; 1 bytes @ 0x2
   473   000082                     	ds	2
   474   000084                     ??___fltol:
   475   000084                     ??___xxtofl:
   476                           
   477                           ; 1 bytes @ 0x4
   478   000084                     	ds	3
   479   000087                     gpio_pin_direction_init@ret:
   480                           	callstack 0
   481   000087                     gpio_pin_logic_write@ret:
   482                           	callstack 0
   483                           
   484                           ; 1 bytes @ 0x7
   485   000087                     	ds	1
   486   000088                     lcd_send_nbits@lcd:
   487                           	callstack 0
   488   000088                     lcd_send_enable@lcd:
   489                           	callstack 0
   490   000088                     gpio_pin_output_low_init@pin:
   491                           	callstack 0
   492   000088                     ___fltol@sign1:
   493                           	callstack 0
   494   000088                     ___xxtofl@sign:
   495                           	callstack 0
   496                           
   497                           ; 1 bytes @ 0x8
   498   000088                     	ds	1
   499   000089                     ??_gpio_pin_output_low_init:
   500   000089                     lcd_send_nbits@data_or_command:
   501                           	callstack 0
   502   000089                     lcd_send_enable@gpio_ret:
   503                           	callstack 0
   504   000089                     ___fltol@exp1:
   505                           	callstack 0
   506   000089                     ___xxtofl@exp:
   507                           	callstack 0
   508                           
   509                           ; 1 bytes @ 0x9
   510   000089                     	ds	1
   511   00008A                     ??_lcd_send_nbits:
   512   00008A                     gpio_pin_output_low_init@gpio_ret:
   513                           	callstack 0
   514   00008A                     ___xxtofl@arg:
   515                           	callstack 0
   516                           
   517                           ; 4 bytes @ 0xA
   518   00008A                     	ds	1
   519   00008B                     gpio_pin_output_low_init@ret:
   520                           	callstack 0
   521                           
   522                           ; 1 bytes @ 0xB
   523   00008B                     	ds	1
   524   00008C                     dc_motor_init@dc_motor:
   525                           	callstack 0
   526   00008C                     lcd_send_nbits@ret:
   527                           	callstack 0
   528   00008C                     led_init@led:
   529                           	callstack 0
   530                           
   531                           ; 1 bytes @ 0xC
   532   00008C                     	ds	1
   533   00008D                     dc_motor_init@gpio_ret:
   534                           	callstack 0
   535   00008D                     lcd_send_nbits@pin_counter:
   536                           	callstack 0
   537   00008D                     led_init@gpio_ret:
   538                           	callstack 0
   539                           
   540                           ; 1 bytes @ 0xD
   541   00008D                     	ds	1
   542   00008E                     ?___fldiv:
   543                           	callstack 0
   544   00008E                     dc_motor_init@ret:
   545                           	callstack 0
   546   00008E                     lcd_send_command@lcd:
   547                           	callstack 0
   548   00008E                     ___fldiv@b:
   549                           	callstack 0
   550                           
   551                           ; 4 bytes @ 0xE
   552   00008E                     	ds	1
   553   00008F                     lcd_send_command@command:
   554                           	callstack 0
   555                           
   556                           ; 1 bytes @ 0xF
   557   00008F                     	ds	1
   558   000090                     lcd_send_command@gpio_ret:
   559                           	callstack 0
   560                           
   561                           ; 1 bytes @ 0x10
   562   000090                     	ds	1
   563   000091                     lcd_send_command@lcd_ret:
   564                           	callstack 0
   565                           
   566                           ; 1 bytes @ 0x11
   567   000091                     	ds	1
   568   000092                     lcd_send_command@ret:
   569                           	callstack 0
   570   000092                     ___fldiv@a:
   571                           	callstack 0
   572                           
   573                           ; 4 bytes @ 0x12
   574   000092                     	ds	1
   575   000093                     lcd_init@lcd:
   576                           	callstack 0
   577                           
   578                           ; 1 bytes @ 0x13
   579   000093                     	ds	1
   580   000094                     ??_lcd_init:
   581                           
   582                           ; 1 bytes @ 0x14
   583   000094                     	ds	2
   584   000096                     ??___fldiv:
   585   000096                     lcd_init@gpio_ret:
   586                           	callstack 0
   587                           
   588                           ; 1 bytes @ 0x16
   589   000096                     	ds	1
   590   000097                     lcd_init@ret:
   591                           	callstack 0
   592                           
   593                           ; 1 bytes @ 0x17
   594   000097                     	ds	1
   595   000098                     lcd_init@pins_counter:
   596                           	callstack 0
   597                           
   598                           ; 1 bytes @ 0x18
   599   000098                     	ds	1
   600   000099                     lcd_init@lcd_ret:
   601                           	callstack 0
   602                           
   603                           ; 1 bytes @ 0x19
   604   000099                     	ds	1
   605   00009A                     ___fldiv@rem:
   606                           	callstack 0
   607                           
   608                           ; 4 bytes @ 0x1A
   609   00009A                     	ds	4
   610   00009E                     ___fldiv@sign:
   611                           	callstack 0
   612                           
   613                           ; 1 bytes @ 0x1E
   614   00009E                     	ds	1
   615   00009F                     ___fldiv@new_exp:
   616                           	callstack 0
   617                           
   618                           ; 2 bytes @ 0x1F
   619   00009F                     	ds	2
   620   0000A1                     ___fldiv@grs:
   621                           	callstack 0
   622                           
   623                           ; 4 bytes @ 0x21
   624   0000A1                     	ds	4
   625   0000A5                     ___fldiv@bexp:
   626                           	callstack 0
   627                           
   628                           ; 1 bytes @ 0x25
   629   0000A5                     	ds	1
   630   0000A6                     ___fldiv@aexp:
   631                           	callstack 0
   632                           
   633                           ; 1 bytes @ 0x26
   634   0000A6                     	ds	1
   635   0000A7                     ?___fladd:
   636                           	callstack 0
   637   0000A7                     ___fladd@b:
   638                           	callstack 0
   639                           
   640                           ; 4 bytes @ 0x27
   641   0000A7                     	ds	4
   642   0000AB                     ___fladd@a:
   643                           	callstack 0
   644                           
   645                           ; 4 bytes @ 0x2B
   646   0000AB                     	ds	4
   647   0000AF                     ??___fladd:
   648                           
   649                           ; 1 bytes @ 0x2F
   650   0000AF                     	ds	4
   651   0000B3                     ___fladd@signs:
   652                           	callstack 0
   653                           
   654                           ; 1 bytes @ 0x33
   655   0000B3                     	ds	1
   656   0000B4                     ___fladd@aexp:
   657                           	callstack 0
   658                           
   659                           ; 1 bytes @ 0x34
   660   0000B4                     	ds	1
   661   0000B5                     ___fladd@bexp:
   662                           	callstack 0
   663                           
   664                           ; 1 bytes @ 0x35
   665   0000B5                     	ds	1
   666   0000B6                     ___fladd@grs:
   667                           	callstack 0
   668                           
   669                           ; 1 bytes @ 0x36
   670   0000B6                     	ds	1
   671   0000B7                     EUSART_Baud_Rate_Calculation@_eusart:
   672                           	callstack 0
   673                           
   674                           ; 1 bytes @ 0x37
   675   0000B7                     	ds	1
   676   0000B8                     ??_EUSART_Baud_Rate_Calculation:
   677                           
   678                           ; 1 bytes @ 0x38
   679   0000B8                     	ds	2
   680   0000BA                     EUSART_Baud_Rate_Calculation@Baud_Rate_Temp:
   681                           	callstack 0
   682                           
   683                           ; 4 bytes @ 0x3A
   684   0000BA                     	ds	4
   685   0000BE                     _EUSART_Baud_Rate_Calculation$2548:
   686                           	callstack 0
   687                           
   688                           ; 4 bytes @ 0x3E
   689   0000BE                     	ds	4
   690   0000C2                     EUSART_ASYNC_Init@_eusart:
   691                           	callstack 0
   692                           
   693                           ; 1 bytes @ 0x42
   694   0000C2                     	ds	1
   695   0000C3                     EUSART_ASYNC_Init@ret:
   696                           	callstack 0
   697                           
   698                           ; 1 bytes @ 0x43
   699   0000C3                     	ds	1
   700   0000C4                     
   701                           ; 1 bytes @ 0x44
   702                           
   703                           	psect	cstackCOMRAM
   704   000001                     __pcstackCOMRAM:
   705                           	callstack 0
   706   000001                     ?___awdiv:
   707                           	callstack 0
   708   000001                     ?___awmod:
   709                           	callstack 0
   710   000001                     EUSART_ASYNC_ReadByteNonBlocking@_data:
   711                           	callstack 0
   712   000001                     memset@dest:
   713                           	callstack 0
   714   000001                     i2gpio_pin_logic_write@pin:
   715                           	callstack 0
   716   000001                     ___awdiv@dividend:
   717                           	callstack 0
   718   000001                     ___awmod@dividend:
   719                           	callstack 0
   720   000001                     fputc@c:
   721                           	callstack 0
   722                           
   723                           ; 2 bytes @ 0x0
   724   000001                     	ds	1
   725   000002                     i2gpio_pin_logic_write@pin_logic:
   726                           	callstack 0
   727   000002                     memset@c:
   728                           	callstack 0
   729                           
   730                           ; 2 bytes @ 0x1
   731   000002                     	ds	1
   732   000003                     ??i2_gpio_pin_logic_write:
   733   000003                     fputc@fp:
   734                           	callstack 0
   735   000003                     ___awdiv@divisor:
   736                           	callstack 0
   737   000003                     ___awmod@divisor:
   738                           	callstack 0
   739                           
   740                           ; 2 bytes @ 0x2
   741   000003                     	ds	1
   742   000004                     ??_fputc:
   743   000004                     memset@n:
   744                           	callstack 0
   745                           
   746                           ; 2 bytes @ 0x3
   747   000004                     	ds	1
   748   000005                     ___awdiv@counter:
   749                           	callstack 0
   750   000005                     ___awmod@counter:
   751                           	callstack 0
   752                           
   753                           ; 1 bytes @ 0x4
   754   000005                     	ds	1
   755   000006                     ___awdiv@sign:
   756                           	callstack 0
   757   000006                     ___awmod@sign:
   758                           	callstack 0
   759   000006                     memset@p:
   760                           	callstack 0
   761                           
   762                           ; 1 bytes @ 0x5
   763   000006                     	ds	1
   764   000007                     ?_abs:
   765                           	callstack 0
   766   000007                     ___awdiv@quotient:
   767                           	callstack 0
   768   000007                     abs@a:
   769                           	callstack 0
   770                           
   771                           ; 2 bytes @ 0x6
   772   000007                     	ds	1
   773   000008                     i2gpio_pin_logic_write@ret:
   774                           	callstack 0
   775                           
   776                           ; 1 bytes @ 0x7
   777   000008                     	ds	1
   778   000009                     ??_abs:
   779   000009                     dc_motor_move_right@dc_motor:
   780                           	callstack 0
   781   000009                     dc_motor_stop@dc_motor:
   782                           	callstack 0
   783   000009                     led_on@led:
   784                           	callstack 0
   785   000009                     led_off@led:
   786                           	callstack 0
   787   000009                     i2lcd_send_nbits@lcd:
   788                           	callstack 0
   789   000009                     i2lcd_send_enable@lcd:
   790                           	callstack 0
   791                           
   792                           ; 1 bytes @ 0x8
   793   000009                     	ds	1
   794   00000A                     dc_motor_move_right@gpio_ret:
   795                           	callstack 0
   796   00000A                     dc_motor_stop@gpio_ret:
   797                           	callstack 0
   798   00000A                     led_on@gpio_ret:
   799                           	callstack 0
   800   00000A                     led_off@gpio_ret:
   801                           	callstack 0
   802   00000A                     i2lcd_send_nbits@data_or_command:
   803                           	callstack 0
   804   00000A                     i2lcd_send_enable@gpio_ret:
   805                           	callstack 0
   806                           
   807                           ; 1 bytes @ 0x9
   808   00000A                     	ds	1
   809   00000B                     ??i2_lcd_send_nbits:
   810   00000B                     dc_motor_move_right@ret:
   811                           	callstack 0
   812   00000B                     dc_motor_stop@ret:
   813                           	callstack 0
   814   00000B                     led_on@ret:
   815                           	callstack 0
   816   00000B                     led_off@ret:
   817                           	callstack 0
   818   00000B                     vfpfcnvrt@fp:
   819                           	callstack 0
   820                           
   821                           ; 1 bytes @ 0xA
   822   00000B                     	ds	1
   823   00000C                     vfpfcnvrt@fmt:
   824                           	callstack 0
   825                           
   826                           ; 1 bytes @ 0xB
   827   00000C                     	ds	1
   828   00000D                     vfpfcnvrt@ap:
   829                           	callstack 0
   830   00000D                     i2lcd_send_nbits@ret:
   831                           	callstack 0
   832                           
   833                           ; 1 bytes @ 0xC
   834   00000D                     	ds	1
   835   00000E                     ??_vfpfcnvrt:
   836   00000E                     i2lcd_send_nbits@pin_counter:
   837                           	callstack 0
   838                           
   839                           ; 1 bytes @ 0xD
   840   00000E                     	ds	1
   841   00000F                     lcd_send_char_data@lcd:
   842                           	callstack 0
   843   00000F                     vfpfcnvrt@done:
   844                           	callstack 0
   845   00000F                     i2lcd_send_command@lcd:
   846                           	callstack 0
   847                           
   848                           ; 1 bytes @ 0xE
   849   00000F                     	ds	1
   850   000010                     lcd_send_char_data@data:
   851                           	callstack 0
   852   000010                     vfpfcnvrt@cp:
   853                           	callstack 0
   854   000010                     i2lcd_send_command@command:
   855                           	callstack 0
   856                           
   857                           ; 1 bytes @ 0xF
   858   000010                     	ds	1
   859   000011                     lcd_send_char_data@gpio_ret:
   860                           	callstack 0
   861   000011                     i2lcd_send_command@gpio_ret:
   862                           	callstack 0
   863   000011                     vfpfcnvrt@convarg:
   864                           	callstack 0
   865                           
   866                           ; 4 bytes @ 0x10
   867   000011                     	ds	1
   868   000012                     lcd_send_char_data@lcd_ret:
   869                           	callstack 0
   870   000012                     i2lcd_send_command@lcd_ret:
   871                           	callstack 0
   872                           
   873                           ; 1 bytes @ 0x11
   874   000012                     	ds	1
   875   000013                     lcd_send_char_data@ret:
   876                           	callstack 0
   877   000013                     i2lcd_send_command@ret:
   878                           	callstack 0
   879                           
   880                           ; 1 bytes @ 0x12
   881   000013                     	ds	1
   882   000014                     lcd_send_string@lcd:
   883                           	callstack 0
   884   000014                     lcd_set_curser@lcd:
   885                           	callstack 0
   886                           
   887                           ; 1 bytes @ 0x13
   888   000014                     	ds	1
   889   000015                     lcd_send_string@str:
   890                           	callstack 0
   891   000015                     lcd_set_curser@row:
   892                           	callstack 0
   893   000015                     vfpfcnvrt@c:
   894                           	callstack 0
   895                           
   896                           ; 1 bytes @ 0x14
   897   000015                     	ds	1
   898   000016                     ?_vfprintf:
   899                           	callstack 0
   900   000016                     lcd_send_string@gpio_ret:
   901                           	callstack 0
   902   000016                     lcd_set_curser@column:
   903                           	callstack 0
   904   000016                     vfprintf@fp:
   905                           	callstack 0
   906                           
   907                           ; 1 bytes @ 0x15
   908   000016                     	ds	1
   909   000017                     ??_lcd_set_curser:
   910   000017                     lcd_send_string@lcd_ret:
   911                           	callstack 0
   912   000017                     vfprintf@fmt:
   913                           	callstack 0
   914                           
   915                           ; 1 bytes @ 0x16
   916   000017                     	ds	1
   917   000018                     lcd_send_string@ret:
   918                           	callstack 0
   919   000018                     vfprintf@ap:
   920                           	callstack 0
   921                           
   922                           ; 1 bytes @ 0x17
   923   000018                     	ds	1
   924   000019                     lcd_set_curser@gpio_ret:
   925                           	callstack 0
   926   000019                     vfprintf@cfmt:
   927                           	callstack 0
   928                           
   929                           ; 1 bytes @ 0x18
   930   000019                     	ds	1
   931   00001A                     ?_sprintf:
   932                           	callstack 0
   933   00001A                     lcd_set_curser@lcd_ret:
   934                           	callstack 0
   935   00001A                     sprintf@s:
   936                           	callstack 0
   937                           
   938                           ; 1 bytes @ 0x19
   939   00001A                     	ds	1
   940   00001B                     lcd_send_string_pos@lcd:
   941                           	callstack 0
   942   00001B                     sprintf@fmt:
   943                           	callstack 0
   944                           
   945                           ; 1 bytes @ 0x1A
   946   00001B                     	ds	1
   947   00001C                     lcd_send_string_pos@row:
   948                           	callstack 0
   949                           
   950                           ; 1 bytes @ 0x1B
   951   00001C                     	ds	1
   952   00001D                     lcd_send_string_pos@column:
   953                           	callstack 0
   954                           
   955                           ; 1 bytes @ 0x1C
   956   00001D                     	ds	1
   957   00001E                     lcd_send_string_pos@str:
   958                           	callstack 0
   959   00001E                     sprintf@ap:
   960                           	callstack 0
   961                           
   962                           ; 1 bytes @ 0x1D
   963   00001E                     	ds	1
   964   00001F                     lcd_send_string_pos@gpio_ret:
   965                           	callstack 0
   966   00001F                     sprintf@f:
   967                           	callstack 0
   968                           
   969                           ; 12 bytes @ 0x1E
   970   00001F                     	ds	1
   971   000020                     lcd_send_string_pos@lcd_ret:
   972                           	callstack 0
   973                           
   974                           ; 1 bytes @ 0x1F
   975   000020                     	ds	11
   976   00002B                     convert_uint16_to_string@value:
   977                           	callstack 0
   978                           
   979                           ; 2 bytes @ 0x2A
   980   00002B                     	ds	2
   981   00002D                     convert_uint16_to_string@str:
   982                           	callstack 0
   983                           
   984                           ; 1 bytes @ 0x2C
   985   00002D                     	ds	1
   986   00002E                     convert_uint16_to_string@Temp_String:
   987                           	callstack 0
   988                           
   989                           ; 6 bytes @ 0x2D
   990   00002E                     	ds	6
   991   000034                     convert_uint16_to_string@DataCounter:
   992                           	callstack 0
   993                           
   994                           ; 1 bytes @ 0x33
   995   000034                     	ds	1
   996   000035                     lcd_send_number_pos@lcd:
   997                           	callstack 0
   998                           
   999                           ; 1 bytes @ 0x34
  1000   000035                     	ds	1
  1001   000036                     lcd_send_number_pos@row:
  1002                           	callstack 0
  1003                           
  1004                           ; 1 bytes @ 0x35
  1005   000036                     	ds	1
  1006   000037                     lcd_send_number_pos@column:
  1007                           	callstack 0
  1008                           
  1009                           ; 1 bytes @ 0x36
  1010   000037                     	ds	1
  1011   000038                     lcd_send_number_pos@num:
  1012                           	callstack 0
  1013                           
  1014                           ; 2 bytes @ 0x37
  1015   000038                     	ds	2
  1016   00003A                     lcd_send_number_pos@gpio_ret:
  1017                           	callstack 0
  1018                           
  1019                           ; 1 bytes @ 0x39
  1020   00003A                     	ds	1
  1021   00003B                     lcd_send_number_pos@lcd_ret:
  1022                           	callstack 0
  1023                           
  1024                           ; 1 bytes @ 0x3A
  1025   00003B                     	ds	1
  1026   00003C                     ??_InterruptManager:
  1027   00003C                     
  1028                           ; 1 bytes @ 0x3B
  1029   00003C                     	ds	12
  1030                           
  1031 ;;
  1032 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1033 ;;
  1034 ;; *************** function _main *****************
  1035 ;; Defined at:
  1036 ;;		line 39 in file "app.c"
  1037 ;; Parameters:    Size  Location     Type
  1038 ;;		None
  1039 ;; Auto vars:     Size  Location     Type
  1040 ;;		None
  1041 ;; Return value:  Size  Location     Type
  1042 ;;                  2  636[None  ] int 
  1043 ;; Registers used:
  1044 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1045 ;; Tracked objects:
  1046 ;;		On entry : 0/0
  1047 ;;		On exit  : 0/0
  1048 ;;		Unchanged: 0/0
  1049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1054 ;;Total ram usage:        0 bytes
  1055 ;; Hardware stack levels required when called: 15
  1056 ;; This function calls:
  1057 ;;		__init
  1058 ;; This function is called by:
  1059 ;;		Startup code after reset
  1060 ;; This function uses a non-reentrant model
  1061 ;;
  1062                           
  1063                           	psect	text0
  1064   003510                     __ptext0:
  1065                           	callstack 0
  1066   003510                     _main:
  1067                           	callstack 16
  1068   003510                     
  1069                           ;app.c: 41:     _init();
  1070   003510  EC41  F019         	call	__init	;wreg free
  1071   003514                     l637:
  1072   003514  EF8A  F01A         	goto	l637
  1073   003518  EF07  F000         	goto	start
  1074   00351C                     __end_of_main:
  1075                           	callstack 0
  1076                           
  1077 ;; *************** function __init *****************
  1078 ;; Defined at:
  1079 ;;		line 39 in file "init.c"
  1080 ;; Parameters:    Size  Location     Type
  1081 ;;		None
  1082 ;; Auto vars:     Size  Location     Type
  1083 ;;  ret             1    0        unsigned char 
  1084 ;; Return value:  Size  Location     Type
  1085 ;;                  1    wreg      void 
  1086 ;; Registers used:
  1087 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1088 ;; Tracked objects:
  1089 ;;		On entry : 0/0
  1090 ;;		On exit  : 0/0
  1091 ;;		Unchanged: 0/0
  1092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1096 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1097 ;;Total ram usage:        0 bytes
  1098 ;; Hardware stack levels used: 1
  1099 ;; Hardware stack levels required when called: 14
  1100 ;; This function calls:
  1101 ;;		_EUSART_ASYNC_Init
  1102 ;;		_dc_motor_init
  1103 ;;		_lcd_init
  1104 ;;		_led_init
  1105 ;; This function is called by:
  1106 ;;		_main
  1107 ;; This function uses a non-reentrant model
  1108 ;;
  1109                           
  1110                           	psect	text1
  1111   003282                     __ptext1:
  1112                           	callstack 0
  1113   003282                     __init:
  1114                           	callstack 16
  1115   003282  0EE3               	movlw	low _uart
  1116   003284  0100               	movlb	0	; () banked
  1117   003286  6FC2               	movwf	EUSART_ASYNC_Init@_eusart& (0+255),b
  1118   003288  EC65  F019         	call	_EUSART_ASYNC_Init	;wreg free
  1119   00328C  0E68               	movlw	low _lcd
  1120   00328E  0100               	movlb	0	; () banked
  1121   003290  6F93               	movwf	lcd_init@lcd& (0+255),b
  1122   003292  EC4F  F012         	call	_lcd_init	;wreg free
  1123   003296  0E71               	movlw	low _air_conditioners
  1124   003298  0100               	movlb	0	; () banked
  1125   00329A  6F8C               	movwf	dc_motor_init@dc_motor& (0+255),b
  1126   00329C  EC1C  F019         	call	_dc_motor_init	;wreg free
  1127   0032A0  0E6E               	movlw	low _heater
  1128   0032A2  0100               	movlb	0	; () banked
  1129   0032A4  6F8C               	movwf	dc_motor_init@dc_motor& (0+255),b
  1130   0032A6  EC1C  F019         	call	_dc_motor_init	;wreg free
  1131   0032AA                     
  1132                           ;init.c: 45:     led_init(&led_red);
  1133   0032AA  0E74               	movlw	low _led_red
  1134   0032AC  0100               	movlb	0	; () banked
  1135   0032AE  6F8C               	movwf	led_init@led& (0+255),b
  1136   0032B0  ECF7  F018         	call	_led_init	;wreg free
  1137   0032B4                     
  1138                           ;init.c: 46:     led_init(&led_white);
  1139   0032B4  0E76               	movlw	low _led_white
  1140   0032B6  0100               	movlb	0	; () banked
  1141   0032B8  6F8C               	movwf	led_init@led& (0+255),b
  1142   0032BA  ECF7  F018         	call	_led_init	;wreg free
  1143   0032BE                     
  1144                           ;init.c: 47:     led_init(&led_blue);
  1145   0032BE  0E78               	movlw	low _led_blue
  1146   0032C0  0100               	movlb	0	; () banked
  1147   0032C2  6F8C               	movwf	led_init@led& (0+255),b
  1148   0032C4  ECF7  F018         	call	_led_init	;wreg free
  1149   0032C8  0012               	return		;funcret
  1150   0032CA                     __end_of__init:
  1151                           	callstack 0
  1152                           
  1153 ;; *************** function _led_init *****************
  1154 ;; Defined at:
  1155 ;;		line 17 in file "ECUAL/LED/led.c"
  1156 ;; Parameters:    Size  Location     Type
  1157 ;;  led             1   12[BANK0 ] PTR struct .
  1158 ;;		 -> led_red(2), led_white(2), led_blue(2), 
  1159 ;; Auto vars:     Size  Location     Type
  1160 ;;  ret             1    0        unsigned char 
  1161 ;;  gpio_ret        1   13[BANK0 ] unsigned char 
  1162 ;; Return value:  Size  Location     Type
  1163 ;;                  1    wreg      unsigned char 
  1164 ;; Registers used:
  1165 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1166 ;; Tracked objects:
  1167 ;;		On entry : 0/0
  1168 ;;		On exit  : 0/0
  1169 ;;		Unchanged: 0/0
  1170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1171 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1172 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1174 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1175 ;;Total ram usage:        2 bytes
  1176 ;; Hardware stack levels used: 1
  1177 ;; Hardware stack levels required when called: 12
  1178 ;; This function calls:
  1179 ;;		_gpio_pin_output_low_init
  1180 ;; This function is called by:
  1181 ;;		__init
  1182 ;; This function uses a non-reentrant model
  1183 ;;
  1184                           
  1185                           	psect	text2
  1186   0031EE                     __ptext2:
  1187                           	callstack 0
  1188   0031EE                     _led_init:
  1189                           	callstack 17
  1190   0031EE                     
  1191                           ;ECUAL/LED/led.c: 20:     Std_ReturnType gpio_ret=(Std_ReturnType)0x00;
  1192   0031EE  0E00               	movlw	0
  1193   0031F0  0100               	movlb	0	; () banked
  1194   0031F2  6F8D               	movwf	led_init@gpio_ret& (0+255),b
  1195                           
  1196                           ;ECUAL/LED/led.c: 21:     if(((void*)0)==led){
  1197   0031F4  518C               	movf	led_init@led& (0+255),w,b
  1198   0031F6  A4D8               	btfss	status,2,c
  1199   0031F8  EF00  F019         	goto	u5051
  1200   0031FC  EF02  F019         	goto	u5050
  1201   003200                     u5051:
  1202   003200  EF04  F019         	goto	l5224
  1203   003204                     u5050:
  1204   003204                     
  1205                           ; BSR set to: 0
  1206                           ;ECUAL/LED/led.c: 23:     }
  1207   003204  EF1B  F019         	goto	l170
  1208   003208                     l5224:
  1209                           
  1210                           ; BSR set to: 0
  1211   003208  C08C  F088         	movff	led_init@led,gpio_pin_output_low_init@pin
  1212   00320C  EC3A  F017         	call	_gpio_pin_output_low_init	;wreg free
  1213   003210                     
  1214                           ;ECUAL/LED/led.c: 26:         led->led_state=led->led_pin.logic;
  1215   003210  0100               	movlb	0	; () banked
  1216   003212  518C               	movf	led_init@led& (0+255),w,b
  1217   003214  6ED9               	movwf	fsr2l,c
  1218   003216  6ADA               	clrf	fsr2h,c
  1219   003218  0E01               	movlw	1
  1220   00321A  26D9               	addwf	fsr2l,f,c
  1221   00321C  518C               	movf	led_init@led& (0+255),w,b
  1222   00321E  6EE1               	movwf	fsr1l,c
  1223   003220  6AE2               	clrf	fsr1h,c
  1224   003222  BEE7               	btfsc	indf1,7,c
  1225   003224  EF16  F019         	goto	u5061
  1226   003228  EF19  F019         	goto	u5060
  1227   00322C                     u5061:
  1228   00322C  0E01               	movlw	1
  1229   00322E  EF1A  F019         	goto	u5066
  1230   003232                     u5060:
  1231   003232  0E00               	movlw	0
  1232   003234                     u5066:
  1233   003234  6EDF               	movwf	indf2,c
  1234   003236                     l170:
  1235                           
  1236                           ; BSR set to: 0
  1237   003236  0012               	return		;funcret
  1238   003238                     __end_of_led_init:
  1239                           	callstack 0
  1240                           
  1241 ;; *************** function _lcd_init *****************
  1242 ;; Defined at:
  1243 ;;		line 30 in file "ECUAL/LCD/lcd.c"
  1244 ;; Parameters:    Size  Location     Type
  1245 ;;  lcd             1   19[BANK0 ] PTR struct .
  1246 ;;		 -> lcd(6), 
  1247 ;; Auto vars:     Size  Location     Type
  1248 ;;  lcd_ret         1   25[BANK0 ] unsigned char 
  1249 ;;  pins_counter    1   24[BANK0 ] unsigned char 
  1250 ;;  ret             1   23[BANK0 ] unsigned char 
  1251 ;;  gpio_ret        1   22[BANK0 ] unsigned char 
  1252 ;; Return value:  Size  Location     Type
  1253 ;;                  1    wreg      unsigned char 
  1254 ;; Registers used:
  1255 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1256 ;; Tracked objects:
  1257 ;;		On entry : 0/0
  1258 ;;		On exit  : 0/0
  1259 ;;		Unchanged: 0/0
  1260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1261 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1262 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1263 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1264 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1265 ;;Total ram usage:        7 bytes
  1266 ;; Hardware stack levels used: 1
  1267 ;; Hardware stack levels required when called: 13
  1268 ;; This function calls:
  1269 ;;		_gpio_pin_output_low_init
  1270 ;;		_lcd_send_command
  1271 ;; This function is called by:
  1272 ;;		__init
  1273 ;; This function uses a non-reentrant model
  1274 ;;
  1275                           
  1276                           	psect	text3
  1277   00249E                     __ptext3:
  1278                           	callstack 0
  1279   00249E                     _lcd_init:
  1280                           	callstack 16
  1281   00249E                     
  1282                           ;ECUAL/LCD/lcd.c: 33:     Std_ReturnType gpio_ret=(Std_ReturnType)0x00;
  1283   00249E  0E00               	movlw	0
  1284   0024A0  0100               	movlb	0	; () banked
  1285   0024A2  6F96               	movwf	lcd_init@gpio_ret& (0+255),b
  1286                           
  1287                           ;ECUAL/LCD/lcd.c: 34:     Std_ReturnType lcd_ret=(Std_ReturnType)0x00;
  1288   0024A4  0E00               	movlw	0
  1289   0024A6  6F99               	movwf	lcd_init@lcd_ret& (0+255),b
  1290                           
  1291                           ;ECUAL/LCD/lcd.c: 35:     uint8 pins_counter;;ECUAL/LCD/lcd.c: 36:     if(((void*)0)==lc
      +                          d){
  1292   0024A8  5193               	movf	lcd_init@lcd& (0+255),w,b
  1293   0024AA  A4D8               	btfss	status,2,c
  1294   0024AC  EF5A  F012         	goto	u5031
  1295   0024B0  EF5C  F012         	goto	u5030
  1296   0024B4                     u5031:
  1297   0024B4  EF60  F012         	goto	l5182
  1298   0024B8                     u5030:
  1299   0024B8                     
  1300                           ; BSR set to: 0
  1301                           ;ECUAL/LCD/lcd.c: 37:         ret=(Std_ReturnType)0x00;
  1302   0024B8  0E00               	movlw	0
  1303   0024BA  6F97               	movwf	lcd_init@ret& (0+255),b
  1304                           
  1305                           ;ECUAL/LCD/lcd.c: 38:     }
  1306   0024BC  EFE1  F012         	goto	l5216
  1307   0024C0                     l5182:
  1308                           
  1309                           ; BSR set to: 0
  1310                           ;ECUAL/LCD/lcd.c: 40:         gpio_ret=gpio_pin_output_low_init(&(lcd->lcd_en));
  1311   0024C0  2993               	incf	lcd_init@lcd& (0+255),w,b
  1312   0024C2  6F88               	movwf	gpio_pin_output_low_init@pin& (0+255),b
  1313   0024C4  EC3A  F017         	call	_gpio_pin_output_low_init	;wreg free
  1314   0024C8  0100               	movlb	0	; () banked
  1315   0024CA  6F96               	movwf	lcd_init@gpio_ret& (0+255),b
  1316                           
  1317                           ;ECUAL/LCD/lcd.c: 41:         gpio_ret=gpio_pin_output_low_init(&(lcd->lcd_rs));
  1318   0024CC  C093  F088         	movff	lcd_init@lcd,gpio_pin_output_low_init@pin
  1319   0024D0  EC3A  F017         	call	_gpio_pin_output_low_init	;wreg free
  1320   0024D4  0100               	movlb	0	; () banked
  1321   0024D6  6F96               	movwf	lcd_init@gpio_ret& (0+255),b
  1322   0024D8                     
  1323                           ; BSR set to: 0
  1324                           ;ECUAL/LCD/lcd.c: 42:         for(pins_counter=0;pins_counter<n;pins_counter++){
  1325   0024D8  0E00               	movlw	0
  1326   0024DA  6F98               	movwf	lcd_init@pins_counter& (0+255),b
  1327   0024DC  EF78  F012         	goto	l5190
  1328   0024E0                     l5186:
  1329                           
  1330                           ; BSR set to: 0
  1331   0024E0  5193               	movf	lcd_init@lcd& (0+255),w,b
  1332   0024E2  2598               	addwf	lcd_init@pins_counter& (0+255),w,b
  1333   0024E4  0F02               	addlw	2
  1334   0024E6  6F88               	movwf	gpio_pin_output_low_init@pin& (0+255),b
  1335   0024E8  EC3A  F017         	call	_gpio_pin_output_low_init	;wreg free
  1336   0024EC                     
  1337                           ;ECUAL/LCD/lcd.c: 44:         }
  1338   0024EC  0100               	movlb	0	; () banked
  1339   0024EE  2B98               	incf	lcd_init@pins_counter& (0+255),f,b
  1340   0024F0                     l5190:
  1341                           
  1342                           ; BSR set to: 0
  1343   0024F0  51E2               	movf	_n& (0+255),w,b
  1344   0024F2  5D98               	subwf	lcd_init@pins_counter& (0+255),w,b
  1345   0024F4  A0D8               	btfss	status,0,c
  1346   0024F6  EF7F  F012         	goto	u5041
  1347   0024FA  EF81  F012         	goto	u5040
  1348   0024FE                     u5041:
  1349   0024FE  EF70  F012         	goto	l5186
  1350   002502                     u5040:
  1351   002502                     
  1352                           ; BSR set to: 0
  1353                           ;ECUAL/LCD/lcd.c: 45:         _delay((unsigned long)((20)*(8000000/4000.0)));
  1354   002502  0E34               	movlw	52
  1355   002504  0100               	movlb	0	; () banked
  1356   002506  6F94               	movwf	??_lcd_init& (0+255),b
  1357   002508  0EF1               	movlw	241
  1358   00250A                     u5327:
  1359   00250A  2EE8               	decfsz	wreg,f,c
  1360   00250C  D7FE               	bra	u5327
  1361   00250E  2F94               	decfsz	??_lcd_init& (0+255),f,b
  1362   002510  D7FC               	bra	u5327
  1363   002512  D000               	nop2	
  1364   002514  C093  F08E         	movff	lcd_init@lcd,lcd_send_command@lcd
  1365   002518  0E38               	movlw	56
  1366   00251A  0100               	movlb	0	; () banked
  1367   00251C  6F8F               	movwf	lcd_send_command@command& (0+255),b
  1368   00251E  EC96  F016         	call	_lcd_send_command	;wreg free
  1369   002522                     
  1370                           ;ECUAL/LCD/lcd.c: 47:         _delay((unsigned long)((5)*(8000000/4000.0)));
  1371   002522  0E0D               	movlw	13
  1372   002524  0100               	movlb	0	; () banked
  1373   002526  6F94               	movwf	??_lcd_init& (0+255),b
  1374   002528  0EFB               	movlw	251
  1375   00252A                     u5337:
  1376   00252A  2EE8               	decfsz	wreg,f,c
  1377   00252C  D7FE               	bra	u5337
  1378   00252E  2F94               	decfsz	??_lcd_init& (0+255),f,b
  1379   002530  D7FC               	bra	u5337
  1380   002532  D000               	nop2	
  1381   002534  C093  F08E         	movff	lcd_init@lcd,lcd_send_command@lcd
  1382   002538  0E38               	movlw	56
  1383   00253A  0100               	movlb	0	; () banked
  1384   00253C  6F8F               	movwf	lcd_send_command@command& (0+255),b
  1385   00253E  EC96  F016         	call	_lcd_send_command	;wreg free
  1386   002542                     
  1387                           ;ECUAL/LCD/lcd.c: 49:         _delay((unsigned long)((150)*(8000000/4000.0)));
  1388   002542  0E02               	movlw	2
  1389   002544  0100               	movlb	0	; () banked
  1390   002546  6F95               	movwf	(??_lcd_init+1)& (0+255),b
  1391   002548  0E86               	movlw	134
  1392   00254A  6F94               	movwf	??_lcd_init& (0+255),b
  1393   00254C  0E99               	movlw	153
  1394   00254E                     u5347:
  1395   00254E  2EE8               	decfsz	wreg,f,c
  1396   002550  D7FE               	bra	u5347
  1397   002552  2F94               	decfsz	??_lcd_init& (0+255),f,b
  1398   002554  D7FC               	bra	u5347
  1399   002556  2F95               	decfsz	(??_lcd_init+1)& (0+255),f,b
  1400   002558  D7FA               	bra	u5347
  1401   00255A  C093  F08E         	movff	lcd_init@lcd,lcd_send_command@lcd
  1402   00255E  0E38               	movlw	56
  1403   002560  0100               	movlb	0	; () banked
  1404   002562  6F8F               	movwf	lcd_send_command@command& (0+255),b
  1405   002564  EC96  F016         	call	_lcd_send_command	;wreg free
  1406   002568  C093  F08E         	movff	lcd_init@lcd,lcd_send_command@lcd
  1407   00256C  0E01               	movlw	1
  1408   00256E  0100               	movlb	0	; () banked
  1409   002570  6F8F               	movwf	lcd_send_command@command& (0+255),b
  1410   002572  EC96  F016         	call	_lcd_send_command	;wreg free
  1411   002576  C093  F08E         	movff	lcd_init@lcd,lcd_send_command@lcd
  1412   00257A  0E02               	movlw	2
  1413   00257C  0100               	movlb	0	; () banked
  1414   00257E  6F8F               	movwf	lcd_send_command@command& (0+255),b
  1415   002580  EC96  F016         	call	_lcd_send_command	;wreg free
  1416   002584  C093  F08E         	movff	lcd_init@lcd,lcd_send_command@lcd
  1417   002588  0E06               	movlw	6
  1418   00258A  0100               	movlb	0	; () banked
  1419   00258C  6F8F               	movwf	lcd_send_command@command& (0+255),b
  1420   00258E  EC96  F016         	call	_lcd_send_command	;wreg free
  1421   002592  C093  F08E         	movff	lcd_init@lcd,lcd_send_command@lcd
  1422   002596  0E0C               	movlw	12
  1423   002598  0100               	movlb	0	; () banked
  1424   00259A  6F8F               	movwf	lcd_send_command@command& (0+255),b
  1425   00259C  EC96  F016         	call	_lcd_send_command	;wreg free
  1426   0025A0  C093  F08E         	movff	lcd_init@lcd,lcd_send_command@lcd
  1427   0025A4  0E80               	movlw	128
  1428   0025A6  0100               	movlb	0	; () banked
  1429   0025A8  6F8F               	movwf	lcd_send_command@command& (0+255),b
  1430   0025AA  EC96  F016         	call	_lcd_send_command	;wreg free
  1431   0025AE  C093  F08E         	movff	lcd_init@lcd,lcd_send_command@lcd
  1432   0025B2  0E28               	movlw	40
  1433   0025B4  0100               	movlb	0	; () banked
  1434   0025B6  6F8F               	movwf	lcd_send_command@command& (0+255),b
  1435   0025B8  EC96  F016         	call	_lcd_send_command	;wreg free
  1436   0025BC                     
  1437                           ;ECUAL/LCD/lcd.c: 63:         ret=(Std_ReturnType)0x01;
  1438   0025BC  0E01               	movlw	1
  1439   0025BE  0100               	movlb	0	; () banked
  1440   0025C0  6F97               	movwf	lcd_init@ret& (0+255),b
  1441   0025C2                     l5216:
  1442                           
  1443                           ; BSR set to: 0
  1444                           ;ECUAL/LCD/lcd.c: 66:     return ret;
  1445   0025C2  5197               	movf	lcd_init@ret& (0+255),w,b
  1446   0025C4                     
  1447                           ; BSR set to: 0
  1448   0025C4  0012               	return		;funcret
  1449   0025C6                     __end_of_lcd_init:
  1450                           	callstack 0
  1451                           
  1452 ;; *************** function _lcd_send_command *****************
  1453 ;; Defined at:
  1454 ;;		line 78 in file "ECUAL/LCD/lcd.c"
  1455 ;; Parameters:    Size  Location     Type
  1456 ;;  lcd             1   14[BANK0 ] PTR struct .
  1457 ;;		 -> lcd(6), 
  1458 ;;  command         1   15[BANK0 ] unsigned char 
  1459 ;; Auto vars:     Size  Location     Type
  1460 ;;  ret             1   18[BANK0 ] unsigned char 
  1461 ;;  lcd_ret         1   17[BANK0 ] unsigned char 
  1462 ;;  gpio_ret        1   16[BANK0 ] unsigned char 
  1463 ;; Return value:  Size  Location     Type
  1464 ;;                  1    wreg      unsigned char 
  1465 ;; Registers used:
  1466 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1467 ;; Tracked objects:
  1468 ;;		On entry : 0/0
  1469 ;;		On exit  : 0/0
  1470 ;;		Unchanged: 0/0
  1471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1472 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1473 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1475 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1476 ;;Total ram usage:        5 bytes
  1477 ;; Hardware stack levels used: 1
  1478 ;; Hardware stack levels required when called: 12
  1479 ;; This function calls:
  1480 ;;		_gpio_pin_logic_write
  1481 ;;		_lcd_send_enable
  1482 ;;		_lcd_send_nbits
  1483 ;; This function is called by:
  1484 ;;		_lcd_init
  1485 ;;		_lcd_send_custom_char
  1486 ;; This function uses a non-reentrant model
  1487 ;;
  1488                           
  1489                           	psect	text4
  1490   002D2C                     __ptext4:
  1491                           	callstack 0
  1492   002D2C                     _lcd_send_command:
  1493                           	callstack 16
  1494   002D2C                     
  1495                           ;ECUAL/LCD/lcd.c: 81:     Std_ReturnType gpio_ret=(Std_ReturnType)0x00;
  1496   002D2C  0E00               	movlw	0
  1497   002D2E  0100               	movlb	0	; () banked
  1498   002D30  6F90               	movwf	lcd_send_command@gpio_ret& (0+255),b
  1499                           
  1500                           ;ECUAL/LCD/lcd.c: 82:     Std_ReturnType lcd_ret=(Std_ReturnType)0x00;
  1501   002D32  0E00               	movlw	0
  1502   002D34  6F91               	movwf	lcd_send_command@lcd_ret& (0+255),b
  1503                           
  1504                           ;ECUAL/LCD/lcd.c: 83:     if(((void*)0)==lcd){
  1505   002D36  518E               	movf	lcd_send_command@lcd& (0+255),w,b
  1506   002D38  A4D8               	btfss	status,2,c
  1507   002D3A  EFA1  F016         	goto	u4961
  1508   002D3E  EFA3  F016         	goto	u4960
  1509   002D42                     u4961:
  1510   002D42  EFA7  F016         	goto	l5118
  1511   002D46                     u4960:
  1512   002D46                     
  1513                           ; BSR set to: 0
  1514                           ;ECUAL/LCD/lcd.c: 84:         ret=(Std_ReturnType)0x00;
  1515   002D46  0E00               	movlw	0
  1516   002D48  6F92               	movwf	lcd_send_command@ret& (0+255),b
  1517                           
  1518                           ;ECUAL/LCD/lcd.c: 85:     }
  1519   002D4A  EFCD  F016         	goto	l5122
  1520   002D4E                     l5118:
  1521                           
  1522                           ; BSR set to: 0
  1523   002D4E  C08E  F080         	movff	lcd_send_command@lcd,gpio_pin_logic_write@pin
  1524   002D52  0E00               	movlw	0
  1525   002D54  6F81               	movwf	gpio_pin_logic_write@pin_logic& (0+255),b
  1526   002D56  EC79  F010         	call	_gpio_pin_logic_write	;wreg free
  1527                           
  1528                           ;ECUAL/LCD/lcd.c: 89:         lcd_ret=lcd_send_nbits(lcd,command>>4);
  1529   002D5A  C08E  F088         	movff	lcd_send_command@lcd,lcd_send_nbits@lcd
  1530   002D5E  0100               	movlb	0	; () banked
  1531   002D60  398F               	swapf	lcd_send_command@command& (0+255),w,b
  1532   002D62  0B0F               	andlw	15
  1533   002D64  6F89               	movwf	lcd_send_nbits@data_or_command& (0+255),b
  1534   002D66  EC04  F018         	call	_lcd_send_nbits	;wreg free
  1535   002D6A  0100               	movlb	0	; () banked
  1536   002D6C  6F91               	movwf	lcd_send_command@lcd_ret& (0+255),b
  1537                           
  1538                           ;ECUAL/LCD/lcd.c: 90:         lcd_ret=lcd_send_enable(lcd);
  1539   002D6E  C08E  F088         	movff	lcd_send_command@lcd,lcd_send_enable@lcd
  1540   002D72  EC44  F01A         	call	_lcd_send_enable	;wreg free
  1541   002D76  0100               	movlb	0	; () banked
  1542   002D78  6F91               	movwf	lcd_send_command@lcd_ret& (0+255),b
  1543                           
  1544                           ;ECUAL/LCD/lcd.c: 91:         lcd_ret=lcd_send_nbits(lcd,command);
  1545   002D7A  C08E  F088         	movff	lcd_send_command@lcd,lcd_send_nbits@lcd
  1546   002D7E  C08F  F089         	movff	lcd_send_command@command,lcd_send_nbits@data_or_command
  1547   002D82  EC04  F018         	call	_lcd_send_nbits	;wreg free
  1548   002D86  0100               	movlb	0	; () banked
  1549   002D88  6F91               	movwf	lcd_send_command@lcd_ret& (0+255),b
  1550                           
  1551                           ;ECUAL/LCD/lcd.c: 92:         lcd_ret=lcd_send_enable(lcd);
  1552   002D8A  C08E  F088         	movff	lcd_send_command@lcd,lcd_send_enable@lcd
  1553   002D8E  EC44  F01A         	call	_lcd_send_enable	;wreg free
  1554   002D92  0100               	movlb	0	; () banked
  1555   002D94  6F91               	movwf	lcd_send_command@lcd_ret& (0+255),b
  1556   002D96                     
  1557                           ; BSR set to: 0
  1558                           ;ECUAL/LCD/lcd.c: 100:         ret=(Std_ReturnType)0x01;
  1559   002D96  0E01               	movlw	1
  1560   002D98  6F92               	movwf	lcd_send_command@ret& (0+255),b
  1561   002D9A                     l5122:
  1562                           
  1563                           ; BSR set to: 0
  1564                           ;ECUAL/LCD/lcd.c: 103:     return ret;
  1565   002D9A  5192               	movf	lcd_send_command@ret& (0+255),w,b
  1566   002D9C                     
  1567                           ; BSR set to: 0
  1568   002D9C  0012               	return		;funcret
  1569   002D9E                     __end_of_lcd_send_command:
  1570                           	callstack 0
  1571                           
  1572 ;; *************** function _lcd_send_nbits *****************
  1573 ;; Defined at:
  1574 ;;		line 376 in file "ECUAL/LCD/lcd.c"
  1575 ;; Parameters:    Size  Location     Type
  1576 ;;  lcd             1    8[BANK0 ] PTR struct .
  1577 ;;		 -> lcd(6), 
  1578 ;;  data_or_comm    1    9[BANK0 ] unsigned char 
  1579 ;; Auto vars:     Size  Location     Type
  1580 ;;  pin_counter     1   13[BANK0 ] unsigned char 
  1581 ;;  ret             1   12[BANK0 ] unsigned char 
  1582 ;;  gpio_ret        1    0        unsigned char 
  1583 ;; Return value:  Size  Location     Type
  1584 ;;                  1    wreg      unsigned char 
  1585 ;; Registers used:
  1586 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1587 ;; Tracked objects:
  1588 ;;		On entry : 0/0
  1589 ;;		On exit  : 0/0
  1590 ;;		Unchanged: 0/0
  1591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1592 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1593 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1594 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1595 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1596 ;;Total ram usage:        6 bytes
  1597 ;; Hardware stack levels used: 1
  1598 ;; Hardware stack levels required when called: 11
  1599 ;; This function calls:
  1600 ;;		_gpio_pin_logic_write
  1601 ;; This function is called by:
  1602 ;;		_lcd_send_command
  1603 ;; This function uses a non-reentrant model
  1604 ;;
  1605                           
  1606                           	psect	text5
  1607   003008                     __ptext5:
  1608                           	callstack 0
  1609   003008                     _lcd_send_nbits:
  1610                           	callstack 16
  1611   003008                     
  1612                           ;ECUAL/LCD/lcd.c: 378:     uint8 pin_counter;;ECUAL/LCD/lcd.c: 379:     Std_ReturnType r
      +                          et=(Std_ReturnType)0x00;
  1613   003008  0E00               	movlw	0
  1614   00300A  0100               	movlb	0	; () banked
  1615   00300C  6F8C               	movwf	lcd_send_nbits@ret& (0+255),b
  1616                           
  1617                           ;ECUAL/LCD/lcd.c: 381:     for(pin_counter=0;pin_counter<n;pin_counter++){
  1618   00300E  0E00               	movlw	0
  1619   003010  6F8D               	movwf	lcd_send_nbits@pin_counter& (0+255),b
  1620   003012  EF23  F018         	goto	l5008
  1621   003016                     l5004:
  1622                           
  1623                           ; BSR set to: 0
  1624   003016  5188               	movf	lcd_send_nbits@lcd& (0+255),w,b
  1625   003018  258D               	addwf	lcd_send_nbits@pin_counter& (0+255),w,b
  1626   00301A  0F02               	addlw	2
  1627   00301C  6F80               	movwf	gpio_pin_logic_write@pin& (0+255),b
  1628   00301E  C08D  F08A         	movff	lcd_send_nbits@pin_counter,??_lcd_send_nbits
  1629   003022  C089  F08B         	movff	lcd_send_nbits@data_or_command,??_lcd_send_nbits+1
  1630   003026  2B8A               	incf	??_lcd_send_nbits& (0+255),f,b
  1631   003028  EF18  F018         	goto	u4804
  1632   00302C                     u4805:
  1633   00302C  90D8               	bcf	status,0,c
  1634   00302E  338B               	rrcf	(??_lcd_send_nbits+1)& (0+255),f,b
  1635   003030                     u4804:
  1636   003030  2F8A               	decfsz	??_lcd_send_nbits& (0+255),f,b
  1637   003032  EF16  F018         	goto	u4805
  1638   003036  0100               	movlb	0	; () banked
  1639   003038  518B               	movf	(??_lcd_send_nbits+1)& (0+255),w,b
  1640   00303A  0B01               	andlw	1
  1641   00303C  6F81               	movwf	gpio_pin_logic_write@pin_logic& (0+255),b
  1642   00303E  EC79  F010         	call	_gpio_pin_logic_write	;wreg free
  1643   003042                     
  1644                           ;ECUAL/LCD/lcd.c: 383:     }
  1645   003042  0100               	movlb	0	; () banked
  1646   003044  2B8D               	incf	lcd_send_nbits@pin_counter& (0+255),f,b
  1647   003046                     l5008:
  1648                           
  1649                           ; BSR set to: 0
  1650   003046  51E2               	movf	_n& (0+255),w,b
  1651   003048  5D8D               	subwf	lcd_send_nbits@pin_counter& (0+255),w,b
  1652   00304A  A0D8               	btfss	status,0,c
  1653   00304C  EF2A  F018         	goto	u4811
  1654   003050  EF2C  F018         	goto	u4810
  1655   003054                     u4811:
  1656   003054  EF0B  F018         	goto	l5004
  1657   003058                     u4810:
  1658   003058                     
  1659                           ; BSR set to: 0
  1660                           ;ECUAL/LCD/lcd.c: 385:     return ret;
  1661   003058  518C               	movf	lcd_send_nbits@ret& (0+255),w,b
  1662   00305A                     
  1663                           ; BSR set to: 0
  1664   00305A  0012               	return		;funcret
  1665   00305C                     __end_of_lcd_send_nbits:
  1666                           	callstack 0
  1667                           
  1668 ;; *************** function _lcd_send_enable *****************
  1669 ;; Defined at:
  1670 ;;		line 388 in file "ECUAL/LCD/lcd.c"
  1671 ;; Parameters:    Size  Location     Type
  1672 ;;  lcd             1    8[BANK0 ] PTR struct .
  1673 ;;		 -> lcd(6), 
  1674 ;; Auto vars:     Size  Location     Type
  1675 ;;  ret             1    0        unsigned char 
  1676 ;;  gpio_ret        1    9[BANK0 ] unsigned char 
  1677 ;; Return value:  Size  Location     Type
  1678 ;;                  1    wreg      unsigned char 
  1679 ;; Registers used:
  1680 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1681 ;; Tracked objects:
  1682 ;;		On entry : 0/0
  1683 ;;		On exit  : 0/0
  1684 ;;		Unchanged: 0/0
  1685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1686 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1687 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1689 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1690 ;;Total ram usage:        2 bytes
  1691 ;; Hardware stack levels used: 1
  1692 ;; Hardware stack levels required when called: 11
  1693 ;; This function calls:
  1694 ;;		_gpio_pin_logic_write
  1695 ;; This function is called by:
  1696 ;;		_lcd_send_command
  1697 ;; This function uses a non-reentrant model
  1698 ;;
  1699                           
  1700                           	psect	text6
  1701   003488                     __ptext6:
  1702                           	callstack 0
  1703   003488                     _lcd_send_enable:
  1704                           	callstack 16
  1705   003488                     
  1706                           ;ECUAL/LCD/lcd.c: 391:     Std_ReturnType gpio_ret=(Std_ReturnType)0x00;
  1707   003488  0E00               	movlw	0
  1708   00348A  0100               	movlb	0	; () banked
  1709   00348C  6F89               	movwf	lcd_send_enable@gpio_ret& (0+255),b
  1710   00348E                     
  1711                           ; BSR set to: 0
  1712   00348E  2988               	incf	lcd_send_enable@lcd& (0+255),w,b
  1713   003490  6F80               	movwf	gpio_pin_logic_write@pin& (0+255),b
  1714   003492  0E01               	movlw	1
  1715   003494  6F81               	movwf	gpio_pin_logic_write@pin_logic& (0+255),b
  1716   003496  EC79  F010         	call	_gpio_pin_logic_write	;wreg free
  1717   00349A                     
  1718                           ;ECUAL/LCD/lcd.c: 393:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  1719   00349A  0E03               	movlw	3
  1720   00349C                     u5357:
  1721   00349C  2EE8               	decfsz	wreg,f,c
  1722   00349E  D7FE               	bra	u5357
  1723   0034A0  0000               	nop	
  1724   0034A2  0100               	movlb	0	; () banked
  1725   0034A4  2988               	incf	lcd_send_enable@lcd& (0+255),w,b
  1726   0034A6  6F80               	movwf	gpio_pin_logic_write@pin& (0+255),b
  1727   0034A8  0E00               	movlw	0
  1728   0034AA  6F81               	movwf	gpio_pin_logic_write@pin_logic& (0+255),b
  1729   0034AC  EC79  F010         	call	_gpio_pin_logic_write	;wreg free
  1730   0034B0                     
  1731                           ;ECUAL/LCD/lcd.c: 396:     return ret;
  1732   0034B0  0E00               	movlw	0
  1733   0034B2  0012               	return		;funcret
  1734   0034B4                     __end_of_lcd_send_enable:
  1735                           	callstack 0
  1736                           
  1737 ;; *************** function _dc_motor_init *****************
  1738 ;; Defined at:
  1739 ;;		line 16 in file "ECUAL/DC_MOTOR/dc_motor.c"
  1740 ;; Parameters:    Size  Location     Type
  1741 ;;  dc_motor        1   12[BANK0 ] PTR struct .
  1742 ;;		 -> heater(3), air_conditioners(3), 
  1743 ;; Auto vars:     Size  Location     Type
  1744 ;;  ret             1   14[BANK0 ] unsigned char 
  1745 ;;  gpio_ret        1   13[BANK0 ] unsigned char 
  1746 ;; Return value:  Size  Location     Type
  1747 ;;                  1    wreg      unsigned char 
  1748 ;; Registers used:
  1749 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1750 ;; Tracked objects:
  1751 ;;		On entry : 0/0
  1752 ;;		On exit  : 0/0
  1753 ;;		Unchanged: 0/0
  1754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1755 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1756 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1758 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1759 ;;Total ram usage:        3 bytes
  1760 ;; Hardware stack levels used: 1
  1761 ;; Hardware stack levels required when called: 12
  1762 ;; This function calls:
  1763 ;;		_gpio_pin_output_low_init
  1764 ;; This function is called by:
  1765 ;;		__init
  1766 ;; This function uses a non-reentrant model
  1767 ;;
  1768                           
  1769                           	psect	text7
  1770   003238                     __ptext7:
  1771                           	callstack 0
  1772   003238                     _dc_motor_init:
  1773                           	callstack 17
  1774   003238                     
  1775                           ;ECUAL/DC_MOTOR/dc_motor.c: 19:     Std_ReturnType gpio_ret=(Std_ReturnType)0x00;
  1776   003238  0E00               	movlw	0
  1777   00323A  0100               	movlb	0	; () banked
  1778   00323C  6F8D               	movwf	dc_motor_init@gpio_ret& (0+255),b
  1779                           
  1780                           ;ECUAL/DC_MOTOR/dc_motor.c: 20:     if(((void*)0)==dc_motor){
  1781   00323E  518C               	movf	dc_motor_init@dc_motor& (0+255),w,b
  1782   003240  A4D8               	btfss	status,2,c
  1783   003242  EF25  F019         	goto	u5021
  1784   003246  EF27  F019         	goto	u5020
  1785   00324A                     u5021:
  1786   00324A  EF2B  F019         	goto	l5168
  1787   00324E                     u5020:
  1788   00324E                     
  1789                           ; BSR set to: 0
  1790                           ;ECUAL/DC_MOTOR/dc_motor.c: 21:         ret=(Std_ReturnType)0x00;
  1791   00324E  0E00               	movlw	0
  1792   003250  6F8E               	movwf	dc_motor_init@ret& (0+255),b
  1793                           
  1794                           ;ECUAL/DC_MOTOR/dc_motor.c: 22:     }
  1795   003252  EF3F  F019         	goto	l5174
  1796   003256                     l5168:
  1797                           
  1798                           ; BSR set to: 0
  1799                           ;ECUAL/DC_MOTOR/dc_motor.c: 24:         gpio_ret=gpio_pin_output_low_init(&(dc_motor->dc
      +                          _motor_pin0));
  1800   003256  C08C  F088         	movff	dc_motor_init@dc_motor,gpio_pin_output_low_init@pin
  1801   00325A  EC3A  F017         	call	_gpio_pin_output_low_init	;wreg free
  1802   00325E  0100               	movlb	0	; () banked
  1803   003260  6F8D               	movwf	dc_motor_init@gpio_ret& (0+255),b
  1804                           
  1805                           ;ECUAL/DC_MOTOR/dc_motor.c: 25:         gpio_ret=gpio_pin_output_low_init(&(dc_motor->dc
      +                          _motor_pin1));
  1806   003262  298C               	incf	dc_motor_init@dc_motor& (0+255),w,b
  1807   003264  6F88               	movwf	gpio_pin_output_low_init@pin& (0+255),b
  1808   003266  EC3A  F017         	call	_gpio_pin_output_low_init	;wreg free
  1809   00326A  0100               	movlb	0	; () banked
  1810   00326C  6F8D               	movwf	dc_motor_init@gpio_ret& (0+255),b
  1811   00326E                     
  1812                           ; BSR set to: 0
  1813                           ;ECUAL/DC_MOTOR/dc_motor.c: 26:         dc_motor->dc_motor_state=DC_MOTOR_OFF;
  1814   00326E  518C               	movf	dc_motor_init@dc_motor& (0+255),w,b
  1815   003270  6ED9               	movwf	fsr2l,c
  1816   003272  6ADA               	clrf	fsr2h,c
  1817   003274  0E02               	movlw	2
  1818   003276  26D9               	addwf	fsr2l,f,c
  1819   003278  6ADF               	clrf	indf2,c
  1820   00327A                     
  1821                           ; BSR set to: 0
  1822                           ;ECUAL/DC_MOTOR/dc_motor.c: 27:         ret=(Std_ReturnType)0x01;
  1823   00327A  0E01               	movlw	1
  1824   00327C  6F8E               	movwf	dc_motor_init@ret& (0+255),b
  1825   00327E                     l5174:
  1826                           
  1827                           ; BSR set to: 0
  1828                           ;ECUAL/DC_MOTOR/dc_motor.c: 30:     return ret;
  1829   00327E  518E               	movf	dc_motor_init@ret& (0+255),w,b
  1830   003280                     
  1831                           ; BSR set to: 0
  1832   003280  0012               	return		;funcret
  1833   003282                     __end_of_dc_motor_init:
  1834                           	callstack 0
  1835                           
  1836 ;; *************** function _gpio_pin_output_low_init *****************
  1837 ;; Defined at:
  1838 ;;		line 161 in file "MCAL/GPIO/gpio.c"
  1839 ;; Parameters:    Size  Location     Type
  1840 ;;  pin             1    8[BANK0 ] PTR struct .
  1841 ;;		 -> lcd$lcd_pins(4), heater(3), led_red(2), led_white(2), 
  1842 ;;		 -> led_blue(2), air_conditioners(3), lcd(6), 
  1843 ;; Auto vars:     Size  Location     Type
  1844 ;;  ret             1   11[BANK0 ] unsigned char 
  1845 ;;  gpio_ret        1   10[BANK0 ] unsigned char 
  1846 ;; Return value:  Size  Location     Type
  1847 ;;                  1    wreg      unsigned char 
  1848 ;; Registers used:
  1849 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1850 ;; Tracked objects:
  1851 ;;		On entry : 0/0
  1852 ;;		On exit  : 0/0
  1853 ;;		Unchanged: 0/0
  1854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1855 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1856 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1857 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1858 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1859 ;;Total ram usage:        4 bytes
  1860 ;; Hardware stack levels used: 1
  1861 ;; Hardware stack levels required when called: 11
  1862 ;; This function calls:
  1863 ;;		_gpio_pin_direction_init
  1864 ;;		_gpio_pin_logic_write
  1865 ;; This function is called by:
  1866 ;;		_dc_motor_init
  1867 ;;		_lcd_init
  1868 ;;		_led_init
  1869 ;; This function uses a non-reentrant model
  1870 ;;
  1871                           
  1872                           	psect	text8
  1873   002E74                     __ptext8:
  1874                           	callstack 0
  1875   002E74                     _gpio_pin_output_low_init:
  1876                           	callstack 17
  1877   002E74                     
  1878                           ;MCAL/GPIO/gpio.c: 164:     Std_ReturnType gpio_ret=(Std_ReturnType)0x00;
  1879   002E74  0E00               	movlw	0
  1880   002E76  0100               	movlb	0	; () banked
  1881   002E78  6F8A               	movwf	gpio_pin_output_low_init@gpio_ret& (0+255),b
  1882                           
  1883                           ;MCAL/GPIO/gpio.c: 165:     if(((void*)0)==pin || (pin->pin)>7){
  1884   002E7A  5188               	movf	gpio_pin_output_low_init@pin& (0+255),w,b
  1885   002E7C  B4D8               	btfsc	status,2,c
  1886   002E7E  EF43  F017         	goto	u4921
  1887   002E82  EF45  F017         	goto	u4920
  1888   002E86                     u4921:
  1889   002E86  EF55  F017         	goto	l5076
  1890   002E8A                     u4920:
  1891   002E8A                     
  1892                           ; BSR set to: 0
  1893   002E8A  5188               	movf	gpio_pin_output_low_init@pin& (0+255),w,b
  1894   002E8C  6ED9               	movwf	fsr2l,c
  1895   002E8E  6ADA               	clrf	fsr2h,c
  1896   002E90  30DF               	rrcf	223,w,c
  1897   002E92  32E8               	rrcf	wreg,f,c
  1898   002E94  32E8               	rrcf	wreg,f,c
  1899   002E96  0B07               	andlw	7
  1900   002E98  6F89               	movwf	??_gpio_pin_output_low_init& (0+255),b
  1901   002E9A  0E07               	movlw	7
  1902   002E9C  6589               	cpfsgt	??_gpio_pin_output_low_init& (0+255),b
  1903   002E9E  EF53  F017         	goto	u4931
  1904   002EA2  EF55  F017         	goto	u4930
  1905   002EA6                     u4931:
  1906   002EA6  EF59  F017         	goto	l5078
  1907   002EAA                     u4930:
  1908   002EAA                     l5076:
  1909                           
  1910                           ; BSR set to: 0
  1911                           ;MCAL/GPIO/gpio.c: 166:         ret=(Std_ReturnType)0x00;
  1912   002EAA  0E00               	movlw	0
  1913   002EAC  6F8B               	movwf	gpio_pin_output_low_init@ret& (0+255),b
  1914                           
  1915                           ;MCAL/GPIO/gpio.c: 167:     }
  1916   002EAE  EF6B  F017         	goto	l5082
  1917   002EB2                     l5078:
  1918                           
  1919                           ; BSR set to: 0
  1920                           ;MCAL/GPIO/gpio.c: 169:         gpio_ret=gpio_pin_direction_init(pin,OUTPUT);
  1921   002EB2  C088  F080         	movff	gpio_pin_output_low_init@pin,gpio_pin_direction_init@pin
  1922   002EB6  0E00               	movlw	0
  1923   002EB8  6F81               	movwf	gpio_pin_direction_init@pin_direction& (0+255),b
  1924   002EBA  EC17  F011         	call	_gpio_pin_direction_init	;wreg free
  1925   002EBE  0100               	movlb	0	; () banked
  1926   002EC0  6F8A               	movwf	gpio_pin_output_low_init@gpio_ret& (0+255),b
  1927                           
  1928                           ;MCAL/GPIO/gpio.c: 170:         gpio_ret=gpio_pin_logic_write(pin,LOW);
  1929   002EC2  C088  F080         	movff	gpio_pin_output_low_init@pin,gpio_pin_logic_write@pin
  1930   002EC6  0E00               	movlw	0
  1931   002EC8  6F81               	movwf	gpio_pin_logic_write@pin_logic& (0+255),b
  1932   002ECA  EC79  F010         	call	_gpio_pin_logic_write	;wreg free
  1933   002ECE  0100               	movlb	0	; () banked
  1934   002ED0  6F8A               	movwf	gpio_pin_output_low_init@gpio_ret& (0+255),b
  1935   002ED2                     
  1936                           ; BSR set to: 0
  1937                           ;MCAL/GPIO/gpio.c: 171:         ret=(Std_ReturnType)0x01;
  1938   002ED2  0E01               	movlw	1
  1939   002ED4  6F8B               	movwf	gpio_pin_output_low_init@ret& (0+255),b
  1940   002ED6                     l5082:
  1941                           
  1942                           ; BSR set to: 0
  1943                           ;MCAL/GPIO/gpio.c: 174:     return ret;
  1944   002ED6  518B               	movf	gpio_pin_output_low_init@ret& (0+255),w,b
  1945   002ED8                     
  1946                           ; BSR set to: 0
  1947   002ED8  0012               	return		;funcret
  1948   002EDA                     __end_of_gpio_pin_output_low_init:
  1949                           	callstack 0
  1950                           
  1951 ;; *************** function _gpio_pin_logic_write *****************
  1952 ;; Defined at:
  1953 ;;		line 81 in file "MCAL/GPIO/gpio.c"
  1954 ;; Parameters:    Size  Location     Type
  1955 ;;  pin             1    0[BANK0 ] PTR struct .
  1956 ;;		 -> lcd$lcd_pins(4), heater(3), led_red(2), led_white(2), 
  1957 ;;		 -> led_blue(2), air_conditioners(3), lcd(6), 
  1958 ;;  pin_logic       1    1[BANK0 ] enum E2978
  1959 ;; Auto vars:     Size  Location     Type
  1960 ;;  ret             1    7[BANK0 ] unsigned char 
  1961 ;; Return value:  Size  Location     Type
  1962 ;;                  1    wreg      unsigned char 
  1963 ;; Registers used:
  1964 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1965 ;; Tracked objects:
  1966 ;;		On entry : 0/0
  1967 ;;		On exit  : 0/0
  1968 ;;		Unchanged: 0/0
  1969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1970 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1971 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1972 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1973 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1974 ;;Total ram usage:        8 bytes
  1975 ;; Hardware stack levels used: 1
  1976 ;; Hardware stack levels required when called: 10
  1977 ;; This function calls:
  1978 ;;		Nothing
  1979 ;; This function is called by:
  1980 ;;		_lcd_send_command
  1981 ;;		_lcd_send_nbits
  1982 ;;		_lcd_send_enable
  1983 ;;		_gpio_pin_output_low_init
  1984 ;;		_dc_motor_move_left
  1985 ;;		_gpio_pin_output_high_init
  1986 ;; This function uses a non-reentrant model
  1987 ;;
  1988                           
  1989                           	psect	text9
  1990   0020F2                     __ptext9:
  1991                           	callstack 0
  1992   0020F2                     _gpio_pin_logic_write:
  1993                           	callstack 17
  1994   0020F2                     
  1995                           ;MCAL/GPIO/gpio.c: 84:     if(((void*)0)==pin ||(pin->pin)>7 || pin_logic>1){
  1996   0020F2  0100               	movlb	0	; () banked
  1997   0020F4  5180               	movf	gpio_pin_logic_write@pin& (0+255),w,b
  1998   0020F6  B4D8               	btfsc	status,2,c
  1999   0020F8  EF80  F010         	goto	u4711
  2000   0020FC  EF82  F010         	goto	u4710
  2001   002100                     u4711:
  2002   002100  EF9A  F010         	goto	l4938
  2003   002104                     u4710:
  2004   002104                     
  2005                           ; BSR set to: 0
  2006   002104  5180               	movf	gpio_pin_logic_write@pin& (0+255),w,b
  2007   002106  6ED9               	movwf	fsr2l,c
  2008   002108  6ADA               	clrf	fsr2h,c
  2009   00210A  30DF               	rrcf	223,w,c
  2010   00210C  32E8               	rrcf	wreg,f,c
  2011   00210E  32E8               	rrcf	wreg,f,c
  2012   002110  0B07               	andlw	7
  2013   002112  6F82               	movwf	??_gpio_pin_logic_write& (0+255),b
  2014   002114  0E08               	movlw	8
  2015   002116  6182               	cpfslt	??_gpio_pin_logic_write& (0+255),b
  2016   002118  EF90  F010         	goto	u4721
  2017   00211C  EF92  F010         	goto	u4720
  2018   002120                     u4721:
  2019   002120  EF9A  F010         	goto	l4938
  2020   002124                     u4720:
  2021   002124                     
  2022                           ; BSR set to: 0
  2023   002124  0E01               	movlw	1
  2024   002126  6581               	cpfsgt	gpio_pin_logic_write@pin_logic& (0+255),b
  2025   002128  EF98  F010         	goto	u4731
  2026   00212C  EF9A  F010         	goto	u4730
  2027   002130                     u4731:
  2028   002130  EFF5  F010         	goto	l4946
  2029   002134                     u4730:
  2030   002134                     l4938:
  2031                           
  2032                           ; BSR set to: 0
  2033                           ;MCAL/GPIO/gpio.c: 85:         ret=(Std_ReturnType)0x00;
  2034   002134  0E00               	movlw	0
  2035   002136  6F87               	movwf	gpio_pin_logic_write@ret& (0+255),b
  2036                           
  2037                           ;MCAL/GPIO/gpio.c: 86:     }
  2038   002138  EF15  F011         	goto	l4952
  2039   00213C                     l4940:
  2040                           
  2041                           ; BSR set to: 0
  2042                           ;MCAL/GPIO/gpio.c: 90:                 (*latx[pin->port] &= ~((uint8)1<<pin->pin));
  2043   00213C  5180               	movf	gpio_pin_logic_write@pin& (0+255),w,b
  2044   00213E  6ED9               	movwf	fsr2l,c
  2045   002140  6ADA               	clrf	fsr2h,c
  2046   002142  30DF               	rrcf	223,w,c
  2047   002144  32E8               	rrcf	wreg,f,c
  2048   002146  32E8               	rrcf	wreg,f,c
  2049   002148  0B07               	andlw	7
  2050   00214A  6F82               	movwf	??_gpio_pin_logic_write& (0+255),b
  2051   00214C  0E01               	movlw	1
  2052   00214E  6F83               	movwf	(??_gpio_pin_logic_write+1)& (0+255),b
  2053   002150  2B82               	incf	??_gpio_pin_logic_write& (0+255),f,b
  2054   002152  EFAD  F010         	goto	u4744
  2055   002156                     u4745:
  2056   002156  90D8               	bcf	status,0,c
  2057   002158  3783               	rlcf	(??_gpio_pin_logic_write+1)& (0+255),f,b
  2058   00215A                     u4744:
  2059   00215A  2F82               	decfsz	??_gpio_pin_logic_write& (0+255),f,b
  2060   00215C  EFAB  F010         	goto	u4745
  2061   002160  0100               	movlb	0	; () banked
  2062   002162  5183               	movf	(??_gpio_pin_logic_write+1)& (0+255),w,b
  2063   002164  0AFF               	xorlw	255
  2064   002166  6F84               	movwf	(??_gpio_pin_logic_write+2)& (0+255),b
  2065   002168  5180               	movf	gpio_pin_logic_write@pin& (0+255),w,b
  2066   00216A  6ED9               	movwf	fsr2l,c
  2067   00216C  6ADA               	clrf	fsr2h,c
  2068   00216E  50DF               	movf	223,w,c
  2069   002170  0B07               	andlw	7
  2070   002172  0D02               	mullw	2
  2071   002174  50F3               	movf	243,w,c
  2072   002176  0FCE               	addlw	low _latx
  2073   002178  6ED9               	movwf	fsr2l,c
  2074   00217A  6ADA               	clrf	fsr2h,c
  2075   00217C  CFDE F085          	movff	postinc2,??_gpio_pin_logic_write+3
  2076   002180  CFDD F086          	movff	postdec2,??_gpio_pin_logic_write+4
  2077   002184  C085  FFD9         	movff	??_gpio_pin_logic_write+3,fsr2l
  2078   002188  C086  FFDA         	movff	??_gpio_pin_logic_write+4,fsr2h
  2079   00218C  5184               	movf	(??_gpio_pin_logic_write+2)& (0+255),w,b
  2080   00218E  16DF               	andwf	indf2,f,c
  2081                           
  2082                           ;MCAL/GPIO/gpio.c: 91:                 break;
  2083   002190  EF0A  F011         	goto	l4948
  2084   002194                     l4942:
  2085                           
  2086                           ; BSR set to: 0
  2087                           ;MCAL/GPIO/gpio.c: 94:                 (*latx[pin->port] |= ((uint8)1<<pin->pin));
  2088   002194  5180               	movf	gpio_pin_logic_write@pin& (0+255),w,b
  2089   002196  6ED9               	movwf	fsr2l,c
  2090   002198  6ADA               	clrf	fsr2h,c
  2091   00219A  30DF               	rrcf	223,w,c
  2092   00219C  32E8               	rrcf	wreg,f,c
  2093   00219E  32E8               	rrcf	wreg,f,c
  2094   0021A0  0B07               	andlw	7
  2095   0021A2  6F82               	movwf	??_gpio_pin_logic_write& (0+255),b
  2096   0021A4  0E01               	movlw	1
  2097   0021A6  6F83               	movwf	(??_gpio_pin_logic_write+1)& (0+255),b
  2098   0021A8  2B82               	incf	??_gpio_pin_logic_write& (0+255),f,b
  2099   0021AA  EFD9  F010         	goto	u4754
  2100   0021AE                     u4755:
  2101   0021AE  90D8               	bcf	status,0,c
  2102   0021B0  3783               	rlcf	(??_gpio_pin_logic_write+1)& (0+255),f,b
  2103   0021B2                     u4754:
  2104   0021B2  2F82               	decfsz	??_gpio_pin_logic_write& (0+255),f,b
  2105   0021B4  EFD7  F010         	goto	u4755
  2106   0021B8  0100               	movlb	0	; () banked
  2107   0021BA  5180               	movf	gpio_pin_logic_write@pin& (0+255),w,b
  2108   0021BC  6ED9               	movwf	fsr2l,c
  2109   0021BE  6ADA               	clrf	fsr2h,c
  2110   0021C0  50DF               	movf	223,w,c
  2111   0021C2  0B07               	andlw	7
  2112   0021C4  0D02               	mullw	2
  2113   0021C6  50F3               	movf	243,w,c
  2114   0021C8  0FCE               	addlw	low _latx
  2115   0021CA  6ED9               	movwf	fsr2l,c
  2116   0021CC  6ADA               	clrf	fsr2h,c
  2117   0021CE  CFDE F084          	movff	postinc2,??_gpio_pin_logic_write+2
  2118   0021D2  CFDD F085          	movff	postdec2,??_gpio_pin_logic_write+3
  2119   0021D6  C084  FFD9         	movff	??_gpio_pin_logic_write+2,fsr2l
  2120   0021DA  C085  FFDA         	movff	??_gpio_pin_logic_write+3,fsr2h
  2121   0021DE  5183               	movf	(??_gpio_pin_logic_write+1)& (0+255),w,b
  2122   0021E0  12DF               	iorwf	indf2,f,c
  2123                           
  2124                           ;MCAL/GPIO/gpio.c: 95:                 break;
  2125   0021E2  EF0A  F011         	goto	l4948
  2126   0021E6                     l4944:
  2127                           
  2128                           ; BSR set to: 0
  2129                           ;MCAL/GPIO/gpio.c: 99:         }
  2130   0021E6  EF0A  F011         	goto	l4948
  2131   0021EA                     l4946:
  2132                           
  2133                           ; BSR set to: 0
  2134   0021EA  5181               	movf	gpio_pin_logic_write@pin_logic& (0+255),w,b
  2135   0021EC  6F82               	movwf	??_gpio_pin_logic_write& (0+255),b
  2136   0021EE  6B83               	clrf	(??_gpio_pin_logic_write+1)& (0+255),b
  2137                           
  2138                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2139                           ; Switch size 1, requested type "simple"
  2140                           ; Number of cases is 1, Range of values is 0 to 0
  2141                           ; switch strategies available:
  2142                           ; Name         Instructions Cycles
  2143                           ; simple_byte            4     3 (average)
  2144                           ;	Chosen strategy is simple_byte
  2145   0021F0  5183               	movf	(??_gpio_pin_logic_write+1)& (0+255),w,b
  2146   0021F2  0A00               	xorlw	0	; case 0
  2147   0021F4  B4D8               	btfsc	status,2,c
  2148   0021F6  EFFF  F010         	goto	l5544
  2149   0021FA  EFF3  F010         	goto	l4944
  2150   0021FE                     l5544:
  2151                           
  2152                           ; BSR set to: 0
  2153                           ; Switch size 1, requested type "simple"
  2154                           ; Number of cases is 2, Range of values is 0 to 1
  2155                           ; switch strategies available:
  2156                           ; Name         Instructions Cycles
  2157                           ; simple_byte            7     4 (average)
  2158                           ;	Chosen strategy is simple_byte
  2159   0021FE  5182               	movf	??_gpio_pin_logic_write& (0+255),w,b
  2160   002200  0A00               	xorlw	0	; case 0
  2161   002202  B4D8               	btfsc	status,2,c
  2162   002204  EF9E  F010         	goto	l4940
  2163   002208  0A01               	xorlw	1	; case 1
  2164   00220A  B4D8               	btfsc	status,2,c
  2165   00220C  EFCA  F010         	goto	l4942
  2166   002210  EFF3  F010         	goto	l4944
  2167   002214                     l4948:
  2168                           
  2169                           ; BSR set to: 0
  2170                           ;MCAL/GPIO/gpio.c: 100:         pin->logic=pin_logic;
  2171   002214  5180               	movf	gpio_pin_logic_write@pin& (0+255),w,b
  2172   002216  6ED9               	movwf	fsr2l,c
  2173   002218  6ADA               	clrf	fsr2h,c
  2174   00221A  B181               	btfsc	gpio_pin_logic_write@pin_logic& (0+255),0,b
  2175   00221C  D002               	bra	u4765
  2176   00221E  9EDF               	bcf	indf2,7,c
  2177   002220  D002               	bra	u4766
  2178   002222                     u4765:
  2179   002222  0100               	movlb	0	; () banked
  2180   002224  8EDF               	bsf	indf2,7,c
  2181   002226                     u4766:
  2182   002226                     
  2183                           ; BSR set to: 0
  2184                           ;MCAL/GPIO/gpio.c: 101:         ret=(Std_ReturnType)0x01;
  2185   002226  0E01               	movlw	1
  2186   002228  6F87               	movwf	gpio_pin_logic_write@ret& (0+255),b
  2187   00222A                     l4952:
  2188                           
  2189                           ; BSR set to: 0
  2190                           ;MCAL/GPIO/gpio.c: 104:     return ret;
  2191   00222A  5187               	movf	gpio_pin_logic_write@ret& (0+255),w,b
  2192   00222C                     
  2193                           ; BSR set to: 0
  2194   00222C  0012               	return		;funcret
  2195   00222E                     __end_of_gpio_pin_logic_write:
  2196                           	callstack 0
  2197                           
  2198 ;; *************** function _gpio_pin_direction_init *****************
  2199 ;; Defined at:
  2200 ;;		line 23 in file "MCAL/GPIO/gpio.c"
  2201 ;; Parameters:    Size  Location     Type
  2202 ;;  pin             1    0[BANK0 ] PTR struct .
  2203 ;;		 -> lcd$lcd_pins(4), heater(3), led_red(2), led_white(2), 
  2204 ;;		 -> led_blue(2), air_conditioners(3), lcd(6), 
  2205 ;;  pin_directio    1    1[BANK0 ] enum E2982
  2206 ;; Auto vars:     Size  Location     Type
  2207 ;;  ret             1    7[BANK0 ] unsigned char 
  2208 ;; Return value:  Size  Location     Type
  2209 ;;                  1    wreg      unsigned char 
  2210 ;; Registers used:
  2211 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2212 ;; Tracked objects:
  2213 ;;		On entry : 0/0
  2214 ;;		On exit  : 0/0
  2215 ;;		Unchanged: 0/0
  2216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2217 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2218 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2219 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2220 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2221 ;;Total ram usage:        8 bytes
  2222 ;; Hardware stack levels used: 1
  2223 ;; Hardware stack levels required when called: 10
  2224 ;; This function calls:
  2225 ;;		Nothing
  2226 ;; This function is called by:
  2227 ;;		_gpio_pin_output_low_init
  2228 ;;		_gpio_pin_output_high_init
  2229 ;;		_gpio_pin_input_init
  2230 ;; This function uses a non-reentrant model
  2231 ;;
  2232                           
  2233                           	psect	text10
  2234   00222E                     __ptext10:
  2235                           	callstack 0
  2236   00222E                     _gpio_pin_direction_init:
  2237                           	callstack 17
  2238   00222E                     
  2239                           ;MCAL/GPIO/gpio.c: 26:     if(((void*)0)==pin || (pin->pin)>7 || pin_direction>1){
  2240   00222E  0100               	movlb	0	; () banked
  2241   002230  5180               	movf	gpio_pin_direction_init@pin& (0+255),w,b
  2242   002232  B4D8               	btfsc	status,2,c
  2243   002234  EF1E  F011         	goto	u4861
  2244   002238  EF20  F011         	goto	u4860
  2245   00223C                     u4861:
  2246   00223C  EF38  F011         	goto	l5048
  2247   002240                     u4860:
  2248   002240                     
  2249                           ; BSR set to: 0
  2250   002240  5180               	movf	gpio_pin_direction_init@pin& (0+255),w,b
  2251   002242  6ED9               	movwf	fsr2l,c
  2252   002244  6ADA               	clrf	fsr2h,c
  2253   002246  30DF               	rrcf	223,w,c
  2254   002248  32E8               	rrcf	wreg,f,c
  2255   00224A  32E8               	rrcf	wreg,f,c
  2256   00224C  0B07               	andlw	7
  2257   00224E  6F82               	movwf	??_gpio_pin_direction_init& (0+255),b
  2258   002250  0E08               	movlw	8
  2259   002252  6182               	cpfslt	??_gpio_pin_direction_init& (0+255),b
  2260   002254  EF2E  F011         	goto	u4871
  2261   002258  EF30  F011         	goto	u4870
  2262   00225C                     u4871:
  2263   00225C  EF38  F011         	goto	l5048
  2264   002260                     u4870:
  2265   002260                     
  2266                           ; BSR set to: 0
  2267   002260  0E01               	movlw	1
  2268   002262  6581               	cpfsgt	gpio_pin_direction_init@pin_direction& (0+255),b
  2269   002264  EF36  F011         	goto	u4881
  2270   002268  EF38  F011         	goto	u4880
  2271   00226C                     u4881:
  2272   00226C  EF93  F011         	goto	l5056
  2273   002270                     u4880:
  2274   002270                     l5048:
  2275                           
  2276                           ; BSR set to: 0
  2277                           ;MCAL/GPIO/gpio.c: 27:         ret=(Std_ReturnType)0x00;
  2278   002270  0E00               	movlw	0
  2279   002272  6F87               	movwf	gpio_pin_direction_init@ret& (0+255),b
  2280                           
  2281                           ;MCAL/GPIO/gpio.c: 28:     }
  2282   002274  EFB3  F011         	goto	l5062
  2283   002278                     l5050:
  2284                           
  2285                           ; BSR set to: 0
  2286                           ;MCAL/GPIO/gpio.c: 32:                 (*trisx[pin->port] &= ~((uint8)1<<pin->pin));
  2287   002278  5180               	movf	gpio_pin_direction_init@pin& (0+255),w,b
  2288   00227A  6ED9               	movwf	fsr2l,c
  2289   00227C  6ADA               	clrf	fsr2h,c
  2290   00227E  30DF               	rrcf	223,w,c
  2291   002280  32E8               	rrcf	wreg,f,c
  2292   002282  32E8               	rrcf	wreg,f,c
  2293   002284  0B07               	andlw	7
  2294   002286  6F82               	movwf	??_gpio_pin_direction_init& (0+255),b
  2295   002288  0E01               	movlw	1
  2296   00228A  6F83               	movwf	(??_gpio_pin_direction_init+1)& (0+255),b
  2297   00228C  2B82               	incf	??_gpio_pin_direction_init& (0+255),f,b
  2298   00228E  EF4B  F011         	goto	u4894
  2299   002292                     u4895:
  2300   002292  90D8               	bcf	status,0,c
  2301   002294  3783               	rlcf	(??_gpio_pin_direction_init+1)& (0+255),f,b
  2302   002296                     u4894:
  2303   002296  2F82               	decfsz	??_gpio_pin_direction_init& (0+255),f,b
  2304   002298  EF49  F011         	goto	u4895
  2305   00229C  0100               	movlb	0	; () banked
  2306   00229E  5183               	movf	(??_gpio_pin_direction_init+1)& (0+255),w,b
  2307   0022A0  0AFF               	xorlw	255
  2308   0022A2  6F84               	movwf	(??_gpio_pin_direction_init+2)& (0+255),b
  2309   0022A4  5180               	movf	gpio_pin_direction_init@pin& (0+255),w,b
  2310   0022A6  6ED9               	movwf	fsr2l,c
  2311   0022A8  6ADA               	clrf	fsr2h,c
  2312   0022AA  50DF               	movf	223,w,c
  2313   0022AC  0B07               	andlw	7
  2314   0022AE  0D02               	mullw	2
  2315   0022B0  50F3               	movf	243,w,c
  2316   0022B2  0FD8               	addlw	low _trisx
  2317   0022B4  6ED9               	movwf	fsr2l,c
  2318   0022B6  6ADA               	clrf	fsr2h,c
  2319   0022B8  CFDE F085          	movff	postinc2,??_gpio_pin_direction_init+3
  2320   0022BC  CFDD F086          	movff	postdec2,??_gpio_pin_direction_init+4
  2321   0022C0  C085  FFD9         	movff	??_gpio_pin_direction_init+3,fsr2l
  2322   0022C4  C086  FFDA         	movff	??_gpio_pin_direction_init+4,fsr2h
  2323   0022C8  5184               	movf	(??_gpio_pin_direction_init+2)& (0+255),w,b
  2324   0022CA  16DF               	andwf	indf2,f,c
  2325                           
  2326                           ;MCAL/GPIO/gpio.c: 33:                 break;
  2327   0022CC  EFA8  F011         	goto	l5058
  2328   0022D0                     l5052:
  2329                           
  2330                           ; BSR set to: 0
  2331                           ;MCAL/GPIO/gpio.c: 36:                 (*trisx[pin->port] |= ((uint8)1<<pin->pin));
  2332   0022D0  5180               	movf	gpio_pin_direction_init@pin& (0+255),w,b
  2333   0022D2  6ED9               	movwf	fsr2l,c
  2334   0022D4  6ADA               	clrf	fsr2h,c
  2335   0022D6  30DF               	rrcf	223,w,c
  2336   0022D8  32E8               	rrcf	wreg,f,c
  2337   0022DA  32E8               	rrcf	wreg,f,c
  2338   0022DC  0B07               	andlw	7
  2339   0022DE  6F82               	movwf	??_gpio_pin_direction_init& (0+255),b
  2340   0022E0  0E01               	movlw	1
  2341   0022E2  6F83               	movwf	(??_gpio_pin_direction_init+1)& (0+255),b
  2342   0022E4  2B82               	incf	??_gpio_pin_direction_init& (0+255),f,b
  2343   0022E6  EF77  F011         	goto	u4904
  2344   0022EA                     u4905:
  2345   0022EA  90D8               	bcf	status,0,c
  2346   0022EC  3783               	rlcf	(??_gpio_pin_direction_init+1)& (0+255),f,b
  2347   0022EE                     u4904:
  2348   0022EE  2F82               	decfsz	??_gpio_pin_direction_init& (0+255),f,b
  2349   0022F0  EF75  F011         	goto	u4905
  2350   0022F4  0100               	movlb	0	; () banked
  2351   0022F6  5180               	movf	gpio_pin_direction_init@pin& (0+255),w,b
  2352   0022F8  6ED9               	movwf	fsr2l,c
  2353   0022FA  6ADA               	clrf	fsr2h,c
  2354   0022FC  50DF               	movf	223,w,c
  2355   0022FE  0B07               	andlw	7
  2356   002300  0D02               	mullw	2
  2357   002302  50F3               	movf	243,w,c
  2358   002304  0FD8               	addlw	low _trisx
  2359   002306  6ED9               	movwf	fsr2l,c
  2360   002308  6ADA               	clrf	fsr2h,c
  2361   00230A  CFDE F084          	movff	postinc2,??_gpio_pin_direction_init+2
  2362   00230E  CFDD F085          	movff	postdec2,??_gpio_pin_direction_init+3
  2363   002312  C084  FFD9         	movff	??_gpio_pin_direction_init+2,fsr2l
  2364   002316  C085  FFDA         	movff	??_gpio_pin_direction_init+3,fsr2h
  2365   00231A  5183               	movf	(??_gpio_pin_direction_init+1)& (0+255),w,b
  2366   00231C  12DF               	iorwf	indf2,f,c
  2367                           
  2368                           ;MCAL/GPIO/gpio.c: 37:                 break;
  2369   00231E  EFA8  F011         	goto	l5058
  2370   002322                     l5054:
  2371                           
  2372                           ; BSR set to: 0
  2373                           ;MCAL/GPIO/gpio.c: 41:         }
  2374   002322  EFA8  F011         	goto	l5058
  2375   002326                     l5056:
  2376                           
  2377                           ; BSR set to: 0
  2378   002326  5181               	movf	gpio_pin_direction_init@pin_direction& (0+255),w,b
  2379   002328  6F82               	movwf	??_gpio_pin_direction_init& (0+255),b
  2380   00232A  6B83               	clrf	(??_gpio_pin_direction_init+1)& (0+255),b
  2381                           
  2382                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2383                           ; Switch size 1, requested type "simple"
  2384                           ; Number of cases is 1, Range of values is 0 to 0
  2385                           ; switch strategies available:
  2386                           ; Name         Instructions Cycles
  2387                           ; simple_byte            4     3 (average)
  2388                           ;	Chosen strategy is simple_byte
  2389   00232C  5183               	movf	(??_gpio_pin_direction_init+1)& (0+255),w,b
  2390   00232E  0A00               	xorlw	0	; case 0
  2391   002330  B4D8               	btfsc	status,2,c
  2392   002332  EF9D  F011         	goto	l5546
  2393   002336  EF91  F011         	goto	l5054
  2394   00233A                     l5546:
  2395                           
  2396                           ; BSR set to: 0
  2397                           ; Switch size 1, requested type "simple"
  2398                           ; Number of cases is 2, Range of values is 0 to 1
  2399                           ; switch strategies available:
  2400                           ; Name         Instructions Cycles
  2401                           ; simple_byte            7     4 (average)
  2402                           ;	Chosen strategy is simple_byte
  2403   00233A  5182               	movf	??_gpio_pin_direction_init& (0+255),w,b
  2404   00233C  0A00               	xorlw	0	; case 0
  2405   00233E  B4D8               	btfsc	status,2,c
  2406   002340  EF3C  F011         	goto	l5050
  2407   002344  0A01               	xorlw	1	; case 1
  2408   002346  B4D8               	btfsc	status,2,c
  2409   002348  EF68  F011         	goto	l5052
  2410   00234C  EF91  F011         	goto	l5054
  2411   002350                     l5058:
  2412                           
  2413                           ; BSR set to: 0
  2414                           ;MCAL/GPIO/gpio.c: 42:         pin->direction=pin_direction;
  2415   002350  5180               	movf	gpio_pin_direction_init@pin& (0+255),w,b
  2416   002352  6ED9               	movwf	fsr2l,c
  2417   002354  6ADA               	clrf	fsr2h,c
  2418   002356  B181               	btfsc	gpio_pin_direction_init@pin_direction& (0+255),0,b
  2419   002358  D002               	bra	u4915
  2420   00235A  9CDF               	bcf	indf2,6,c
  2421   00235C  D002               	bra	u4916
  2422   00235E                     u4915:
  2423   00235E  0100               	movlb	0	; () banked
  2424   002360  8CDF               	bsf	indf2,6,c
  2425   002362                     u4916:
  2426   002362                     
  2427                           ; BSR set to: 0
  2428                           ;MCAL/GPIO/gpio.c: 43:         ret=(Std_ReturnType)0x01;
  2429   002362  0E01               	movlw	1
  2430   002364  6F87               	movwf	gpio_pin_direction_init@ret& (0+255),b
  2431   002366                     l5062:
  2432                           
  2433                           ; BSR set to: 0
  2434                           ;MCAL/GPIO/gpio.c: 46:     return ret;
  2435   002366  5187               	movf	gpio_pin_direction_init@ret& (0+255),w,b
  2436   002368                     
  2437                           ; BSR set to: 0
  2438   002368  0012               	return		;funcret
  2439   00236A                     __end_of_gpio_pin_direction_init:
  2440                           	callstack 0
  2441                           
  2442 ;; *************** function _EUSART_ASYNC_Init *****************
  2443 ;; Defined at:
  2444 ;;		line 24 in file "MCAL/USART/usart.c"
  2445 ;; Parameters:    Size  Location     Type
  2446 ;;  _eusart         1   66[BANK0 ] PTR const struct .
  2447 ;;		 -> uart(16), 
  2448 ;; Auto vars:     Size  Location     Type
  2449 ;;  ret             1   67[BANK0 ] unsigned char 
  2450 ;; Return value:  Size  Location     Type
  2451 ;;                  1    wreg      unsigned char 
  2452 ;; Registers used:
  2453 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2454 ;; Tracked objects:
  2455 ;;		On entry : 0/0
  2456 ;;		On exit  : 0/0
  2457 ;;		Unchanged: 0/0
  2458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2459 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2460 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2462 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2463 ;;Total ram usage:        2 bytes
  2464 ;; Hardware stack levels used: 1
  2465 ;; Hardware stack levels required when called: 12
  2466 ;; This function calls:
  2467 ;;		_EUSART_ASYNC_RX_Init
  2468 ;;		_EUSART_ASYNC_TX_Init
  2469 ;;		_EUSART_Baud_Rate_Calculation
  2470 ;; This function is called by:
  2471 ;;		__init
  2472 ;; This function uses a non-reentrant model
  2473 ;;
  2474                           
  2475                           	psect	text11
  2476   0032CA                     __ptext11:
  2477                           	callstack 0
  2478   0032CA                     _EUSART_ASYNC_Init:
  2479                           	callstack 17
  2480   0032CA                     
  2481                           ;MCAL/USART/usart.c: 27:     if(((void*)0) == _eusart){
  2482   0032CA  0100               	movlb	0	; () banked
  2483   0032CC  51C2               	movf	EUSART_ASYNC_Init@_eusart& (0+255),w,b
  2484   0032CE  A4D8               	btfss	status,2,c
  2485   0032D0  EF6C  F019         	goto	u4141
  2486   0032D4  EF6E  F019         	goto	u4140
  2487   0032D8                     u4141:
  2488   0032D8  EF72  F019         	goto	l506
  2489   0032DC                     u4140:
  2490   0032DC                     
  2491                           ; BSR set to: 0
  2492                           ;MCAL/USART/usart.c: 28:         ret = (Std_ReturnType)0x00;
  2493   0032DC  0E00               	movlw	0
  2494   0032DE  6FC3               	movwf	EUSART_ASYNC_Init@ret& (0+255),b
  2495                           
  2496                           ;MCAL/USART/usart.c: 29:     }
  2497   0032E0  EF85  F019         	goto	l4384
  2498   0032E4                     l506:
  2499                           
  2500                           ; BSR set to: 0
  2501                           ;MCAL/USART/usart.c: 31:         RCSTAbits.SPEN = 0;
  2502   0032E4  9EAB               	bcf	171,7,c	;volatile
  2503                           
  2504                           ;MCAL/USART/usart.c: 32:         TRISCbits.RC7 = 1;
  2505   0032E6  8E94               	bsf	148,7,c	;volatile
  2506                           
  2507                           ;MCAL/USART/usart.c: 33:         TRISCbits.RC6 = 1;
  2508   0032E8  8C94               	bsf	148,6,c	;volatile
  2509   0032EA                     
  2510                           ; BSR set to: 0
  2511                           ;MCAL/USART/usart.c: 34:         EUSART_Baud_Rate_Calculation(_eusart);
  2512   0032EA  C0C2  F0B7         	movff	EUSART_ASYNC_Init@_eusart,EUSART_Baud_Rate_Calculation@_eusart
  2513   0032EE  EC03  F008         	call	_EUSART_Baud_Rate_Calculation	;wreg free
  2514                           
  2515                           ;MCAL/USART/usart.c: 35:         EUSART_ASYNC_TX_Init(_eusart);
  2516   0032F2  C0C2  F080         	movff	EUSART_ASYNC_Init@_eusart,EUSART_ASYNC_TX_Init@_eusart
  2517   0032F6  ECAE  F015         	call	_EUSART_ASYNC_TX_Init	;wreg free
  2518                           
  2519                           ;MCAL/USART/usart.c: 36:         EUSART_ASYNC_RX_Init(_eusart);
  2520   0032FA  C0C2  F080         	movff	EUSART_ASYNC_Init@_eusart,EUSART_ASYNC_RX_Init@_eusart
  2521   0032FE  ECD7  F013         	call	_EUSART_ASYNC_RX_Init	;wreg free
  2522   003302                     
  2523                           ;MCAL/USART/usart.c: 37:         RCSTAbits.SPEN = 1;
  2524   003302  8EAB               	bsf	171,7,c	;volatile
  2525   003304                     
  2526                           ;MCAL/USART/usart.c: 38:         ret = (Std_ReturnType)0x01;
  2527   003304  0E01               	movlw	1
  2528   003306  0100               	movlb	0	; () banked
  2529   003308  6FC3               	movwf	EUSART_ASYNC_Init@ret& (0+255),b
  2530   00330A                     l4384:
  2531                           
  2532                           ; BSR set to: 0
  2533                           ;MCAL/USART/usart.c: 41:     return ret;
  2534   00330A  51C3               	movf	EUSART_ASYNC_Init@ret& (0+255),w,b
  2535   00330C                     
  2536                           ; BSR set to: 0
  2537   00330C  0012               	return		;funcret
  2538   00330E                     __end_of_EUSART_ASYNC_Init:
  2539                           	callstack 0
  2540                           
  2541 ;; *************** function _EUSART_Baud_Rate_Calculation *****************
  2542 ;; Defined at:
  2543 ;;		line 136 in file "MCAL/USART/usart.c"
  2544 ;; Parameters:    Size  Location     Type
  2545 ;;  _eusart         1   55[BANK0 ] PTR const struct .
  2546 ;;		 -> uart(16), 
  2547 ;; Auto vars:     Size  Location     Type
  2548 ;;  Baud_Rate_Te    4   58[BANK0 ] float 
  2549 ;; Return value:  Size  Location     Type
  2550 ;;                  1    wreg      void 
  2551 ;; Registers used:
  2552 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2553 ;; Tracked objects:
  2554 ;;		On entry : 0/0
  2555 ;;		On exit  : 0/0
  2556 ;;		Unchanged: 0/0
  2557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2558 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2559 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2560 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2561 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2562 ;;Total ram usage:       11 bytes
  2563 ;; Hardware stack levels used: 1
  2564 ;; Hardware stack levels required when called: 11
  2565 ;; This function calls:
  2566 ;;		___fladd
  2567 ;;		___fldiv
  2568 ;;		___fltol
  2569 ;;		___xxtofl
  2570 ;; This function is called by:
  2571 ;;		_EUSART_ASYNC_Init
  2572 ;; This function uses a non-reentrant model
  2573 ;;
  2574                           
  2575                           	psect	text12
  2576   001006                     __ptext12:
  2577                           	callstack 0
  2578   001006                     _EUSART_Baud_Rate_Calculation:
  2579                           	callstack 17
  2580   001006                     
  2581                           ;MCAL/USART/usart.c: 138:     float Baud_Rate_Temp = 0;
  2582   001006  0E00               	movlw	0
  2583   001008  0100               	movlb	0	; () banked
  2584   00100A  6FBA               	movwf	EUSART_Baud_Rate_Calculation@Baud_Rate_Temp& (0+255),b
  2585   00100C  0E00               	movlw	0
  2586   00100E  6FBB               	movwf	(EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+1)& (0+255),b
  2587   001010  0E00               	movlw	0
  2588   001012  6FBC               	movwf	(EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+2)& (0+255),b
  2589   001014  0E00               	movlw	0
  2590   001016  6FBD               	movwf	(EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+3)& (0+255),b
  2591                           
  2592                           ;MCAL/USART/usart.c: 139:     switch(_eusart->baudrate_gen_gonfig){
  2593   001018  EF40  F00A         	goto	l4240
  2594   00101C                     l556:
  2595                           
  2596                           ; BSR set to: 0
  2597                           ;MCAL/USART/usart.c: 141:             TXSTAbits.SYNC = 0;
  2598   00101C  98AC               	bcf	172,4,c	;volatile
  2599                           
  2600                           ;MCAL/USART/usart.c: 142:             TXSTAbits.BRGH = 0;
  2601   00101E  94AC               	bcf	172,2,c	;volatile
  2602                           
  2603                           ;MCAL/USART/usart.c: 143:             BAUDCONbits.BRG16 = 0;
  2604   001020  96B8               	bcf	184,3,c	;volatile
  2605   001022                     
  2606                           ; BSR set to: 0
  2607                           ;MCAL/USART/usart.c: 144:             Baud_Rate_Temp = ((8000000 / (float)_eusart->baudr
      +                          ate) / 64) - 1;
  2608   001022  51B7               	movf	EUSART_Baud_Rate_Calculation@_eusart& (0+255),w,b
  2609   001024  6ED9               	movwf	fsr2l,c
  2610   001026  6ADA               	clrf	fsr2h,c
  2611   001028  CFDE F0B8          	movff	postinc2,??_EUSART_Baud_Rate_Calculation
  2612   00102C  CFDD F0B9          	movff	postdec2,??_EUSART_Baud_Rate_Calculation+1
  2613   001030  C0B8  F080         	movff	??_EUSART_Baud_Rate_Calculation,___xxtofl@val
  2614   001034  C0B9  F081         	movff	??_EUSART_Baud_Rate_Calculation+1,___xxtofl@val+1
  2615   001038  6B82               	clrf	(___xxtofl@val+2)& (0+255),b
  2616   00103A  6B83               	clrf	(___xxtofl@val+3)& (0+255),b
  2617   00103C  0E00               	movlw	0
  2618   00103E  EC9D  F00F         	call	___xxtofl
  2619   001042  C080  F092         	movff	?___xxtofl,___fldiv@a
  2620   001046  C081  F093         	movff	?___xxtofl+1,___fldiv@a+1
  2621   00104A  C082  F094         	movff	?___xxtofl+2,___fldiv@a+2
  2622   00104E  C083  F095         	movff	?___xxtofl+3,___fldiv@a+3
  2623   001052  0E00               	movlw	0
  2624   001054  0100               	movlb	0	; () banked
  2625   001056  6F8E               	movwf	___fldiv@b& (0+255),b
  2626   001058  0E24               	movlw	36
  2627   00105A  6F8F               	movwf	(___fldiv@b+1)& (0+255),b
  2628   00105C  0EF4               	movlw	244
  2629   00105E  6F90               	movwf	(___fldiv@b+2)& (0+255),b
  2630   001060  0E4A               	movlw	74
  2631   001062  6F91               	movwf	(___fldiv@b+3)& (0+255),b
  2632   001064  ECE9  F00C         	call	___fldiv	;wreg free
  2633   001068  C08E  F0BE         	movff	?___fldiv,_EUSART_Baud_Rate_Calculation$2548
  2634   00106C  C08F  F0BF         	movff	?___fldiv+1,_EUSART_Baud_Rate_Calculation$2548+1
  2635   001070  C090  F0C0         	movff	?___fldiv+2,_EUSART_Baud_Rate_Calculation$2548+2
  2636   001074  C091  F0C1         	movff	?___fldiv+3,_EUSART_Baud_Rate_Calculation$2548+3
  2637   001078                     
  2638                           ;MCAL/USART/usart.c: 144:             Baud_Rate_Temp = ((8000000 / (float)_eusart->baudr
      +                          ate) / 64) - 1;
  2639   001078  0E00               	movlw	0
  2640   00107A  0100               	movlb	0	; () banked
  2641   00107C  6F92               	movwf	___fldiv@a& (0+255),b
  2642   00107E  0E00               	movlw	0
  2643   001080  6F93               	movwf	(___fldiv@a+1)& (0+255),b
  2644   001082  0E80               	movlw	128
  2645   001084  6F94               	movwf	(___fldiv@a+2)& (0+255),b
  2646   001086  0E42               	movlw	66
  2647   001088  6F95               	movwf	(___fldiv@a+3)& (0+255),b
  2648   00108A  C0BE  F08E         	movff	_EUSART_Baud_Rate_Calculation$2548,___fldiv@b
  2649   00108E  C0BF  F08F         	movff	_EUSART_Baud_Rate_Calculation$2548+1,___fldiv@b+1
  2650   001092  C0C0  F090         	movff	_EUSART_Baud_Rate_Calculation$2548+2,___fldiv@b+2
  2651   001096  C0C1  F091         	movff	_EUSART_Baud_Rate_Calculation$2548+3,___fldiv@b+3
  2652   00109A  ECE9  F00C         	call	___fldiv	;wreg free
  2653   00109E  C08E  F0A7         	movff	?___fldiv,___fladd@b
  2654   0010A2  C08F  F0A8         	movff	?___fldiv+1,___fladd@b+1
  2655   0010A6  C090  F0A9         	movff	?___fldiv+2,___fladd@b+2
  2656   0010AA  C091  F0AA         	movff	?___fldiv+3,___fladd@b+3
  2657   0010AE  0E00               	movlw	0
  2658   0010B0  0100               	movlb	0	; () banked
  2659   0010B2  6FAB               	movwf	___fladd@a& (0+255),b
  2660   0010B4  0E00               	movlw	0
  2661   0010B6  6FAC               	movwf	(___fladd@a+1)& (0+255),b
  2662   0010B8  0E80               	movlw	128
  2663   0010BA  6FAD               	movwf	(___fladd@a+2)& (0+255),b
  2664   0010BC  0EBF               	movlw	191
  2665   0010BE  6FAE               	movwf	(___fladd@a+3)& (0+255),b
  2666   0010C0  EC88  F00A         	call	___fladd	;wreg free
  2667   0010C4  C0A7  F0BA         	movff	?___fladd,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp
  2668   0010C8  C0A8  F0BB         	movff	?___fladd+1,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+1
  2669   0010CC  C0A9  F0BC         	movff	?___fladd+2,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+2
  2670   0010D0  C0AA  F0BD         	movff	?___fladd+3,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+3
  2671                           
  2672                           ;MCAL/USART/usart.c: 145:             break;
  2673   0010D4  EF6A  F00A         	goto	l4242
  2674   0010D8                     l558:
  2675                           
  2676                           ; BSR set to: 0
  2677                           ;MCAL/USART/usart.c: 147:             TXSTAbits.SYNC = 0;
  2678   0010D8  98AC               	bcf	172,4,c	;volatile
  2679                           
  2680                           ;MCAL/USART/usart.c: 148:             TXSTAbits.BRGH = 1;
  2681   0010DA  84AC               	bsf	172,2,c	;volatile
  2682                           
  2683                           ;MCAL/USART/usart.c: 149:             BAUDCONbits.BRG16 = 0;
  2684   0010DC  96B8               	bcf	184,3,c	;volatile
  2685   0010DE                     
  2686                           ; BSR set to: 0
  2687                           ;MCAL/USART/usart.c: 150:             Baud_Rate_Temp = ((8000000 / (float)_eusart->baudr
      +                          ate) / 16) - 1;
  2688   0010DE  51B7               	movf	EUSART_Baud_Rate_Calculation@_eusart& (0+255),w,b
  2689   0010E0  6ED9               	movwf	fsr2l,c
  2690   0010E2  6ADA               	clrf	fsr2h,c
  2691   0010E4  CFDE F0B8          	movff	postinc2,??_EUSART_Baud_Rate_Calculation
  2692   0010E8  CFDD F0B9          	movff	postdec2,??_EUSART_Baud_Rate_Calculation+1
  2693   0010EC  C0B8  F080         	movff	??_EUSART_Baud_Rate_Calculation,___xxtofl@val
  2694   0010F0  C0B9  F081         	movff	??_EUSART_Baud_Rate_Calculation+1,___xxtofl@val+1
  2695   0010F4  6B82               	clrf	(___xxtofl@val+2)& (0+255),b
  2696   0010F6  6B83               	clrf	(___xxtofl@val+3)& (0+255),b
  2697   0010F8  0E00               	movlw	0
  2698   0010FA  EC9D  F00F         	call	___xxtofl
  2699   0010FE  C080  F092         	movff	?___xxtofl,___fldiv@a
  2700   001102  C081  F093         	movff	?___xxtofl+1,___fldiv@a+1
  2701   001106  C082  F094         	movff	?___xxtofl+2,___fldiv@a+2
  2702   00110A  C083  F095         	movff	?___xxtofl+3,___fldiv@a+3
  2703   00110E  0E00               	movlw	0
  2704   001110  0100               	movlb	0	; () banked
  2705   001112  6F8E               	movwf	___fldiv@b& (0+255),b
  2706   001114  0E24               	movlw	36
  2707   001116  6F8F               	movwf	(___fldiv@b+1)& (0+255),b
  2708   001118  0EF4               	movlw	244
  2709   00111A  6F90               	movwf	(___fldiv@b+2)& (0+255),b
  2710   00111C  0E4A               	movlw	74
  2711   00111E  6F91               	movwf	(___fldiv@b+3)& (0+255),b
  2712   001120  ECE9  F00C         	call	___fldiv	;wreg free
  2713   001124  C08E  F0BE         	movff	?___fldiv,_EUSART_Baud_Rate_Calculation$2548
  2714   001128  C08F  F0BF         	movff	?___fldiv+1,_EUSART_Baud_Rate_Calculation$2548+1
  2715   00112C  C090  F0C0         	movff	?___fldiv+2,_EUSART_Baud_Rate_Calculation$2548+2
  2716   001130  C091  F0C1         	movff	?___fldiv+3,_EUSART_Baud_Rate_Calculation$2548+3
  2717   001134                     
  2718                           ;MCAL/USART/usart.c: 150:             Baud_Rate_Temp = ((8000000 / (float)_eusart->baudr
      +                          ate) / 16) - 1;
  2719   001134  0E00               	movlw	0
  2720   001136  0100               	movlb	0	; () banked
  2721   001138  6F92               	movwf	___fldiv@a& (0+255),b
  2722   00113A  0E00               	movlw	0
  2723   00113C  6F93               	movwf	(___fldiv@a+1)& (0+255),b
  2724   00113E  0E80               	movlw	128
  2725   001140  6F94               	movwf	(___fldiv@a+2)& (0+255),b
  2726   001142  0E41               	movlw	65
  2727   001144  6F95               	movwf	(___fldiv@a+3)& (0+255),b
  2728   001146  C0BE  F08E         	movff	_EUSART_Baud_Rate_Calculation$2548,___fldiv@b
  2729   00114A  C0BF  F08F         	movff	_EUSART_Baud_Rate_Calculation$2548+1,___fldiv@b+1
  2730   00114E  C0C0  F090         	movff	_EUSART_Baud_Rate_Calculation$2548+2,___fldiv@b+2
  2731   001152  C0C1  F091         	movff	_EUSART_Baud_Rate_Calculation$2548+3,___fldiv@b+3
  2732   001156  ECE9  F00C         	call	___fldiv	;wreg free
  2733   00115A  C08E  F0A7         	movff	?___fldiv,___fladd@b
  2734   00115E  C08F  F0A8         	movff	?___fldiv+1,___fladd@b+1
  2735   001162  C090  F0A9         	movff	?___fldiv+2,___fladd@b+2
  2736   001166  C091  F0AA         	movff	?___fldiv+3,___fladd@b+3
  2737   00116A  0E00               	movlw	0
  2738   00116C  0100               	movlb	0	; () banked
  2739   00116E  6FAB               	movwf	___fladd@a& (0+255),b
  2740   001170  0E00               	movlw	0
  2741   001172  6FAC               	movwf	(___fladd@a+1)& (0+255),b
  2742   001174  0E80               	movlw	128
  2743   001176  6FAD               	movwf	(___fladd@a+2)& (0+255),b
  2744   001178  0EBF               	movlw	191
  2745   00117A  6FAE               	movwf	(___fladd@a+3)& (0+255),b
  2746   00117C  EC88  F00A         	call	___fladd	;wreg free
  2747   001180  C0A7  F0BA         	movff	?___fladd,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp
  2748   001184  C0A8  F0BB         	movff	?___fladd+1,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+1
  2749   001188  C0A9  F0BC         	movff	?___fladd+2,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+2
  2750   00118C  C0AA  F0BD         	movff	?___fladd+3,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+3
  2751                           
  2752                           ;MCAL/USART/usart.c: 151:             break;
  2753   001190  EF6A  F00A         	goto	l4242
  2754   001194                     l559:
  2755                           
  2756                           ; BSR set to: 0
  2757                           ;MCAL/USART/usart.c: 153:             TXSTAbits.SYNC = 0;
  2758   001194  98AC               	bcf	172,4,c	;volatile
  2759                           
  2760                           ;MCAL/USART/usart.c: 154:             TXSTAbits.BRGH = 0;
  2761   001196  94AC               	bcf	172,2,c	;volatile
  2762                           
  2763                           ;MCAL/USART/usart.c: 155:             BAUDCONbits.BRG16 = 1;
  2764   001198  86B8               	bsf	184,3,c	;volatile
  2765   00119A                     
  2766                           ; BSR set to: 0
  2767                           ;MCAL/USART/usart.c: 156:             Baud_Rate_Temp = ((8000000 / (float)_eusart->baudr
      +                          ate) / 16) - 1;
  2768   00119A  51B7               	movf	EUSART_Baud_Rate_Calculation@_eusart& (0+255),w,b
  2769   00119C  6ED9               	movwf	fsr2l,c
  2770   00119E  6ADA               	clrf	fsr2h,c
  2771   0011A0  CFDE F0B8          	movff	postinc2,??_EUSART_Baud_Rate_Calculation
  2772   0011A4  CFDD F0B9          	movff	postdec2,??_EUSART_Baud_Rate_Calculation+1
  2773   0011A8  C0B8  F080         	movff	??_EUSART_Baud_Rate_Calculation,___xxtofl@val
  2774   0011AC  C0B9  F081         	movff	??_EUSART_Baud_Rate_Calculation+1,___xxtofl@val+1
  2775   0011B0  6B82               	clrf	(___xxtofl@val+2)& (0+255),b
  2776   0011B2  6B83               	clrf	(___xxtofl@val+3)& (0+255),b
  2777   0011B4  0E00               	movlw	0
  2778   0011B6  EC9D  F00F         	call	___xxtofl
  2779   0011BA  C080  F092         	movff	?___xxtofl,___fldiv@a
  2780   0011BE  C081  F093         	movff	?___xxtofl+1,___fldiv@a+1
  2781   0011C2  C082  F094         	movff	?___xxtofl+2,___fldiv@a+2
  2782   0011C6  C083  F095         	movff	?___xxtofl+3,___fldiv@a+3
  2783   0011CA  0E00               	movlw	0
  2784   0011CC  0100               	movlb	0	; () banked
  2785   0011CE  6F8E               	movwf	___fldiv@b& (0+255),b
  2786   0011D0  0E24               	movlw	36
  2787   0011D2  6F8F               	movwf	(___fldiv@b+1)& (0+255),b
  2788   0011D4  0EF4               	movlw	244
  2789   0011D6  6F90               	movwf	(___fldiv@b+2)& (0+255),b
  2790   0011D8  0E4A               	movlw	74
  2791   0011DA  6F91               	movwf	(___fldiv@b+3)& (0+255),b
  2792   0011DC  ECE9  F00C         	call	___fldiv	;wreg free
  2793   0011E0  C08E  F0BE         	movff	?___fldiv,_EUSART_Baud_Rate_Calculation$2548
  2794   0011E4  C08F  F0BF         	movff	?___fldiv+1,_EUSART_Baud_Rate_Calculation$2548+1
  2795   0011E8  C090  F0C0         	movff	?___fldiv+2,_EUSART_Baud_Rate_Calculation$2548+2
  2796   0011EC  C091  F0C1         	movff	?___fldiv+3,_EUSART_Baud_Rate_Calculation$2548+3
  2797   0011F0                     
  2798                           ;MCAL/USART/usart.c: 156:             Baud_Rate_Temp = ((8000000 / (float)_eusart->baudr
      +                          ate) / 16) - 1;
  2799   0011F0  0E00               	movlw	0
  2800   0011F2  0100               	movlb	0	; () banked
  2801   0011F4  6F92               	movwf	___fldiv@a& (0+255),b
  2802   0011F6  0E00               	movlw	0
  2803   0011F8  6F93               	movwf	(___fldiv@a+1)& (0+255),b
  2804   0011FA  0E80               	movlw	128
  2805   0011FC  6F94               	movwf	(___fldiv@a+2)& (0+255),b
  2806   0011FE  0E41               	movlw	65
  2807   001200  6F95               	movwf	(___fldiv@a+3)& (0+255),b
  2808   001202  C0BE  F08E         	movff	_EUSART_Baud_Rate_Calculation$2548,___fldiv@b
  2809   001206  C0BF  F08F         	movff	_EUSART_Baud_Rate_Calculation$2548+1,___fldiv@b+1
  2810   00120A  C0C0  F090         	movff	_EUSART_Baud_Rate_Calculation$2548+2,___fldiv@b+2
  2811   00120E  C0C1  F091         	movff	_EUSART_Baud_Rate_Calculation$2548+3,___fldiv@b+3
  2812   001212  ECE9  F00C         	call	___fldiv	;wreg free
  2813   001216  C08E  F0A7         	movff	?___fldiv,___fladd@b
  2814   00121A  C08F  F0A8         	movff	?___fldiv+1,___fladd@b+1
  2815   00121E  C090  F0A9         	movff	?___fldiv+2,___fladd@b+2
  2816   001222  C091  F0AA         	movff	?___fldiv+3,___fladd@b+3
  2817   001226  0E00               	movlw	0
  2818   001228  0100               	movlb	0	; () banked
  2819   00122A  6FAB               	movwf	___fladd@a& (0+255),b
  2820   00122C  0E00               	movlw	0
  2821   00122E  6FAC               	movwf	(___fladd@a+1)& (0+255),b
  2822   001230  0E80               	movlw	128
  2823   001232  6FAD               	movwf	(___fladd@a+2)& (0+255),b
  2824   001234  0EBF               	movlw	191
  2825   001236  6FAE               	movwf	(___fladd@a+3)& (0+255),b
  2826   001238  EC88  F00A         	call	___fladd	;wreg free
  2827   00123C  C0A7  F0BA         	movff	?___fladd,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp
  2828   001240  C0A8  F0BB         	movff	?___fladd+1,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+1
  2829   001244  C0A9  F0BC         	movff	?___fladd+2,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+2
  2830   001248  C0AA  F0BD         	movff	?___fladd+3,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+3
  2831                           
  2832                           ;MCAL/USART/usart.c: 157:             break;
  2833   00124C  EF6A  F00A         	goto	l4242
  2834   001250                     l560:
  2835                           
  2836                           ; BSR set to: 0
  2837                           ;MCAL/USART/usart.c: 159:             TXSTAbits.SYNC = 0;
  2838   001250  98AC               	bcf	172,4,c	;volatile
  2839                           
  2840                           ;MCAL/USART/usart.c: 160:             TXSTAbits.BRGH = 1;
  2841   001252  84AC               	bsf	172,2,c	;volatile
  2842                           
  2843                           ;MCAL/USART/usart.c: 161:             BAUDCONbits.BRG16 = 1;
  2844   001254  86B8               	bsf	184,3,c	;volatile
  2845   001256                     
  2846                           ; BSR set to: 0
  2847                           ;MCAL/USART/usart.c: 162:             Baud_Rate_Temp = ((8000000 / (float)_eusart->baudr
      +                          ate) / 4) - 1;
  2848   001256  51B7               	movf	EUSART_Baud_Rate_Calculation@_eusart& (0+255),w,b
  2849   001258  6ED9               	movwf	fsr2l,c
  2850   00125A  6ADA               	clrf	fsr2h,c
  2851   00125C  CFDE F0B8          	movff	postinc2,??_EUSART_Baud_Rate_Calculation
  2852   001260  CFDD F0B9          	movff	postdec2,??_EUSART_Baud_Rate_Calculation+1
  2853   001264  C0B8  F080         	movff	??_EUSART_Baud_Rate_Calculation,___xxtofl@val
  2854   001268  C0B9  F081         	movff	??_EUSART_Baud_Rate_Calculation+1,___xxtofl@val+1
  2855   00126C  6B82               	clrf	(___xxtofl@val+2)& (0+255),b
  2856   00126E  6B83               	clrf	(___xxtofl@val+3)& (0+255),b
  2857   001270  0E00               	movlw	0
  2858   001272  EC9D  F00F         	call	___xxtofl
  2859   001276  C080  F092         	movff	?___xxtofl,___fldiv@a
  2860   00127A  C081  F093         	movff	?___xxtofl+1,___fldiv@a+1
  2861   00127E  C082  F094         	movff	?___xxtofl+2,___fldiv@a+2
  2862   001282  C083  F095         	movff	?___xxtofl+3,___fldiv@a+3
  2863   001286  0E00               	movlw	0
  2864   001288  0100               	movlb	0	; () banked
  2865   00128A  6F8E               	movwf	___fldiv@b& (0+255),b
  2866   00128C  0E24               	movlw	36
  2867   00128E  6F8F               	movwf	(___fldiv@b+1)& (0+255),b
  2868   001290  0EF4               	movlw	244
  2869   001292  6F90               	movwf	(___fldiv@b+2)& (0+255),b
  2870   001294  0E4A               	movlw	74
  2871   001296  6F91               	movwf	(___fldiv@b+3)& (0+255),b
  2872   001298  ECE9  F00C         	call	___fldiv	;wreg free
  2873   00129C  C08E  F0BE         	movff	?___fldiv,_EUSART_Baud_Rate_Calculation$2548
  2874   0012A0  C08F  F0BF         	movff	?___fldiv+1,_EUSART_Baud_Rate_Calculation$2548+1
  2875   0012A4  C090  F0C0         	movff	?___fldiv+2,_EUSART_Baud_Rate_Calculation$2548+2
  2876   0012A8  C091  F0C1         	movff	?___fldiv+3,_EUSART_Baud_Rate_Calculation$2548+3
  2877   0012AC                     
  2878                           ;MCAL/USART/usart.c: 162:             Baud_Rate_Temp = ((8000000 / (float)_eusart->baudr
      +                          ate) / 4) - 1;
  2879   0012AC  0E00               	movlw	0
  2880   0012AE  0100               	movlb	0	; () banked
  2881   0012B0  6F92               	movwf	___fldiv@a& (0+255),b
  2882   0012B2  0E00               	movlw	0
  2883   0012B4  6F93               	movwf	(___fldiv@a+1)& (0+255),b
  2884   0012B6  0E80               	movlw	128
  2885   0012B8  6F94               	movwf	(___fldiv@a+2)& (0+255),b
  2886   0012BA  0E40               	movlw	64
  2887   0012BC  6F95               	movwf	(___fldiv@a+3)& (0+255),b
  2888   0012BE  C0BE  F08E         	movff	_EUSART_Baud_Rate_Calculation$2548,___fldiv@b
  2889   0012C2  C0BF  F08F         	movff	_EUSART_Baud_Rate_Calculation$2548+1,___fldiv@b+1
  2890   0012C6  C0C0  F090         	movff	_EUSART_Baud_Rate_Calculation$2548+2,___fldiv@b+2
  2891   0012CA  C0C1  F091         	movff	_EUSART_Baud_Rate_Calculation$2548+3,___fldiv@b+3
  2892   0012CE  ECE9  F00C         	call	___fldiv	;wreg free
  2893   0012D2  C08E  F0A7         	movff	?___fldiv,___fladd@b
  2894   0012D6  C08F  F0A8         	movff	?___fldiv+1,___fladd@b+1
  2895   0012DA  C090  F0A9         	movff	?___fldiv+2,___fladd@b+2
  2896   0012DE  C091  F0AA         	movff	?___fldiv+3,___fladd@b+3
  2897   0012E2  0E00               	movlw	0
  2898   0012E4  0100               	movlb	0	; () banked
  2899   0012E6  6FAB               	movwf	___fladd@a& (0+255),b
  2900   0012E8  0E00               	movlw	0
  2901   0012EA  6FAC               	movwf	(___fladd@a+1)& (0+255),b
  2902   0012EC  0E80               	movlw	128
  2903   0012EE  6FAD               	movwf	(___fladd@a+2)& (0+255),b
  2904   0012F0  0EBF               	movlw	191
  2905   0012F2  6FAE               	movwf	(___fladd@a+3)& (0+255),b
  2906   0012F4  EC88  F00A         	call	___fladd	;wreg free
  2907   0012F8  C0A7  F0BA         	movff	?___fladd,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp
  2908   0012FC  C0A8  F0BB         	movff	?___fladd+1,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+1
  2909   001300  C0A9  F0BC         	movff	?___fladd+2,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+2
  2910   001304  C0AA  F0BD         	movff	?___fladd+3,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+3
  2911                           
  2912                           ;MCAL/USART/usart.c: 163:             break;
  2913   001308  EF6A  F00A         	goto	l4242
  2914   00130C                     l561:
  2915                           
  2916                           ; BSR set to: 0
  2917                           ;MCAL/USART/usart.c: 165:             TXSTAbits.SYNC = 1;
  2918   00130C  88AC               	bsf	172,4,c	;volatile
  2919                           
  2920                           ;MCAL/USART/usart.c: 166:             BAUDCONbits.BRG16 = 0;
  2921   00130E  96B8               	bcf	184,3,c	;volatile
  2922   001310                     
  2923                           ; BSR set to: 0
  2924                           ;MCAL/USART/usart.c: 167:             Baud_Rate_Temp = ((8000000 / (float)_eusart->baudr
      +                          ate) / 4) - 1;
  2925   001310  51B7               	movf	EUSART_Baud_Rate_Calculation@_eusart& (0+255),w,b
  2926   001312  6ED9               	movwf	fsr2l,c
  2927   001314  6ADA               	clrf	fsr2h,c
  2928   001316  CFDE F0B8          	movff	postinc2,??_EUSART_Baud_Rate_Calculation
  2929   00131A  CFDD F0B9          	movff	postdec2,??_EUSART_Baud_Rate_Calculation+1
  2930   00131E  C0B8  F080         	movff	??_EUSART_Baud_Rate_Calculation,___xxtofl@val
  2931   001322  C0B9  F081         	movff	??_EUSART_Baud_Rate_Calculation+1,___xxtofl@val+1
  2932   001326  6B82               	clrf	(___xxtofl@val+2)& (0+255),b
  2933   001328  6B83               	clrf	(___xxtofl@val+3)& (0+255),b
  2934   00132A  0E00               	movlw	0
  2935   00132C  EC9D  F00F         	call	___xxtofl
  2936   001330  C080  F092         	movff	?___xxtofl,___fldiv@a
  2937   001334  C081  F093         	movff	?___xxtofl+1,___fldiv@a+1
  2938   001338  C082  F094         	movff	?___xxtofl+2,___fldiv@a+2
  2939   00133C  C083  F095         	movff	?___xxtofl+3,___fldiv@a+3
  2940   001340  0E00               	movlw	0
  2941   001342  0100               	movlb	0	; () banked
  2942   001344  6F8E               	movwf	___fldiv@b& (0+255),b
  2943   001346  0E24               	movlw	36
  2944   001348  6F8F               	movwf	(___fldiv@b+1)& (0+255),b
  2945   00134A  0EF4               	movlw	244
  2946   00134C  6F90               	movwf	(___fldiv@b+2)& (0+255),b
  2947   00134E  0E4A               	movlw	74
  2948   001350  6F91               	movwf	(___fldiv@b+3)& (0+255),b
  2949   001352  ECE9  F00C         	call	___fldiv	;wreg free
  2950   001356  C08E  F0BE         	movff	?___fldiv,_EUSART_Baud_Rate_Calculation$2548
  2951   00135A  C08F  F0BF         	movff	?___fldiv+1,_EUSART_Baud_Rate_Calculation$2548+1
  2952   00135E  C090  F0C0         	movff	?___fldiv+2,_EUSART_Baud_Rate_Calculation$2548+2
  2953   001362  C091  F0C1         	movff	?___fldiv+3,_EUSART_Baud_Rate_Calculation$2548+3
  2954   001366                     
  2955                           ;MCAL/USART/usart.c: 167:             Baud_Rate_Temp = ((8000000 / (float)_eusart->baudr
      +                          ate) / 4) - 1;
  2956   001366  0E00               	movlw	0
  2957   001368  0100               	movlb	0	; () banked
  2958   00136A  6F92               	movwf	___fldiv@a& (0+255),b
  2959   00136C  0E00               	movlw	0
  2960   00136E  6F93               	movwf	(___fldiv@a+1)& (0+255),b
  2961   001370  0E80               	movlw	128
  2962   001372  6F94               	movwf	(___fldiv@a+2)& (0+255),b
  2963   001374  0E40               	movlw	64
  2964   001376  6F95               	movwf	(___fldiv@a+3)& (0+255),b
  2965   001378  C0BE  F08E         	movff	_EUSART_Baud_Rate_Calculation$2548,___fldiv@b
  2966   00137C  C0BF  F08F         	movff	_EUSART_Baud_Rate_Calculation$2548+1,___fldiv@b+1
  2967   001380  C0C0  F090         	movff	_EUSART_Baud_Rate_Calculation$2548+2,___fldiv@b+2
  2968   001384  C0C1  F091         	movff	_EUSART_Baud_Rate_Calculation$2548+3,___fldiv@b+3
  2969   001388  ECE9  F00C         	call	___fldiv	;wreg free
  2970   00138C  C08E  F0A7         	movff	?___fldiv,___fladd@b
  2971   001390  C08F  F0A8         	movff	?___fldiv+1,___fladd@b+1
  2972   001394  C090  F0A9         	movff	?___fldiv+2,___fladd@b+2
  2973   001398  C091  F0AA         	movff	?___fldiv+3,___fladd@b+3
  2974   00139C  0E00               	movlw	0
  2975   00139E  0100               	movlb	0	; () banked
  2976   0013A0  6FAB               	movwf	___fladd@a& (0+255),b
  2977   0013A2  0E00               	movlw	0
  2978   0013A4  6FAC               	movwf	(___fladd@a+1)& (0+255),b
  2979   0013A6  0E80               	movlw	128
  2980   0013A8  6FAD               	movwf	(___fladd@a+2)& (0+255),b
  2981   0013AA  0EBF               	movlw	191
  2982   0013AC  6FAE               	movwf	(___fladd@a+3)& (0+255),b
  2983   0013AE  EC88  F00A         	call	___fladd	;wreg free
  2984   0013B2  C0A7  F0BA         	movff	?___fladd,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp
  2985   0013B6  C0A8  F0BB         	movff	?___fladd+1,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+1
  2986   0013BA  C0A9  F0BC         	movff	?___fladd+2,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+2
  2987   0013BE  C0AA  F0BD         	movff	?___fladd+3,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+3
  2988                           
  2989                           ;MCAL/USART/usart.c: 168:             break;
  2990   0013C2  EF6A  F00A         	goto	l4242
  2991   0013C6                     l562:
  2992                           
  2993                           ; BSR set to: 0
  2994                           ;MCAL/USART/usart.c: 170:             TXSTAbits.SYNC = 1;
  2995   0013C6  88AC               	bsf	172,4,c	;volatile
  2996                           
  2997                           ;MCAL/USART/usart.c: 171:             BAUDCONbits.BRG16 = 1;
  2998   0013C8  86B8               	bsf	184,3,c	;volatile
  2999   0013CA                     
  3000                           ; BSR set to: 0
  3001                           ;MCAL/USART/usart.c: 172:             Baud_Rate_Temp = ((8000000 / (float)_eusart->baudr
      +                          ate) / 4) - 1;
  3002   0013CA  51B7               	movf	EUSART_Baud_Rate_Calculation@_eusart& (0+255),w,b
  3003   0013CC  6ED9               	movwf	fsr2l,c
  3004   0013CE  6ADA               	clrf	fsr2h,c
  3005   0013D0  CFDE F0B8          	movff	postinc2,??_EUSART_Baud_Rate_Calculation
  3006   0013D4  CFDD F0B9          	movff	postdec2,??_EUSART_Baud_Rate_Calculation+1
  3007   0013D8  C0B8  F080         	movff	??_EUSART_Baud_Rate_Calculation,___xxtofl@val
  3008   0013DC  C0B9  F081         	movff	??_EUSART_Baud_Rate_Calculation+1,___xxtofl@val+1
  3009   0013E0  6B82               	clrf	(___xxtofl@val+2)& (0+255),b
  3010   0013E2  6B83               	clrf	(___xxtofl@val+3)& (0+255),b
  3011   0013E4  0E00               	movlw	0
  3012   0013E6  EC9D  F00F         	call	___xxtofl
  3013   0013EA  C080  F092         	movff	?___xxtofl,___fldiv@a
  3014   0013EE  C081  F093         	movff	?___xxtofl+1,___fldiv@a+1
  3015   0013F2  C082  F094         	movff	?___xxtofl+2,___fldiv@a+2
  3016   0013F6  C083  F095         	movff	?___xxtofl+3,___fldiv@a+3
  3017   0013FA  0E00               	movlw	0
  3018   0013FC  0100               	movlb	0	; () banked
  3019   0013FE  6F8E               	movwf	___fldiv@b& (0+255),b
  3020   001400  0E24               	movlw	36
  3021   001402  6F8F               	movwf	(___fldiv@b+1)& (0+255),b
  3022   001404  0EF4               	movlw	244
  3023   001406  6F90               	movwf	(___fldiv@b+2)& (0+255),b
  3024   001408  0E4A               	movlw	74
  3025   00140A  6F91               	movwf	(___fldiv@b+3)& (0+255),b
  3026   00140C  ECE9  F00C         	call	___fldiv	;wreg free
  3027   001410  C08E  F0BE         	movff	?___fldiv,_EUSART_Baud_Rate_Calculation$2548
  3028   001414  C08F  F0BF         	movff	?___fldiv+1,_EUSART_Baud_Rate_Calculation$2548+1
  3029   001418  C090  F0C0         	movff	?___fldiv+2,_EUSART_Baud_Rate_Calculation$2548+2
  3030   00141C  C091  F0C1         	movff	?___fldiv+3,_EUSART_Baud_Rate_Calculation$2548+3
  3031   001420                     
  3032                           ;MCAL/USART/usart.c: 172:             Baud_Rate_Temp = ((8000000 / (float)_eusart->baudr
      +                          ate) / 4) - 1;
  3033   001420  0E00               	movlw	0
  3034   001422  0100               	movlb	0	; () banked
  3035   001424  6F92               	movwf	___fldiv@a& (0+255),b
  3036   001426  0E00               	movlw	0
  3037   001428  6F93               	movwf	(___fldiv@a+1)& (0+255),b
  3038   00142A  0E80               	movlw	128
  3039   00142C  6F94               	movwf	(___fldiv@a+2)& (0+255),b
  3040   00142E  0E40               	movlw	64
  3041   001430  6F95               	movwf	(___fldiv@a+3)& (0+255),b
  3042   001432  C0BE  F08E         	movff	_EUSART_Baud_Rate_Calculation$2548,___fldiv@b
  3043   001436  C0BF  F08F         	movff	_EUSART_Baud_Rate_Calculation$2548+1,___fldiv@b+1
  3044   00143A  C0C0  F090         	movff	_EUSART_Baud_Rate_Calculation$2548+2,___fldiv@b+2
  3045   00143E  C0C1  F091         	movff	_EUSART_Baud_Rate_Calculation$2548+3,___fldiv@b+3
  3046   001442  ECE9  F00C         	call	___fldiv	;wreg free
  3047   001446  C08E  F0A7         	movff	?___fldiv,___fladd@b
  3048   00144A  C08F  F0A8         	movff	?___fldiv+1,___fladd@b+1
  3049   00144E  C090  F0A9         	movff	?___fldiv+2,___fladd@b+2
  3050   001452  C091  F0AA         	movff	?___fldiv+3,___fladd@b+3
  3051   001456  0E00               	movlw	0
  3052   001458  0100               	movlb	0	; () banked
  3053   00145A  6FAB               	movwf	___fladd@a& (0+255),b
  3054   00145C  0E00               	movlw	0
  3055   00145E  6FAC               	movwf	(___fladd@a+1)& (0+255),b
  3056   001460  0E80               	movlw	128
  3057   001462  6FAD               	movwf	(___fladd@a+2)& (0+255),b
  3058   001464  0EBF               	movlw	191
  3059   001466  6FAE               	movwf	(___fladd@a+3)& (0+255),b
  3060   001468  EC88  F00A         	call	___fladd	;wreg free
  3061   00146C  C0A7  F0BA         	movff	?___fladd,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp
  3062   001470  C0A8  F0BB         	movff	?___fladd+1,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+1
  3063   001474  C0A9  F0BC         	movff	?___fladd+2,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+2
  3064   001478  C0AA  F0BD         	movff	?___fladd+3,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+3
  3065                           
  3066                           ;MCAL/USART/usart.c: 173:             break;
  3067   00147C  EF6A  F00A         	goto	l4242
  3068   001480                     l4240:
  3069                           
  3070                           ; BSR set to: 0
  3071   001480  51B7               	movf	EUSART_Baud_Rate_Calculation@_eusart& (0+255),w,b
  3072   001482  6ED9               	movwf	fsr2l,c
  3073   001484  6ADA               	clrf	fsr2h,c
  3074   001486  0E02               	movlw	2
  3075   001488  26D9               	addwf	fsr2l,f,c
  3076   00148A  50DF               	movf	indf2,w,c
  3077   00148C  6FB8               	movwf	??_EUSART_Baud_Rate_Calculation& (0+255),b
  3078   00148E  6BB9               	clrf	(??_EUSART_Baud_Rate_Calculation+1)& (0+255),b
  3079                           
  3080                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3081                           ; Switch size 1, requested type "simple"
  3082                           ; Number of cases is 1, Range of values is 0 to 0
  3083                           ; switch strategies available:
  3084                           ; Name         Instructions Cycles
  3085                           ; simple_byte            4     3 (average)
  3086                           ;	Chosen strategy is simple_byte
  3087   001490  51B9               	movf	(??_EUSART_Baud_Rate_Calculation+1)& (0+255),w,b
  3088   001492  0A00               	xorlw	0	; case 0
  3089   001494  B4D8               	btfsc	status,2,c
  3090   001496  EF4F  F00A         	goto	l5548
  3091   00149A  EF6A  F00A         	goto	l4242
  3092   00149E                     l5548:
  3093                           
  3094                           ; BSR set to: 0
  3095                           ; Switch size 1, requested type "simple"
  3096                           ; Number of cases is 6, Range of values is 0 to 5
  3097                           ; switch strategies available:
  3098                           ; Name         Instructions Cycles
  3099                           ; simple_byte           19    10 (average)
  3100                           ;	Chosen strategy is simple_byte
  3101   00149E  51B8               	movf	??_EUSART_Baud_Rate_Calculation& (0+255),w,b
  3102   0014A0  0A00               	xorlw	0	; case 0
  3103   0014A2  B4D8               	btfsc	status,2,c
  3104   0014A4  EF0E  F008         	goto	l556
  3105   0014A8  0A01               	xorlw	1	; case 1
  3106   0014AA  B4D8               	btfsc	status,2,c
  3107   0014AC  EF6C  F008         	goto	l558
  3108   0014B0  0A03               	xorlw	3	; case 2
  3109   0014B2  B4D8               	btfsc	status,2,c
  3110   0014B4  EFCA  F008         	goto	l559
  3111   0014B8  0A01               	xorlw	1	; case 3
  3112   0014BA  B4D8               	btfsc	status,2,c
  3113   0014BC  EF28  F009         	goto	l560
  3114   0014C0  0A07               	xorlw	7	; case 4
  3115   0014C2  B4D8               	btfsc	status,2,c
  3116   0014C4  EF86  F009         	goto	l561
  3117   0014C8  0A01               	xorlw	1	; case 5
  3118   0014CA  B4D8               	btfsc	status,2,c
  3119   0014CC  EFE3  F009         	goto	l562
  3120   0014D0  EF6A  F00A         	goto	l4242
  3121   0014D4                     l4242:
  3122                           
  3123                           ;MCAL/USART/usart.c: 176:     SPBRG = (uint8)((uint32)Baud_Rate_Temp);
  3124   0014D4  C0BA  F080         	movff	EUSART_Baud_Rate_Calculation@Baud_Rate_Temp,___fltol@f1
  3125   0014D8  C0BB  F081         	movff	EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+1,___fltol@f1+1
  3126   0014DC  C0BC  F082         	movff	EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+2,___fltol@f1+2
  3127   0014E0  C0BD  F083         	movff	EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+3,___fltol@f1+3
  3128   0014E4  ECE3  F012         	call	___fltol	;wreg free
  3129   0014E8  0100               	movlb	0	; () banked
  3130   0014EA  5180               	movf	?___fltol& (0+255),w,b
  3131   0014EC  6EAF               	movwf	175,c	;volatile
  3132                           
  3133                           ;MCAL/USART/usart.c: 177:     SPBRGH = (uint8)(((uint32)Baud_Rate_Temp) >> 8);
  3134   0014EE  C0BA  F080         	movff	EUSART_Baud_Rate_Calculation@Baud_Rate_Temp,___fltol@f1
  3135   0014F2  C0BB  F081         	movff	EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+1,___fltol@f1+1
  3136   0014F6  C0BC  F082         	movff	EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+2,___fltol@f1+2
  3137   0014FA  C0BD  F083         	movff	EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+3,___fltol@f1+3
  3138   0014FE  ECE3  F012         	call	___fltol	;wreg free
  3139   001502  0100               	movlb	0	; () banked
  3140   001504  C081  F080         	movff	?___fltol+1,?___fltol
  3141   001508  6B81               	clrf	(?___fltol+1)& (0+255),b
  3142   00150A  5180               	movf	?___fltol& (0+255),w,b
  3143   00150C  6EB0               	movwf	176,c	;volatile
  3144   00150E                     
  3145                           ; BSR set to: 0
  3146   00150E  0012               	return		;funcret
  3147   001510                     __end_of_EUSART_Baud_Rate_Calculation:
  3148                           	callstack 0
  3149                           
  3150 ;; *************** function ___xxtofl *****************
  3151 ;; Defined at:
  3152 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
  3153 ;; Parameters:    Size  Location     Type
  3154 ;;  sign            1    wreg     unsigned char 
  3155 ;;  val             4    0[BANK0 ] long 
  3156 ;; Auto vars:     Size  Location     Type
  3157 ;;  sign            1    8[BANK0 ] unsigned char 
  3158 ;;  arg             4   10[BANK0 ] unsigned long 
  3159 ;;  exp             1    9[BANK0 ] unsigned char 
  3160 ;; Return value:  Size  Location     Type
  3161 ;;                  4    0[BANK0 ] unsigned char 
  3162 ;; Registers used:
  3163 ;;		wreg, status,2, status,0
  3164 ;; Tracked objects:
  3165 ;;		On entry : 0/0
  3166 ;;		On exit  : 0/0
  3167 ;;		Unchanged: 0/0
  3168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3169 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3170 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3171 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3172 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3173 ;;Total ram usage:       14 bytes
  3174 ;; Hardware stack levels used: 1
  3175 ;; Hardware stack levels required when called: 10
  3176 ;; This function calls:
  3177 ;;		Nothing
  3178 ;; This function is called by:
  3179 ;;		_EUSART_Baud_Rate_Calculation
  3180 ;; This function uses a non-reentrant model
  3181 ;;
  3182                           
  3183                           	psect	text13
  3184   001F3A                     __ptext13:
  3185                           	callstack 0
  3186   001F3A                     ___xxtofl:
  3187                           	callstack 17
  3188                           
  3189                           ; BSR set to: 0
  3190                           ;incstack = 0
  3191                           ;___xxtofl@sign stored from wreg
  3192   001F3A  0100               	movlb	0	; () banked
  3193   001F3C  6F88               	movwf	___xxtofl@sign& (0+255),b
  3194   001F3E  0100               	movlb	0	; () banked
  3195   001F40  5188               	movf	___xxtofl@sign& (0+255),w,b
  3196   001F42  B4D8               	btfsc	status,2,c
  3197   001F44  EFA6  F00F         	goto	u3781
  3198   001F48  EFA8  F00F         	goto	u3780
  3199   001F4C                     u3781:
  3200   001F4C  EFCA  F00F         	goto	l1325
  3201   001F50                     u3780:
  3202   001F50                     
  3203                           ; BSR set to: 0
  3204   001F50  BF83               	btfsc	(___xxtofl@val+3)& (0+255),7,b
  3205   001F52  EFAF  F00F         	goto	u3790
  3206   001F56  EFAD  F00F         	goto	u3791
  3207   001F5A                     u3791:
  3208   001F5A  EFCA  F00F         	goto	l1325
  3209   001F5E                     u3790:
  3210   001F5E                     
  3211                           ; BSR set to: 0
  3212   001F5E  C080  F084         	movff	___xxtofl@val,??___xxtofl
  3213   001F62  C081  F085         	movff	___xxtofl@val+1,??___xxtofl+1
  3214   001F66  C082  F086         	movff	___xxtofl@val+2,??___xxtofl+2
  3215   001F6A  C083  F087         	movff	___xxtofl@val+3,??___xxtofl+3
  3216   001F6E  1F84               	comf	??___xxtofl& (0+255),f,b
  3217   001F70  1F85               	comf	(??___xxtofl+1)& (0+255),f,b
  3218   001F72  1F86               	comf	(??___xxtofl+2)& (0+255),f,b
  3219   001F74  1F87               	comf	(??___xxtofl+3)& (0+255),f,b
  3220   001F76  2B84               	incf	??___xxtofl& (0+255),f,b
  3221   001F78  0E00               	movlw	0
  3222   001F7A  2385               	addwfc	(??___xxtofl+1)& (0+255),f,b
  3223   001F7C  2386               	addwfc	(??___xxtofl+2)& (0+255),f,b
  3224   001F7E  2387               	addwfc	(??___xxtofl+3)& (0+255),f,b
  3225   001F80  C084  F08A         	movff	??___xxtofl,___xxtofl@arg
  3226   001F84  C085  F08B         	movff	??___xxtofl+1,___xxtofl@arg+1
  3227   001F88  C086  F08C         	movff	??___xxtofl+2,___xxtofl@arg+2
  3228   001F8C  C087  F08D         	movff	??___xxtofl+3,___xxtofl@arg+3
  3229   001F90  EFD2  F00F         	goto	l4082
  3230   001F94                     l1325:
  3231                           
  3232                           ; BSR set to: 0
  3233   001F94  C080  F08A         	movff	___xxtofl@val,___xxtofl@arg
  3234   001F98  C081  F08B         	movff	___xxtofl@val+1,___xxtofl@arg+1
  3235   001F9C  C082  F08C         	movff	___xxtofl@val+2,___xxtofl@arg+2
  3236   001FA0  C083  F08D         	movff	___xxtofl@val+3,___xxtofl@arg+3
  3237   001FA4                     l4082:
  3238                           
  3239                           ; BSR set to: 0
  3240   001FA4  5180               	movf	___xxtofl@val& (0+255),w,b
  3241   001FA6  1181               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  3242   001FA8  1182               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  3243   001FAA  1183               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  3244   001FAC  A4D8               	btfss	status,2,c
  3245   001FAE  EFDB  F00F         	goto	u3801
  3246   001FB2  EFDD  F00F         	goto	u3800
  3247   001FB6                     u3801:
  3248   001FB6  EFE7  F00F         	goto	l4088
  3249   001FBA                     u3800:
  3250   001FBA                     
  3251                           ; BSR set to: 0
  3252   001FBA  0E00               	movlw	0
  3253   001FBC  6F80               	movwf	?___xxtofl& (0+255),b
  3254   001FBE  0E00               	movlw	0
  3255   001FC0  6F81               	movwf	(?___xxtofl+1)& (0+255),b
  3256   001FC2  0E00               	movlw	0
  3257   001FC4  6F82               	movwf	(?___xxtofl+2)& (0+255),b
  3258   001FC6  0E00               	movlw	0
  3259   001FC8  6F83               	movwf	(?___xxtofl+3)& (0+255),b
  3260   001FCA  EF78  F010         	goto	l1328
  3261   001FCE                     l4088:
  3262                           
  3263                           ; BSR set to: 0
  3264   001FCE  0E96               	movlw	150
  3265   001FD0  6F89               	movwf	___xxtofl@exp& (0+255),b
  3266   001FD2  EFF1  F00F         	goto	l4092
  3267   001FD6                     l4090:
  3268                           
  3269                           ; BSR set to: 0
  3270   001FD6  2B89               	incf	___xxtofl@exp& (0+255),f,b
  3271   001FD8  90D8               	bcf	status,0,c
  3272   001FDA  338D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  3273   001FDC  338C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  3274   001FDE  338B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  3275   001FE0  338A               	rrcf	___xxtofl@arg& (0+255),f,b
  3276   001FE2                     l4092:
  3277                           
  3278                           ; BSR set to: 0
  3279   001FE2  0E00               	movlw	0
  3280   001FE4  158A               	andwf	___xxtofl@arg& (0+255),w,b
  3281   001FE6  6F84               	movwf	??___xxtofl& (0+255),b
  3282   001FE8  0E00               	movlw	0
  3283   001FEA  158B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  3284   001FEC  6F85               	movwf	(??___xxtofl+1)& (0+255),b
  3285   001FEE  0E00               	movlw	0
  3286   001FF0  158C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  3287   001FF2  6F86               	movwf	(??___xxtofl+2)& (0+255),b
  3288   001FF4  0EFE               	movlw	254
  3289   001FF6  158D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  3290   001FF8  6F87               	movwf	(??___xxtofl+3)& (0+255),b
  3291   001FFA  5184               	movf	??___xxtofl& (0+255),w,b
  3292   001FFC  1185               	iorwf	(??___xxtofl+1)& (0+255),w,b
  3293   001FFE  1186               	iorwf	(??___xxtofl+2)& (0+255),w,b
  3294   002000  1187               	iorwf	(??___xxtofl+3)& (0+255),w,b
  3295   002002  A4D8               	btfss	status,2,c
  3296   002004  EF06  F010         	goto	u3811
  3297   002008  EF08  F010         	goto	u3810
  3298   00200C                     u3811:
  3299   00200C  EFEB  F00F         	goto	l4090
  3300   002010                     u3810:
  3301   002010  EF16  F010         	goto	l1332
  3302   002014                     l4094:
  3303                           
  3304                           ; BSR set to: 0
  3305   002014  2B89               	incf	___xxtofl@exp& (0+255),f,b
  3306   002016                     
  3307                           ; BSR set to: 0
  3308   002016  0E01               	movlw	1
  3309   002018  278A               	addwf	___xxtofl@arg& (0+255),f,b
  3310   00201A  0E00               	movlw	0
  3311   00201C  238B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  3312   00201E  238C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  3313   002020  238D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  3314   002022                     
  3315                           ; BSR set to: 0
  3316   002022  90D8               	bcf	status,0,c
  3317   002024  338D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  3318   002026  338C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  3319   002028  338B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  3320   00202A  338A               	rrcf	___xxtofl@arg& (0+255),f,b
  3321   00202C                     l1332:
  3322                           
  3323                           ; BSR set to: 0
  3324   00202C  0E00               	movlw	0
  3325   00202E  158A               	andwf	___xxtofl@arg& (0+255),w,b
  3326   002030  6F84               	movwf	??___xxtofl& (0+255),b
  3327   002032  0E00               	movlw	0
  3328   002034  158B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  3329   002036  6F85               	movwf	(??___xxtofl+1)& (0+255),b
  3330   002038  0E00               	movlw	0
  3331   00203A  158C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  3332   00203C  6F86               	movwf	(??___xxtofl+2)& (0+255),b
  3333   00203E  0EFF               	movlw	255
  3334   002040  158D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  3335   002042  6F87               	movwf	(??___xxtofl+3)& (0+255),b
  3336   002044  5184               	movf	??___xxtofl& (0+255),w,b
  3337   002046  1185               	iorwf	(??___xxtofl+1)& (0+255),w,b
  3338   002048  1186               	iorwf	(??___xxtofl+2)& (0+255),w,b
  3339   00204A  1187               	iorwf	(??___xxtofl+3)& (0+255),w,b
  3340   00204C  A4D8               	btfss	status,2,c
  3341   00204E  EF2B  F010         	goto	u3821
  3342   002052  EF2D  F010         	goto	u3820
  3343   002056                     u3821:
  3344   002056  EF0A  F010         	goto	l4094
  3345   00205A                     u3820:
  3346   00205A  EF35  F010         	goto	l4102
  3347   00205E                     l4100:
  3348                           
  3349                           ; BSR set to: 0
  3350   00205E  0789               	decf	___xxtofl@exp& (0+255),f,b
  3351   002060  90D8               	bcf	status,0,c
  3352   002062  378A               	rlcf	___xxtofl@arg& (0+255),f,b
  3353   002064  378B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  3354   002066  378C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  3355   002068  378D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  3356   00206A                     l4102:
  3357                           
  3358                           ; BSR set to: 0
  3359   00206A  BF8C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  3360   00206C  EF3A  F010         	goto	u3831
  3361   002070  EF3C  F010         	goto	u3830
  3362   002074                     u3831:
  3363   002074  EF44  F010         	goto	l1339
  3364   002078                     u3830:
  3365   002078                     
  3366                           ; BSR set to: 0
  3367   002078  0E02               	movlw	2
  3368   00207A  6189               	cpfslt	___xxtofl@exp& (0+255),b
  3369   00207C  EF42  F010         	goto	u3841
  3370   002080  EF44  F010         	goto	u3840
  3371   002084                     u3841:
  3372   002084  EF2F  F010         	goto	l4100
  3373   002088                     u3840:
  3374   002088                     l1339:
  3375                           
  3376                           ; BSR set to: 0
  3377   002088  B189               	btfsc	___xxtofl@exp& (0+255),0,b
  3378   00208A  EF49  F010         	goto	u3851
  3379   00208E  EF4B  F010         	goto	u3850
  3380   002092                     u3851:
  3381   002092  EF4C  F010         	goto	l4108
  3382   002096                     u3850:
  3383   002096                     
  3384                           ; BSR set to: 0
  3385   002096  9F8C               	bcf	(___xxtofl@arg+2)& (0+255),7,b
  3386   002098                     l4108:
  3387                           
  3388                           ; BSR set to: 0
  3389   002098  90D8               	bcf	status,0,c
  3390   00209A  3389               	rrcf	___xxtofl@exp& (0+255),f,b
  3391   00209C                     
  3392                           ; BSR set to: 0
  3393   00209C  C089  F084         	movff	___xxtofl@exp,??___xxtofl
  3394   0020A0  6B85               	clrf	(??___xxtofl+1)& (0+255),b
  3395   0020A2  6B86               	clrf	(??___xxtofl+2)& (0+255),b
  3396   0020A4  6B87               	clrf	(??___xxtofl+3)& (0+255),b
  3397   0020A6  C084  F087         	movff	??___xxtofl,??___xxtofl+3
  3398   0020AA  6B86               	clrf	(??___xxtofl+2)& (0+255),b
  3399   0020AC  6B85               	clrf	(??___xxtofl+1)& (0+255),b
  3400   0020AE  6B84               	clrf	??___xxtofl& (0+255),b
  3401   0020B0  5184               	movf	??___xxtofl& (0+255),w,b
  3402   0020B2  138A               	iorwf	___xxtofl@arg& (0+255),f,b
  3403   0020B4  5185               	movf	(??___xxtofl+1)& (0+255),w,b
  3404   0020B6  138B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  3405   0020B8  5186               	movf	(??___xxtofl+2)& (0+255),w,b
  3406   0020BA  138C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  3407   0020BC  5187               	movf	(??___xxtofl+3)& (0+255),w,b
  3408   0020BE  138D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  3409   0020C0                     
  3410                           ; BSR set to: 0
  3411   0020C0  5188               	movf	___xxtofl@sign& (0+255),w,b
  3412   0020C2  B4D8               	btfsc	status,2,c
  3413   0020C4  EF66  F010         	goto	u3861
  3414   0020C8  EF68  F010         	goto	u3860
  3415   0020CC                     u3861:
  3416   0020CC  EF70  F010         	goto	l4118
  3417   0020D0                     u3860:
  3418   0020D0                     
  3419                           ; BSR set to: 0
  3420   0020D0  BF83               	btfsc	(___xxtofl@val+3)& (0+255),7,b
  3421   0020D2  EF6F  F010         	goto	u3870
  3422   0020D6  EF6D  F010         	goto	u3871
  3423   0020DA                     u3871:
  3424   0020DA  EF70  F010         	goto	l4118
  3425   0020DE                     u3870:
  3426   0020DE                     
  3427                           ; BSR set to: 0
  3428   0020DE  8F8D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  3429   0020E0                     l4118:
  3430                           
  3431                           ; BSR set to: 0
  3432   0020E0  C08A  F080         	movff	___xxtofl@arg,?___xxtofl
  3433   0020E4  C08B  F081         	movff	___xxtofl@arg+1,?___xxtofl+1
  3434   0020E8  C08C  F082         	movff	___xxtofl@arg+2,?___xxtofl+2
  3435   0020EC  C08D  F083         	movff	___xxtofl@arg+3,?___xxtofl+3
  3436   0020F0                     l1328:
  3437                           
  3438                           ; BSR set to: 0
  3439   0020F0  0012               	return		;funcret
  3440   0020F2                     __end_of___xxtofl:
  3441                           	callstack 0
  3442                           
  3443 ;; *************** function ___fltol *****************
  3444 ;; Defined at:
  3445 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  3446 ;; Parameters:    Size  Location     Type
  3447 ;;  f1              4    0[BANK0 ] unsigned char 
  3448 ;; Auto vars:     Size  Location     Type
  3449 ;;  exp1            1    9[BANK0 ] unsigned char 
  3450 ;;  sign1           1    8[BANK0 ] unsigned char 
  3451 ;; Return value:  Size  Location     Type
  3452 ;;                  4    0[BANK0 ] long 
  3453 ;; Registers used:
  3454 ;;		wreg, status,2, status,0
  3455 ;; Tracked objects:
  3456 ;;		On entry : 0/0
  3457 ;;		On exit  : 0/0
  3458 ;;		Unchanged: 0/0
  3459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3460 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3461 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3462 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3463 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3464 ;;Total ram usage:       10 bytes
  3465 ;; Hardware stack levels used: 1
  3466 ;; Hardware stack levels required when called: 10
  3467 ;; This function calls:
  3468 ;;		Nothing
  3469 ;; This function is called by:
  3470 ;;		_EUSART_Baud_Rate_Calculation
  3471 ;; This function uses a non-reentrant model
  3472 ;;
  3473                           
  3474                           	psect	text14
  3475   0025C6                     __ptext14:
  3476                           	callstack 0
  3477   0025C6                     ___fltol:
  3478                           	callstack 17
  3479   0025C6  0100               	movlb	0	; () banked
  3480   0025C8  3582               	rlcf	(___fltol@f1+2)& (0+255),w,b
  3481   0025CA  3583               	rlcf	(___fltol@f1+3)& (0+255),w,b
  3482   0025CC  6F89               	movwf	___fltol@exp1& (0+255),b
  3483   0025CE  5189               	movf	___fltol@exp1& (0+255),w,b
  3484   0025D0  A4D8               	btfss	status,2,c
  3485   0025D2  EFED  F012         	goto	u3711
  3486   0025D6  EFEF  F012         	goto	u3710
  3487   0025DA                     u3711:
  3488   0025DA  EFF9  F012         	goto	l4038
  3489   0025DE                     u3710:
  3490   0025DE                     l4034:
  3491                           
  3492                           ; BSR set to: 0
  3493   0025DE  0E00               	movlw	0
  3494   0025E0  6F80               	movwf	?___fltol& (0+255),b
  3495   0025E2  0E00               	movlw	0
  3496   0025E4  6F81               	movwf	(?___fltol+1)& (0+255),b
  3497   0025E6  0E00               	movlw	0
  3498   0025E8  6F82               	movwf	(?___fltol+2)& (0+255),b
  3499   0025EA  0E00               	movlw	0
  3500   0025EC  6F83               	movwf	(?___fltol+3)& (0+255),b
  3501   0025EE  EF66  F013         	goto	l967
  3502   0025F2                     l4038:
  3503                           
  3504                           ; BSR set to: 0
  3505   0025F2  C080  F084         	movff	___fltol@f1,??___fltol
  3506   0025F6  C081  F085         	movff	___fltol@f1+1,??___fltol+1
  3507   0025FA  C082  F086         	movff	___fltol@f1+2,??___fltol+2
  3508   0025FE  C083  F087         	movff	___fltol@f1+3,??___fltol+3
  3509   002602  0E20               	movlw	32
  3510   002604  EF09  F013         	goto	u3720
  3511   002608                     u3725:
  3512   002608  90D8               	bcf	status,0,c
  3513   00260A  3387               	rrcf	(??___fltol+3)& (0+255),f,b
  3514   00260C  3386               	rrcf	(??___fltol+2)& (0+255),f,b
  3515   00260E  3385               	rrcf	(??___fltol+1)& (0+255),f,b
  3516   002610  3384               	rrcf	??___fltol& (0+255),f,b
  3517   002612                     u3720:
  3518   002612  2EE8               	decfsz	wreg,f,c
  3519   002614  EF04  F013         	goto	u3725
  3520   002618  5184               	movf	??___fltol& (0+255),w,b
  3521   00261A  6F88               	movwf	___fltol@sign1& (0+255),b
  3522   00261C                     
  3523                           ; BSR set to: 0
  3524   00261C  8F82               	bsf	(___fltol@f1+2)& (0+255),7,b
  3525   00261E                     
  3526                           ; BSR set to: 0
  3527   00261E  0EFF               	movlw	255
  3528   002620  1780               	andwf	___fltol@f1& (0+255),f,b
  3529   002622  0EFF               	movlw	255
  3530   002624  1781               	andwf	(___fltol@f1+1)& (0+255),f,b
  3531   002626  0EFF               	movlw	255
  3532   002628  1782               	andwf	(___fltol@f1+2)& (0+255),f,b
  3533   00262A  0E00               	movlw	0
  3534   00262C  1783               	andwf	(___fltol@f1+3)& (0+255),f,b
  3535   00262E                     
  3536                           ; BSR set to: 0
  3537   00262E  0E96               	movlw	150
  3538   002630  5F89               	subwf	___fltol@exp1& (0+255),f,b
  3539   002632                     
  3540                           ; BSR set to: 0
  3541   002632  BF89               	btfsc	___fltol@exp1& (0+255),7,b
  3542   002634  EF20  F013         	goto	u3730
  3543   002638  EF1E  F013         	goto	u3731
  3544   00263C                     u3731:
  3545   00263C  EF36  F013         	goto	l4058
  3546   002640                     u3730:
  3547   002640                     
  3548                           ; BSR set to: 0
  3549   002640  5189               	movf	___fltol@exp1& (0+255),w,b
  3550   002642  0A80               	xorlw	128
  3551   002644  0F97               	addlw	151
  3552   002646  B0D8               	btfsc	status,0,c
  3553   002648  EF28  F013         	goto	u3741
  3554   00264C  EF2A  F013         	goto	u3740
  3555   002650                     u3741:
  3556   002650  EF2C  F013         	goto	l4054
  3557   002654                     u3740:
  3558   002654  EFEF  F012         	goto	l4034
  3559   002658                     l4054:
  3560                           
  3561                           ; BSR set to: 0
  3562   002658  90D8               	bcf	status,0,c
  3563   00265A  3383               	rrcf	(___fltol@f1+3)& (0+255),f,b
  3564   00265C  3382               	rrcf	(___fltol@f1+2)& (0+255),f,b
  3565   00265E  3381               	rrcf	(___fltol@f1+1)& (0+255),f,b
  3566   002660  3380               	rrcf	___fltol@f1& (0+255),f,b
  3567   002662                     
  3568                           ; BSR set to: 0
  3569   002662  3F89               	incfsz	___fltol@exp1& (0+255),f,b
  3570   002664  EF2C  F013         	goto	l4054
  3571   002668  EF4E  F013         	goto	l4068
  3572   00266C                     l4058:
  3573                           
  3574                           ; BSR set to: 0
  3575   00266C  0E1F               	movlw	31
  3576   00266E  6589               	cpfsgt	___fltol@exp1& (0+255),b
  3577   002670  EF3C  F013         	goto	u3751
  3578   002674  EF3E  F013         	goto	u3750
  3579   002678                     u3751:
  3580   002678  EF46  F013         	goto	l4066
  3581   00267C                     u3750:
  3582   00267C  EFEF  F012         	goto	l4034
  3583   002680                     l4064:
  3584                           
  3585                           ; BSR set to: 0
  3586   002680  90D8               	bcf	status,0,c
  3587   002682  3780               	rlcf	___fltol@f1& (0+255),f,b
  3588   002684  3781               	rlcf	(___fltol@f1+1)& (0+255),f,b
  3589   002686  3782               	rlcf	(___fltol@f1+2)& (0+255),f,b
  3590   002688  3783               	rlcf	(___fltol@f1+3)& (0+255),f,b
  3591   00268A  0789               	decf	___fltol@exp1& (0+255),f,b
  3592   00268C                     l4066:
  3593                           
  3594                           ; BSR set to: 0
  3595   00268C  5189               	movf	___fltol@exp1& (0+255),w,b
  3596   00268E  A4D8               	btfss	status,2,c
  3597   002690  EF4C  F013         	goto	u3761
  3598   002694  EF4E  F013         	goto	u3760
  3599   002698                     u3761:
  3600   002698  EF40  F013         	goto	l4064
  3601   00269C                     u3760:
  3602   00269C                     l4068:
  3603                           
  3604                           ; BSR set to: 0
  3605   00269C  5188               	movf	___fltol@sign1& (0+255),w,b
  3606   00269E  B4D8               	btfsc	status,2,c
  3607   0026A0  EF54  F013         	goto	u3771
  3608   0026A4  EF56  F013         	goto	u3770
  3609   0026A8                     u3771:
  3610   0026A8  EF5E  F013         	goto	l4072
  3611   0026AC                     u3770:
  3612   0026AC                     
  3613                           ; BSR set to: 0
  3614   0026AC  1F83               	comf	(___fltol@f1+3)& (0+255),f,b
  3615   0026AE  1F82               	comf	(___fltol@f1+2)& (0+255),f,b
  3616   0026B0  1F81               	comf	(___fltol@f1+1)& (0+255),f,b
  3617   0026B2  6D80               	negf	___fltol@f1& (0+255),b
  3618   0026B4  0E00               	movlw	0
  3619   0026B6  2381               	addwfc	(___fltol@f1+1)& (0+255),f,b
  3620   0026B8  2382               	addwfc	(___fltol@f1+2)& (0+255),f,b
  3621   0026BA  2383               	addwfc	(___fltol@f1+3)& (0+255),f,b
  3622   0026BC                     l4072:
  3623                           
  3624                           ; BSR set to: 0
  3625   0026BC  C080  F080         	movff	___fltol@f1,?___fltol
  3626   0026C0  C081  F081         	movff	___fltol@f1+1,?___fltol+1
  3627   0026C4  C082  F082         	movff	___fltol@f1+2,?___fltol+2
  3628   0026C8  C083  F083         	movff	___fltol@f1+3,?___fltol+3
  3629   0026CC                     l967:
  3630                           
  3631                           ; BSR set to: 0
  3632   0026CC  0012               	return		;funcret
  3633   0026CE                     __end_of___fltol:
  3634                           	callstack 0
  3635                           
  3636 ;; *************** function ___fldiv *****************
  3637 ;; Defined at:
  3638 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcdiv.c"
  3639 ;; Parameters:    Size  Location     Type
  3640 ;;  b               4   14[BANK0 ] long 
  3641 ;;  a               4   18[BANK0 ] long 
  3642 ;; Auto vars:     Size  Location     Type
  3643 ;;  grs             4   33[BANK0 ] unsigned long 
  3644 ;;  rem             4   26[BANK0 ] unsigned long 
  3645 ;;  new_exp         2   31[BANK0 ] short 
  3646 ;;  aexp            1   38[BANK0 ] unsigned char 
  3647 ;;  bexp            1   37[BANK0 ] unsigned char 
  3648 ;;  sign            1   30[BANK0 ] unsigned char 
  3649 ;; Return value:  Size  Location     Type
  3650 ;;                  4   14[BANK0 ] unsigned char 
  3651 ;; Registers used:
  3652 ;;		wreg, status,2, status,0
  3653 ;; Tracked objects:
  3654 ;;		On entry : 0/0
  3655 ;;		On exit  : 0/0
  3656 ;;		Unchanged: 0/0
  3657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3658 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3659 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3660 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3661 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3662 ;;Total ram usage:       25 bytes
  3663 ;; Hardware stack levels used: 1
  3664 ;; Hardware stack levels required when called: 10
  3665 ;; This function calls:
  3666 ;;		Nothing
  3667 ;; This function is called by:
  3668 ;;		_EUSART_Baud_Rate_Calculation
  3669 ;; This function uses a non-reentrant model
  3670 ;;
  3671                           
  3672                           	psect	text15
  3673   0019D2                     __ptext15:
  3674                           	callstack 0
  3675   0019D2                     ___fldiv:
  3676                           	callstack 17
  3677   0019D2  0100               	movlb	0	; () banked
  3678   0019D4  5191               	movf	(___fldiv@b+3)& (0+255),w,b
  3679   0019D6  0B80               	andlw	128
  3680   0019D8  6F9E               	movwf	___fldiv@sign& (0+255),b
  3681   0019DA  5191               	movf	(___fldiv@b+3)& (0+255),w,b
  3682   0019DC  2591               	addwf	(___fldiv@b+3)& (0+255),w,b
  3683   0019DE  6FA5               	movwf	___fldiv@bexp& (0+255),b
  3684   0019E0                     
  3685                           ; BSR set to: 0
  3686   0019E0  AF90               	btfss	(___fldiv@b+2)& (0+255),7,b
  3687   0019E2  EFF5  F00C         	goto	u3481
  3688   0019E6  EFF7  F00C         	goto	u3480
  3689   0019EA                     u3481:
  3690   0019EA  EFF8  F00C         	goto	l3900
  3691   0019EE                     u3480:
  3692   0019EE                     
  3693                           ; BSR set to: 0
  3694   0019EE  81A5               	bsf	___fldiv@bexp& (0+255),0,b
  3695   0019F0                     l3900:
  3696                           
  3697                           ; BSR set to: 0
  3698   0019F0  51A5               	movf	___fldiv@bexp& (0+255),w,b
  3699   0019F2  B4D8               	btfsc	status,2,c
  3700   0019F4  EFFE  F00C         	goto	u3491
  3701   0019F8  EF00  F00D         	goto	u3490
  3702   0019FC                     u3491:
  3703   0019FC  EF15  F00D         	goto	l3910
  3704   001A00                     u3490:
  3705   001A00                     
  3706                           ; BSR set to: 0
  3707   001A00  29A5               	incf	___fldiv@bexp& (0+255),w,b
  3708   001A02  A4D8               	btfss	status,2,c
  3709   001A04  EF06  F00D         	goto	u3501
  3710   001A08  EF08  F00D         	goto	u3500
  3711   001A0C                     u3501:
  3712   001A0C  EF10  F00D         	goto	l3906
  3713   001A10                     u3500:
  3714   001A10                     
  3715                           ; BSR set to: 0
  3716   001A10  0E00               	movlw	0
  3717   001A12  6F8E               	movwf	___fldiv@b& (0+255),b
  3718   001A14  0E00               	movlw	0
  3719   001A16  6F8F               	movwf	(___fldiv@b+1)& (0+255),b
  3720   001A18  0E00               	movlw	0
  3721   001A1A  6F90               	movwf	(___fldiv@b+2)& (0+255),b
  3722   001A1C  0E00               	movlw	0
  3723   001A1E  6F91               	movwf	(___fldiv@b+3)& (0+255),b
  3724   001A20                     l3906:
  3725                           
  3726                           ; BSR set to: 0
  3727   001A20  8F90               	bsf	(___fldiv@b+2)& (0+255),7,b
  3728   001A22                     
  3729                           ; BSR set to: 0
  3730   001A22  0E00               	movlw	0
  3731   001A24  6F91               	movwf	(___fldiv@b+3)& (0+255),b
  3732   001A26  EF1D  F00D         	goto	l3912
  3733   001A2A                     l3910:
  3734                           
  3735                           ; BSR set to: 0
  3736   001A2A  0E00               	movlw	0
  3737   001A2C  6F8E               	movwf	___fldiv@b& (0+255),b
  3738   001A2E  0E00               	movlw	0
  3739   001A30  6F8F               	movwf	(___fldiv@b+1)& (0+255),b
  3740   001A32  0E00               	movlw	0
  3741   001A34  6F90               	movwf	(___fldiv@b+2)& (0+255),b
  3742   001A36  0E00               	movlw	0
  3743   001A38  6F91               	movwf	(___fldiv@b+3)& (0+255),b
  3744   001A3A                     l3912:
  3745                           
  3746                           ; BSR set to: 0
  3747   001A3A  5195               	movf	(___fldiv@a+3)& (0+255),w,b
  3748   001A3C  0B80               	andlw	128
  3749   001A3E  1B9E               	xorwf	___fldiv@sign& (0+255),f,b
  3750   001A40                     
  3751                           ; BSR set to: 0
  3752   001A40  5195               	movf	(___fldiv@a+3)& (0+255),w,b
  3753   001A42  2595               	addwf	(___fldiv@a+3)& (0+255),w,b
  3754   001A44  6FA6               	movwf	___fldiv@aexp& (0+255),b
  3755   001A46                     
  3756                           ; BSR set to: 0
  3757   001A46  AF94               	btfss	(___fldiv@a+2)& (0+255),7,b
  3758   001A48  EF28  F00D         	goto	u3511
  3759   001A4C  EF2A  F00D         	goto	u3510
  3760   001A50                     u3511:
  3761   001A50  EF2B  F00D         	goto	l3920
  3762   001A54                     u3510:
  3763   001A54                     
  3764                           ; BSR set to: 0
  3765   001A54  81A6               	bsf	___fldiv@aexp& (0+255),0,b
  3766   001A56                     l3920:
  3767                           
  3768                           ; BSR set to: 0
  3769   001A56  51A6               	movf	___fldiv@aexp& (0+255),w,b
  3770   001A58  B4D8               	btfsc	status,2,c
  3771   001A5A  EF31  F00D         	goto	u3521
  3772   001A5E  EF33  F00D         	goto	u3520
  3773   001A62                     u3521:
  3774   001A62  EF48  F00D         	goto	l3930
  3775   001A66                     u3520:
  3776   001A66                     
  3777                           ; BSR set to: 0
  3778   001A66  29A6               	incf	___fldiv@aexp& (0+255),w,b
  3779   001A68  A4D8               	btfss	status,2,c
  3780   001A6A  EF39  F00D         	goto	u3531
  3781   001A6E  EF3B  F00D         	goto	u3530
  3782   001A72                     u3531:
  3783   001A72  EF43  F00D         	goto	l3926
  3784   001A76                     u3530:
  3785   001A76                     
  3786                           ; BSR set to: 0
  3787   001A76  0E00               	movlw	0
  3788   001A78  6F92               	movwf	___fldiv@a& (0+255),b
  3789   001A7A  0E00               	movlw	0
  3790   001A7C  6F93               	movwf	(___fldiv@a+1)& (0+255),b
  3791   001A7E  0E00               	movlw	0
  3792   001A80  6F94               	movwf	(___fldiv@a+2)& (0+255),b
  3793   001A82  0E00               	movlw	0
  3794   001A84  6F95               	movwf	(___fldiv@a+3)& (0+255),b
  3795   001A86                     l3926:
  3796                           
  3797                           ; BSR set to: 0
  3798   001A86  8F94               	bsf	(___fldiv@a+2)& (0+255),7,b
  3799   001A88                     
  3800                           ; BSR set to: 0
  3801   001A88  0E00               	movlw	0
  3802   001A8A  6F95               	movwf	(___fldiv@a+3)& (0+255),b
  3803   001A8C  EF50  F00D         	goto	l3932
  3804   001A90                     l3930:
  3805                           
  3806                           ; BSR set to: 0
  3807   001A90  0E00               	movlw	0
  3808   001A92  6F92               	movwf	___fldiv@a& (0+255),b
  3809   001A94  0E00               	movlw	0
  3810   001A96  6F93               	movwf	(___fldiv@a+1)& (0+255),b
  3811   001A98  0E00               	movlw	0
  3812   001A9A  6F94               	movwf	(___fldiv@a+2)& (0+255),b
  3813   001A9C  0E00               	movlw	0
  3814   001A9E  6F95               	movwf	(___fldiv@a+3)& (0+255),b
  3815   001AA0                     l3932:
  3816                           
  3817                           ; BSR set to: 0
  3818   001AA0  5192               	movf	___fldiv@a& (0+255),w,b
  3819   001AA2  1193               	iorwf	(___fldiv@a+1)& (0+255),w,b
  3820   001AA4  1194               	iorwf	(___fldiv@a+2)& (0+255),w,b
  3821   001AA6  1195               	iorwf	(___fldiv@a+3)& (0+255),w,b
  3822   001AA8  A4D8               	btfss	status,2,c
  3823   001AAA  EF59  F00D         	goto	u3541
  3824   001AAE  EF5B  F00D         	goto	u3540
  3825   001AB2                     u3541:
  3826   001AB2  EF73  F00D         	goto	l3944
  3827   001AB6                     u3540:
  3828   001AB6                     
  3829                           ; BSR set to: 0
  3830   001AB6  0E00               	movlw	0
  3831   001AB8  6F8E               	movwf	___fldiv@b& (0+255),b
  3832   001ABA  0E00               	movlw	0
  3833   001ABC  6F8F               	movwf	(___fldiv@b+1)& (0+255),b
  3834   001ABE  0E00               	movlw	0
  3835   001AC0  6F90               	movwf	(___fldiv@b+2)& (0+255),b
  3836   001AC2  0E00               	movlw	0
  3837   001AC4  6F91               	movwf	(___fldiv@b+3)& (0+255),b
  3838   001AC6                     
  3839                           ; BSR set to: 0
  3840   001AC6  0E80               	movlw	128
  3841   001AC8  1390               	iorwf	(___fldiv@b+2)& (0+255),f,b
  3842   001ACA  0E7F               	movlw	127
  3843   001ACC  1391               	iorwf	(___fldiv@b+3)& (0+255),f,b
  3844   001ACE                     l3938:
  3845                           
  3846                           ; BSR set to: 0
  3847   001ACE  519E               	movf	___fldiv@sign& (0+255),w,b
  3848   001AD0  1391               	iorwf	(___fldiv@b+3)& (0+255),f,b
  3849   001AD2                     
  3850                           ; BSR set to: 0
  3851   001AD2  C08E  F08E         	movff	___fldiv@b,?___fldiv
  3852   001AD6  C08F  F08F         	movff	___fldiv@b+1,?___fldiv+1
  3853   001ADA  C090  F090         	movff	___fldiv@b+2,?___fldiv+2
  3854   001ADE  C091  F091         	movff	___fldiv@b+3,?___fldiv+3
  3855   001AE2  EFB6  F00E         	goto	l1252
  3856   001AE6                     l3944:
  3857                           
  3858                           ; BSR set to: 0
  3859   001AE6  51A5               	movf	___fldiv@bexp& (0+255),w,b
  3860   001AE8  A4D8               	btfss	status,2,c
  3861   001AEA  EF79  F00D         	goto	u3551
  3862   001AEE  EF7B  F00D         	goto	u3550
  3863   001AF2                     u3551:
  3864   001AF2  EF85  F00D         	goto	l3952
  3865   001AF6                     u3550:
  3866   001AF6                     
  3867                           ; BSR set to: 0
  3868   001AF6  0E00               	movlw	0
  3869   001AF8  6F8E               	movwf	?___fldiv& (0+255),b
  3870   001AFA  0E00               	movlw	0
  3871   001AFC  6F8F               	movwf	(?___fldiv+1)& (0+255),b
  3872   001AFE  0E00               	movlw	0
  3873   001B00  6F90               	movwf	(?___fldiv+2)& (0+255),b
  3874   001B02  0E00               	movlw	0
  3875   001B04  6F91               	movwf	(?___fldiv+3)& (0+255),b
  3876   001B06  EFB6  F00E         	goto	l1252
  3877   001B0A                     l3952:
  3878                           
  3879                           ; BSR set to: 0
  3880   001B0A  51A6               	movf	___fldiv@aexp& (0+255),w,b
  3881   001B0C  C0A5  F096         	movff	___fldiv@bexp,??___fldiv
  3882   001B10  6B97               	clrf	(??___fldiv+1)& (0+255),b
  3883   001B12  5F96               	subwf	??___fldiv& (0+255),f,b
  3884   001B14  0E00               	movlw	0
  3885   001B16  5B97               	subwfb	(??___fldiv+1)& (0+255),f,b
  3886   001B18  0E7F               	movlw	127
  3887   001B1A  2596               	addwf	??___fldiv& (0+255),w,b
  3888   001B1C  6F9F               	movwf	___fldiv@new_exp& (0+255),b
  3889   001B1E  0E00               	movlw	0
  3890   001B20  2197               	addwfc	(??___fldiv+1)& (0+255),w,b
  3891   001B22  6FA0               	movwf	(___fldiv@new_exp+1)& (0+255),b
  3892   001B24                     
  3893                           ; BSR set to: 0
  3894   001B24  C08E  F09A         	movff	___fldiv@b,___fldiv@rem
  3895   001B28  C08F  F09B         	movff	___fldiv@b+1,___fldiv@rem+1
  3896   001B2C  C090  F09C         	movff	___fldiv@b+2,___fldiv@rem+2
  3897   001B30  C091  F09D         	movff	___fldiv@b+3,___fldiv@rem+3
  3898   001B34                     
  3899                           ; BSR set to: 0
  3900   001B34  0E00               	movlw	0
  3901   001B36  6F8E               	movwf	___fldiv@b& (0+255),b
  3902   001B38  0E00               	movlw	0
  3903   001B3A  6F8F               	movwf	(___fldiv@b+1)& (0+255),b
  3904   001B3C  0E00               	movlw	0
  3905   001B3E  6F90               	movwf	(___fldiv@b+2)& (0+255),b
  3906   001B40  0E00               	movlw	0
  3907   001B42  6F91               	movwf	(___fldiv@b+3)& (0+255),b
  3908   001B44                     
  3909                           ; BSR set to: 0
  3910   001B44  0E00               	movlw	0
  3911   001B46  6FA1               	movwf	___fldiv@grs& (0+255),b
  3912   001B48  0E00               	movlw	0
  3913   001B4A  6FA2               	movwf	(___fldiv@grs+1)& (0+255),b
  3914   001B4C  0E00               	movlw	0
  3915   001B4E  6FA3               	movwf	(___fldiv@grs+2)& (0+255),b
  3916   001B50  0E00               	movlw	0
  3917   001B52  6FA4               	movwf	(___fldiv@grs+3)& (0+255),b
  3918   001B54                     
  3919                           ; BSR set to: 0
  3920   001B54  0E00               	movlw	0
  3921   001B56  6FA6               	movwf	___fldiv@aexp& (0+255),b
  3922   001B58  EFE6  F00D         	goto	l1254
  3923   001B5C                     l3962:
  3924                           
  3925                           ; BSR set to: 0
  3926   001B5C  51A6               	movf	___fldiv@aexp& (0+255),w,b
  3927   001B5E  B4D8               	btfsc	status,2,c
  3928   001B60  EFB4  F00D         	goto	u3561
  3929   001B64  EFB6  F00D         	goto	u3560
  3930   001B68                     u3561:
  3931   001B68  EFCD  F00D         	goto	l3970
  3932   001B6C                     u3560:
  3933   001B6C                     
  3934                           ; BSR set to: 0
  3935   001B6C  90D8               	bcf	status,0,c
  3936   001B6E  379A               	rlcf	___fldiv@rem& (0+255),f,b
  3937   001B70  379B               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  3938   001B72  379C               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  3939   001B74  379D               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  3940   001B76  90D8               	bcf	status,0,c
  3941   001B78  378E               	rlcf	___fldiv@b& (0+255),f,b
  3942   001B7A  378F               	rlcf	(___fldiv@b+1)& (0+255),f,b
  3943   001B7C  3790               	rlcf	(___fldiv@b+2)& (0+255),f,b
  3944   001B7E  3791               	rlcf	(___fldiv@b+3)& (0+255),f,b
  3945   001B80                     
  3946                           ; BSR set to: 0
  3947   001B80  AFA4               	btfss	(___fldiv@grs+3)& (0+255),7,b
  3948   001B82  EFC5  F00D         	goto	u3571
  3949   001B86  EFC7  F00D         	goto	u3570
  3950   001B8A                     u3571:
  3951   001B8A  EFC8  F00D         	goto	l1257
  3952   001B8E                     u3570:
  3953   001B8E                     
  3954                           ; BSR set to: 0
  3955   001B8E  818E               	bsf	___fldiv@b& (0+255),0,b
  3956   001B90                     l1257:
  3957                           
  3958                           ; BSR set to: 0
  3959   001B90  90D8               	bcf	status,0,c
  3960   001B92  37A1               	rlcf	___fldiv@grs& (0+255),f,b
  3961   001B94  37A2               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  3962   001B96  37A3               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  3963   001B98  37A4               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  3964   001B9A                     l3970:
  3965                           
  3966                           ; BSR set to: 0
  3967   001B9A  5192               	movf	___fldiv@a& (0+255),w,b
  3968   001B9C  5D9A               	subwf	___fldiv@rem& (0+255),w,b
  3969   001B9E  5193               	movf	(___fldiv@a+1)& (0+255),w,b
  3970   001BA0  599B               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  3971   001BA2  5194               	movf	(___fldiv@a+2)& (0+255),w,b
  3972   001BA4  599C               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  3973   001BA6  5195               	movf	(___fldiv@a+3)& (0+255),w,b
  3974   001BA8  599D               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  3975   001BAA  A0D8               	btfss	status,0,c
  3976   001BAC  EFDA  F00D         	goto	u3581
  3977   001BB0  EFDC  F00D         	goto	u3580
  3978   001BB4                     u3581:
  3979   001BB4  EFE5  F00D         	goto	l3976
  3980   001BB8                     u3580:
  3981   001BB8                     
  3982                           ; BSR set to: 0
  3983   001BB8  8DA4               	bsf	(___fldiv@grs+3)& (0+255),6,b
  3984   001BBA                     
  3985                           ; BSR set to: 0
  3986   001BBA  5192               	movf	___fldiv@a& (0+255),w,b
  3987   001BBC  5F9A               	subwf	___fldiv@rem& (0+255),f,b
  3988   001BBE  5193               	movf	(___fldiv@a+1)& (0+255),w,b
  3989   001BC0  5B9B               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  3990   001BC2  5194               	movf	(___fldiv@a+2)& (0+255),w,b
  3991   001BC4  5B9C               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  3992   001BC6  5195               	movf	(___fldiv@a+3)& (0+255),w,b
  3993   001BC8  5B9D               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  3994   001BCA                     l3976:
  3995                           
  3996                           ; BSR set to: 0
  3997   001BCA  2BA6               	incf	___fldiv@aexp& (0+255),f,b
  3998   001BCC                     l1254:
  3999                           
  4000                           ; BSR set to: 0
  4001   001BCC  0E19               	movlw	25
  4002   001BCE  65A6               	cpfsgt	___fldiv@aexp& (0+255),b
  4003   001BD0  EFEC  F00D         	goto	u3591
  4004   001BD4  EFEE  F00D         	goto	u3590
  4005   001BD8                     u3591:
  4006   001BD8  EFAE  F00D         	goto	l3962
  4007   001BDC                     u3590:
  4008   001BDC                     
  4009                           ; BSR set to: 0
  4010   001BDC  519A               	movf	___fldiv@rem& (0+255),w,b
  4011   001BDE  119B               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  4012   001BE0  119C               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  4013   001BE2  119D               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  4014   001BE4  B4D8               	btfsc	status,2,c
  4015   001BE6  EFF7  F00D         	goto	u3601
  4016   001BEA  EFF9  F00D         	goto	u3600
  4017   001BEE                     u3601:
  4018   001BEE  EF11  F00E         	goto	l3988
  4019   001BF2                     u3600:
  4020   001BF2                     
  4021                           ; BSR set to: 0
  4022   001BF2  81A1               	bsf	___fldiv@grs& (0+255),0,b
  4023   001BF4  EF11  F00E         	goto	l3988
  4024   001BF8                     l3982:
  4025                           
  4026                           ; BSR set to: 0
  4027   001BF8  90D8               	bcf	status,0,c
  4028   001BFA  378E               	rlcf	___fldiv@b& (0+255),f,b
  4029   001BFC  378F               	rlcf	(___fldiv@b+1)& (0+255),f,b
  4030   001BFE  3790               	rlcf	(___fldiv@b+2)& (0+255),f,b
  4031   001C00  3791               	rlcf	(___fldiv@b+3)& (0+255),f,b
  4032   001C02                     
  4033                           ; BSR set to: 0
  4034   001C02  AFA4               	btfss	(___fldiv@grs+3)& (0+255),7,b
  4035   001C04  EF06  F00E         	goto	u3611
  4036   001C08  EF08  F00E         	goto	u3610
  4037   001C0C                     u3611:
  4038   001C0C  EF09  F00E         	goto	l1263
  4039   001C10                     u3610:
  4040   001C10                     
  4041                           ; BSR set to: 0
  4042   001C10  818E               	bsf	___fldiv@b& (0+255),0,b
  4043   001C12                     l1263:
  4044                           
  4045                           ; BSR set to: 0
  4046   001C12  90D8               	bcf	status,0,c
  4047   001C14  37A1               	rlcf	___fldiv@grs& (0+255),f,b
  4048   001C16  37A2               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  4049   001C18  37A3               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  4050   001C1A  37A4               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  4051   001C1C  079F               	decf	___fldiv@new_exp& (0+255),f,b
  4052   001C1E  A0D8               	btfss	status,0,c
  4053   001C20  07A0               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  4054   001C22                     l3988:
  4055                           
  4056                           ; BSR set to: 0
  4057   001C22  AF90               	btfss	(___fldiv@b+2)& (0+255),7,b
  4058   001C24  EF16  F00E         	goto	u3621
  4059   001C28  EF18  F00E         	goto	u3620
  4060   001C2C                     u3621:
  4061   001C2C  EFFC  F00D         	goto	l3982
  4062   001C30                     u3620:
  4063   001C30                     
  4064                           ; BSR set to: 0
  4065   001C30  0E00               	movlw	0
  4066   001C32  6FA6               	movwf	___fldiv@aexp& (0+255),b
  4067   001C34                     
  4068                           ; BSR set to: 0
  4069   001C34  AFA4               	btfss	(___fldiv@grs+3)& (0+255),7,b
  4070   001C36  EF1F  F00E         	goto	u3631
  4071   001C3A  EF21  F00E         	goto	u3630
  4072   001C3E                     u3631:
  4073   001C3E  EF45  F00E         	goto	l1265
  4074   001C42                     u3630:
  4075   001C42                     
  4076                           ; BSR set to: 0
  4077   001C42  0EFF               	movlw	255
  4078   001C44  15A1               	andwf	___fldiv@grs& (0+255),w,b
  4079   001C46  6F96               	movwf	??___fldiv& (0+255),b
  4080   001C48  0EFF               	movlw	255
  4081   001C4A  15A2               	andwf	(___fldiv@grs+1)& (0+255),w,b
  4082   001C4C  6F97               	movwf	(??___fldiv+1)& (0+255),b
  4083   001C4E  0EFF               	movlw	255
  4084   001C50  15A3               	andwf	(___fldiv@grs+2)& (0+255),w,b
  4085   001C52  6F98               	movwf	(??___fldiv+2)& (0+255),b
  4086   001C54  0E7F               	movlw	127
  4087   001C56  15A4               	andwf	(___fldiv@grs+3)& (0+255),w,b
  4088   001C58  6F99               	movwf	(??___fldiv+3)& (0+255),b
  4089   001C5A  5196               	movf	??___fldiv& (0+255),w,b
  4090   001C5C  1197               	iorwf	(??___fldiv+1)& (0+255),w,b
  4091   001C5E  1198               	iorwf	(??___fldiv+2)& (0+255),w,b
  4092   001C60  1199               	iorwf	(??___fldiv+3)& (0+255),w,b
  4093   001C62  B4D8               	btfsc	status,2,c
  4094   001C64  EF36  F00E         	goto	u3641
  4095   001C68  EF38  F00E         	goto	u3640
  4096   001C6C                     u3641:
  4097   001C6C  EF3C  F00E         	goto	l1266
  4098   001C70                     u3640:
  4099   001C70                     l3996:
  4100                           
  4101                           ; BSR set to: 0
  4102   001C70  0E01               	movlw	1
  4103   001C72  6FA6               	movwf	___fldiv@aexp& (0+255),b
  4104   001C74  EF45  F00E         	goto	l1265
  4105   001C78                     l1266:
  4106                           
  4107                           ; BSR set to: 0
  4108   001C78  A18E               	btfss	___fldiv@b& (0+255),0,b
  4109   001C7A  EF41  F00E         	goto	u3651
  4110   001C7E  EF43  F00E         	goto	u3650
  4111   001C82                     u3651:
  4112   001C82  EF45  F00E         	goto	l1265
  4113   001C86                     u3650:
  4114   001C86  EF38  F00E         	goto	l3996
  4115   001C8A                     l1265:
  4116                           
  4117                           ; BSR set to: 0
  4118   001C8A  51A6               	movf	___fldiv@aexp& (0+255),w,b
  4119   001C8C  B4D8               	btfsc	status,2,c
  4120   001C8E  EF4B  F00E         	goto	u3661
  4121   001C92  EF4D  F00E         	goto	u3660
  4122   001C96                     u3661:
  4123   001C96  EF71  F00E         	goto	l4008
  4124   001C9A                     u3660:
  4125   001C9A                     
  4126                           ; BSR set to: 0
  4127   001C9A  0E01               	movlw	1
  4128   001C9C  278E               	addwf	___fldiv@b& (0+255),f,b
  4129   001C9E  0E00               	movlw	0
  4130   001CA0  238F               	addwfc	(___fldiv@b+1)& (0+255),f,b
  4131   001CA2  2390               	addwfc	(___fldiv@b+2)& (0+255),f,b
  4132   001CA4  2391               	addwfc	(___fldiv@b+3)& (0+255),f,b
  4133   001CA6                     
  4134                           ; BSR set to: 0
  4135   001CA6  A191               	btfss	(___fldiv@b+3)& (0+255),0,b
  4136   001CA8  EF58  F00E         	goto	u3671
  4137   001CAC  EF5A  F00E         	goto	u3670
  4138   001CB0                     u3671:
  4139   001CB0  EF71  F00E         	goto	l4008
  4140   001CB4                     u3670:
  4141   001CB4                     
  4142                           ; BSR set to: 0
  4143   001CB4  C08E  F096         	movff	___fldiv@b,??___fldiv
  4144   001CB8  C08F  F097         	movff	___fldiv@b+1,??___fldiv+1
  4145   001CBC  C090  F098         	movff	___fldiv@b+2,??___fldiv+2
  4146   001CC0  C091  F099         	movff	___fldiv@b+3,??___fldiv+3
  4147   001CC4  3599               	rlcf	(??___fldiv+3)& (0+255),w,b
  4148   001CC6  3399               	rrcf	(??___fldiv+3)& (0+255),f,b
  4149   001CC8  3398               	rrcf	(??___fldiv+2)& (0+255),f,b
  4150   001CCA  3397               	rrcf	(??___fldiv+1)& (0+255),f,b
  4151   001CCC  3396               	rrcf	??___fldiv& (0+255),f,b
  4152   001CCE  C096  F08E         	movff	??___fldiv,___fldiv@b
  4153   001CD2  C097  F08F         	movff	??___fldiv+1,___fldiv@b+1
  4154   001CD6  C098  F090         	movff	??___fldiv+2,___fldiv@b+2
  4155   001CDA  C099  F091         	movff	??___fldiv+3,___fldiv@b+3
  4156   001CDE                     
  4157                           ; BSR set to: 0
  4158   001CDE  4B9F               	infsnz	___fldiv@new_exp& (0+255),f,b
  4159   001CE0  2BA0               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  4160   001CE2                     l4008:
  4161                           
  4162                           ; BSR set to: 0
  4163   001CE2  BFA0               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  4164   001CE4  EF7C  F00E         	goto	u3681
  4165   001CE8  51A0               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  4166   001CEA  E108               	bnz	u3680
  4167   001CEC  299F               	incf	___fldiv@new_exp& (0+255),w,b
  4168   001CEE  A0D8               	btfss	status,0,c
  4169   001CF0  EF7C  F00E         	goto	u3681
  4170   001CF4  EF7E  F00E         	goto	u3680
  4171   001CF8                     u3681:
  4172   001CF8  EF89  F00E         	goto	l4012
  4173   001CFC                     u3680:
  4174   001CFC                     
  4175                           ; BSR set to: 0
  4176   001CFC  0E00               	movlw	0
  4177   001CFE  6FA0               	movwf	(___fldiv@new_exp+1)& (0+255),b
  4178   001D00  699F               	setf	___fldiv@new_exp& (0+255),b
  4179   001D02  0E00               	movlw	0
  4180   001D04  6F8E               	movwf	___fldiv@b& (0+255),b
  4181   001D06  0E00               	movlw	0
  4182   001D08  6F8F               	movwf	(___fldiv@b+1)& (0+255),b
  4183   001D0A  0E00               	movlw	0
  4184   001D0C  6F90               	movwf	(___fldiv@b+2)& (0+255),b
  4185   001D0E  0E00               	movlw	0
  4186   001D10  6F91               	movwf	(___fldiv@b+3)& (0+255),b
  4187   001D12                     l4012:
  4188                           
  4189                           ; BSR set to: 0
  4190   001D12  BFA0               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  4191   001D14  EF96  F00E         	goto	u3690
  4192   001D18  51A0               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  4193   001D1A  E106               	bnz	u3691
  4194   001D1C  059F               	decf	___fldiv@new_exp& (0+255),w,b
  4195   001D1E  B0D8               	btfsc	status,0,c
  4196   001D20  EF94  F00E         	goto	u3691
  4197   001D24  EF96  F00E         	goto	u3690
  4198   001D28                     u3691:
  4199   001D28  EFA4  F00E         	goto	l4016
  4200   001D2C                     u3690:
  4201   001D2C                     
  4202                           ; BSR set to: 0
  4203   001D2C  0E00               	movlw	0
  4204   001D2E  6FA0               	movwf	(___fldiv@new_exp+1)& (0+255),b
  4205   001D30  0E00               	movlw	0
  4206   001D32  6F9F               	movwf	___fldiv@new_exp& (0+255),b
  4207   001D34  0E00               	movlw	0
  4208   001D36  6F8E               	movwf	___fldiv@b& (0+255),b
  4209   001D38  0E00               	movlw	0
  4210   001D3A  6F8F               	movwf	(___fldiv@b+1)& (0+255),b
  4211   001D3C  0E00               	movlw	0
  4212   001D3E  6F90               	movwf	(___fldiv@b+2)& (0+255),b
  4213   001D40  0E00               	movlw	0
  4214   001D42  6F91               	movwf	(___fldiv@b+3)& (0+255),b
  4215   001D44  0E00               	movlw	0
  4216   001D46  6F9E               	movwf	___fldiv@sign& (0+255),b
  4217   001D48                     l4016:
  4218                           
  4219                           ; BSR set to: 0
  4220   001D48  C09F  F0A5         	movff	___fldiv@new_exp,___fldiv@bexp
  4221   001D4C                     
  4222                           ; BSR set to: 0
  4223   001D4C  A1A5               	btfss	___fldiv@bexp& (0+255),0,b
  4224   001D4E  EFAB  F00E         	goto	u3701
  4225   001D52  EFAD  F00E         	goto	u3700
  4226   001D56                     u3701:
  4227   001D56  EFB0  F00E         	goto	l4022
  4228   001D5A                     u3700:
  4229   001D5A                     
  4230                           ; BSR set to: 0
  4231   001D5A  8F90               	bsf	(___fldiv@b+2)& (0+255),7,b
  4232   001D5C  EFB1  F00E         	goto	l4024
  4233   001D60                     l4022:
  4234                           
  4235                           ; BSR set to: 0
  4236   001D60  9F90               	bcf	(___fldiv@b+2)& (0+255),7,b
  4237   001D62                     l4024:
  4238                           
  4239                           ; BSR set to: 0
  4240   001D62  90D8               	bcf	status,0,c
  4241   001D64  31A5               	rrcf	___fldiv@bexp& (0+255),w,b
  4242   001D66  6F91               	movwf	(___fldiv@b+3)& (0+255),b
  4243   001D68  EF67  F00D         	goto	l3938
  4244   001D6C                     l1252:
  4245                           
  4246                           ; BSR set to: 0
  4247   001D6C  0012               	return		;funcret
  4248   001D6E                     __end_of___fldiv:
  4249                           	callstack 0
  4250                           
  4251 ;; *************** function ___fladd *****************
  4252 ;; Defined at:
  4253 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  4254 ;; Parameters:    Size  Location     Type
  4255 ;;  b               4   39[BANK0 ] unsigned char 
  4256 ;;  a               4   43[BANK0 ] unsigned char 
  4257 ;; Auto vars:     Size  Location     Type
  4258 ;;  grs             1   54[BANK0 ] unsigned char 
  4259 ;;  bexp            1   53[BANK0 ] unsigned char 
  4260 ;;  aexp            1   52[BANK0 ] unsigned char 
  4261 ;;  signs           1   51[BANK0 ] unsigned char 
  4262 ;; Return value:  Size  Location     Type
  4263 ;;                  4   39[BANK0 ] unsigned char 
  4264 ;; Registers used:
  4265 ;;		wreg, status,2, status,0
  4266 ;; Tracked objects:
  4267 ;;		On entry : 0/0
  4268 ;;		On exit  : 0/0
  4269 ;;		Unchanged: 0/0
  4270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4271 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4272 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4273 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4274 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4275 ;;Total ram usage:       16 bytes
  4276 ;; Hardware stack levels used: 1
  4277 ;; Hardware stack levels required when called: 10
  4278 ;; This function calls:
  4279 ;;		Nothing
  4280 ;; This function is called by:
  4281 ;;		_EUSART_Baud_Rate_Calculation
  4282 ;; This function uses a non-reentrant model
  4283 ;;
  4284                           
  4285                           	psect	text16
  4286   001510                     __ptext16:
  4287                           	callstack 0
  4288   001510                     ___fladd:
  4289                           	callstack 17
  4290   001510  0100               	movlb	0	; () banked
  4291   001512  51AA               	movf	(___fladd@b+3)& (0+255),w,b
  4292   001514  0B80               	andlw	128
  4293   001516  6FB3               	movwf	___fladd@signs& (0+255),b
  4294   001518  51AA               	movf	(___fladd@b+3)& (0+255),w,b
  4295   00151A  25AA               	addwf	(___fladd@b+3)& (0+255),w,b
  4296   00151C  6FB5               	movwf	___fladd@bexp& (0+255),b
  4297   00151E                     
  4298                           ; BSR set to: 0
  4299   00151E  AFA9               	btfss	(___fladd@b+2)& (0+255),7,b
  4300   001520  EF94  F00A         	goto	u3091
  4301   001524  EF96  F00A         	goto	u3090
  4302   001528                     u3091:
  4303   001528  EF97  F00A         	goto	l3698
  4304   00152C                     u3090:
  4305   00152C                     
  4306                           ; BSR set to: 0
  4307   00152C  81B5               	bsf	___fladd@bexp& (0+255),0,b
  4308   00152E                     l3698:
  4309                           
  4310                           ; BSR set to: 0
  4311   00152E  51B5               	movf	___fladd@bexp& (0+255),w,b
  4312   001530  B4D8               	btfsc	status,2,c
  4313   001532  EF9D  F00A         	goto	u3101
  4314   001536  EF9F  F00A         	goto	u3100
  4315   00153A                     u3101:
  4316   00153A  EFB4  F00A         	goto	l3708
  4317   00153E                     u3100:
  4318   00153E                     
  4319                           ; BSR set to: 0
  4320   00153E  29B5               	incf	___fladd@bexp& (0+255),w,b
  4321   001540  A4D8               	btfss	status,2,c
  4322   001542  EFA5  F00A         	goto	u3111
  4323   001546  EFA7  F00A         	goto	u3110
  4324   00154A                     u3111:
  4325   00154A  EFAF  F00A         	goto	l3704
  4326   00154E                     u3110:
  4327   00154E                     
  4328                           ; BSR set to: 0
  4329   00154E  0E00               	movlw	0
  4330   001550  6FA7               	movwf	___fladd@b& (0+255),b
  4331   001552  0E00               	movlw	0
  4332   001554  6FA8               	movwf	(___fladd@b+1)& (0+255),b
  4333   001556  0E00               	movlw	0
  4334   001558  6FA9               	movwf	(___fladd@b+2)& (0+255),b
  4335   00155A  0E00               	movlw	0
  4336   00155C  6FAA               	movwf	(___fladd@b+3)& (0+255),b
  4337   00155E                     l3704:
  4338                           
  4339                           ; BSR set to: 0
  4340   00155E  8FA9               	bsf	(___fladd@b+2)& (0+255),7,b
  4341   001560                     
  4342                           ; BSR set to: 0
  4343   001560  0E00               	movlw	0
  4344   001562  6FAA               	movwf	(___fladd@b+3)& (0+255),b
  4345   001564  EFBC  F00A         	goto	l3710
  4346   001568                     l3708:
  4347                           
  4348                           ; BSR set to: 0
  4349   001568  0E00               	movlw	0
  4350   00156A  6FA7               	movwf	___fladd@b& (0+255),b
  4351   00156C  0E00               	movlw	0
  4352   00156E  6FA8               	movwf	(___fladd@b+1)& (0+255),b
  4353   001570  0E00               	movlw	0
  4354   001572  6FA9               	movwf	(___fladd@b+2)& (0+255),b
  4355   001574  0E00               	movlw	0
  4356   001576  6FAA               	movwf	(___fladd@b+3)& (0+255),b
  4357   001578                     l3710:
  4358                           
  4359                           ; BSR set to: 0
  4360   001578  51AE               	movf	(___fladd@a+3)& (0+255),w,b
  4361   00157A  0B80               	andlw	128
  4362   00157C  6FB4               	movwf	___fladd@aexp& (0+255),b
  4363   00157E                     
  4364                           ; BSR set to: 0
  4365   00157E  51B3               	movf	___fladd@signs& (0+255),w,b
  4366   001580  19B4               	xorwf	___fladd@aexp& (0+255),w,b
  4367   001582  B4D8               	btfsc	status,2,c
  4368   001584  EFC6  F00A         	goto	u3121
  4369   001588  EFC8  F00A         	goto	u3120
  4370   00158C                     u3121:
  4371   00158C  EFC9  F00A         	goto	l3716
  4372   001590                     u3120:
  4373   001590                     
  4374                           ; BSR set to: 0
  4375   001590  8DB3               	bsf	___fladd@signs& (0+255),6,b
  4376   001592                     l3716:
  4377                           
  4378                           ; BSR set to: 0
  4379   001592  51AE               	movf	(___fladd@a+3)& (0+255),w,b
  4380   001594  25AE               	addwf	(___fladd@a+3)& (0+255),w,b
  4381   001596  6FB4               	movwf	___fladd@aexp& (0+255),b
  4382   001598                     
  4383                           ; BSR set to: 0
  4384   001598  AFAD               	btfss	(___fladd@a+2)& (0+255),7,b
  4385   00159A  EFD1  F00A         	goto	u3131
  4386   00159E  EFD3  F00A         	goto	u3130
  4387   0015A2                     u3131:
  4388   0015A2  EFD4  F00A         	goto	l3722
  4389   0015A6                     u3130:
  4390   0015A6                     
  4391                           ; BSR set to: 0
  4392   0015A6  81B4               	bsf	___fladd@aexp& (0+255),0,b
  4393   0015A8                     l3722:
  4394                           
  4395                           ; BSR set to: 0
  4396   0015A8  51B4               	movf	___fladd@aexp& (0+255),w,b
  4397   0015AA  B4D8               	btfsc	status,2,c
  4398   0015AC  EFDA  F00A         	goto	u3141
  4399   0015B0  EFDC  F00A         	goto	u3140
  4400   0015B4                     u3141:
  4401   0015B4  EFF1  F00A         	goto	l3732
  4402   0015B8                     u3140:
  4403   0015B8                     
  4404                           ; BSR set to: 0
  4405   0015B8  29B4               	incf	___fladd@aexp& (0+255),w,b
  4406   0015BA  A4D8               	btfss	status,2,c
  4407   0015BC  EFE2  F00A         	goto	u3151
  4408   0015C0  EFE4  F00A         	goto	u3150
  4409   0015C4                     u3151:
  4410   0015C4  EFEC  F00A         	goto	l3728
  4411   0015C8                     u3150:
  4412   0015C8                     
  4413                           ; BSR set to: 0
  4414   0015C8  0E00               	movlw	0
  4415   0015CA  6FAB               	movwf	___fladd@a& (0+255),b
  4416   0015CC  0E00               	movlw	0
  4417   0015CE  6FAC               	movwf	(___fladd@a+1)& (0+255),b
  4418   0015D0  0E00               	movlw	0
  4419   0015D2  6FAD               	movwf	(___fladd@a+2)& (0+255),b
  4420   0015D4  0E00               	movlw	0
  4421   0015D6  6FAE               	movwf	(___fladd@a+3)& (0+255),b
  4422   0015D8                     l3728:
  4423                           
  4424                           ; BSR set to: 0
  4425   0015D8  8FAD               	bsf	(___fladd@a+2)& (0+255),7,b
  4426   0015DA                     
  4427                           ; BSR set to: 0
  4428   0015DA  0E00               	movlw	0
  4429   0015DC  6FAE               	movwf	(___fladd@a+3)& (0+255),b
  4430   0015DE  EFF9  F00A         	goto	l3734
  4431   0015E2                     l3732:
  4432                           
  4433                           ; BSR set to: 0
  4434   0015E2  0E00               	movlw	0
  4435   0015E4  6FAB               	movwf	___fladd@a& (0+255),b
  4436   0015E6  0E00               	movlw	0
  4437   0015E8  6FAC               	movwf	(___fladd@a+1)& (0+255),b
  4438   0015EA  0E00               	movlw	0
  4439   0015EC  6FAD               	movwf	(___fladd@a+2)& (0+255),b
  4440   0015EE  0E00               	movlw	0
  4441   0015F0  6FAE               	movwf	(___fladd@a+3)& (0+255),b
  4442   0015F2                     l3734:
  4443                           
  4444                           ; BSR set to: 0
  4445   0015F2  51B5               	movf	___fladd@bexp& (0+255),w,b
  4446   0015F4  5DB4               	subwf	___fladd@aexp& (0+255),w,b
  4447   0015F6  B0D8               	btfsc	status,0,c
  4448   0015F8  EF00  F00B         	goto	u3161
  4449   0015FC  EF02  F00B         	goto	u3160
  4450   001600                     u3161:
  4451   001600  EF29  F00B         	goto	l3770
  4452   001604                     u3160:
  4453   001604                     
  4454                           ; BSR set to: 0
  4455   001604  ADB3               	btfss	___fladd@signs& (0+255),6,b
  4456   001606  EF07  F00B         	goto	u3171
  4457   00160A  EF09  F00B         	goto	u3170
  4458   00160E                     u3171:
  4459   00160E  EF0B  F00B         	goto	l3740
  4460   001612                     u3170:
  4461   001612                     
  4462                           ; BSR set to: 0
  4463   001612  0E80               	movlw	128
  4464   001614  1BB3               	xorwf	___fladd@signs& (0+255),f,b
  4465   001616                     l3740:
  4466                           
  4467                           ; BSR set to: 0
  4468   001616  C0B5  F0B6         	movff	___fladd@bexp,___fladd@grs
  4469   00161A                     
  4470                           ; BSR set to: 0
  4471   00161A  C0B4  F0B5         	movff	___fladd@aexp,___fladd@bexp
  4472   00161E                     
  4473                           ; BSR set to: 0
  4474   00161E  C0B6  F0B4         	movff	___fladd@grs,___fladd@aexp
  4475   001622                     
  4476                           ; BSR set to: 0
  4477   001622  C0A7  F0B6         	movff	___fladd@b,___fladd@grs
  4478   001626                     
  4479                           ; BSR set to: 0
  4480   001626  C0AB  F0A7         	movff	___fladd@a,___fladd@b
  4481   00162A                     
  4482                           ; BSR set to: 0
  4483   00162A  C0B6  F0AB         	movff	___fladd@grs,___fladd@a
  4484   00162E                     
  4485                           ; BSR set to: 0
  4486   00162E  C0A8  F0B6         	movff	___fladd@b+1,___fladd@grs
  4487   001632                     
  4488                           ; BSR set to: 0
  4489   001632  C0AC  F0A8         	movff	___fladd@a+1,___fladd@b+1
  4490   001636                     
  4491                           ; BSR set to: 0
  4492   001636  C0B6  F0AC         	movff	___fladd@grs,___fladd@a+1
  4493   00163A                     
  4494                           ; BSR set to: 0
  4495   00163A  C0A9  F0B6         	movff	___fladd@b+2,___fladd@grs
  4496   00163E                     
  4497                           ; BSR set to: 0
  4498   00163E  C0AD  F0A9         	movff	___fladd@a+2,___fladd@b+2
  4499   001642                     
  4500                           ; BSR set to: 0
  4501   001642  C0B6  F0AD         	movff	___fladd@grs,___fladd@a+2
  4502   001646                     
  4503                           ; BSR set to: 0
  4504   001646  C0AA  F0B6         	movff	___fladd@b+3,___fladd@grs
  4505   00164A                     
  4506                           ; BSR set to: 0
  4507   00164A  C0AE  F0AA         	movff	___fladd@a+3,___fladd@b+3
  4508   00164E                     
  4509                           ; BSR set to: 0
  4510   00164E  C0B6  F0AE         	movff	___fladd@grs,___fladd@a+3
  4511   001652                     l3770:
  4512                           
  4513                           ; BSR set to: 0
  4514   001652  0E00               	movlw	0
  4515   001654  6FB6               	movwf	___fladd@grs& (0+255),b
  4516   001656                     
  4517                           ; BSR set to: 0
  4518   001656  51B5               	movf	___fladd@bexp& (0+255),w,b
  4519   001658  C0B4  F0AF         	movff	___fladd@aexp,??___fladd
  4520   00165C  6BB0               	clrf	(??___fladd+1)& (0+255),b
  4521   00165E  5FAF               	subwf	??___fladd& (0+255),f,b
  4522   001660  0E00               	movlw	0
  4523   001662  5BB0               	subwfb	(??___fladd+1)& (0+255),f,b
  4524   001664  BFB0               	btfsc	(??___fladd+1)& (0+255),7,b
  4525   001666  EF3E  F00B         	goto	u3181
  4526   00166A  51B0               	movf	(??___fladd+1)& (0+255),w,b
  4527   00166C  E109               	bnz	u3180
  4528   00166E  0E1A               	movlw	26
  4529   001670  5DAF               	subwf	??___fladd& (0+255),w,b
  4530   001672  A0D8               	btfss	status,0,c
  4531   001674  EF3E  F00B         	goto	u3181
  4532   001678  EF40  F00B         	goto	u3180
  4533   00167C                     u3181:
  4534   00167C  EF77  F00B         	goto	l1199
  4535   001680                     u3180:
  4536   001680                     
  4537                           ; BSR set to: 0
  4538   001680  51A7               	movf	___fladd@b& (0+255),w,b
  4539   001682  11A8               	iorwf	(___fladd@b+1)& (0+255),w,b
  4540   001684  11A9               	iorwf	(___fladd@b+2)& (0+255),w,b
  4541   001686  11AA               	iorwf	(___fladd@b+3)& (0+255),w,b
  4542   001688  A4D8               	btfss	status,2,c
  4543   00168A  EF49  F00B         	goto	u3191
  4544   00168E  EF4C  F00B         	goto	u3190
  4545   001692                     u3191:
  4546   001692  0E01               	movlw	1
  4547   001694  EF4D  F00B         	goto	u3200
  4548   001698                     u3190:
  4549   001698  0E00               	movlw	0
  4550   00169A                     u3200:
  4551   00169A  6FB6               	movwf	___fladd@grs& (0+255),b
  4552   00169C                     
  4553                           ; BSR set to: 0
  4554   00169C  0E00               	movlw	0
  4555   00169E  6FA7               	movwf	___fladd@b& (0+255),b
  4556   0016A0  0E00               	movlw	0
  4557   0016A2  6FA8               	movwf	(___fladd@b+1)& (0+255),b
  4558   0016A4  0E00               	movlw	0
  4559   0016A6  6FA9               	movwf	(___fladd@b+2)& (0+255),b
  4560   0016A8  0E00               	movlw	0
  4561   0016AA  6FAA               	movwf	(___fladd@b+3)& (0+255),b
  4562   0016AC                     
  4563                           ; BSR set to: 0
  4564   0016AC  C0B4  F0B5         	movff	___fladd@aexp,___fladd@bexp
  4565   0016B0  EF80  F00B         	goto	l1198
  4566   0016B4                     l1200:
  4567                           
  4568                           ; BSR set to: 0
  4569   0016B4  A1B6               	btfss	___fladd@grs& (0+255),0,b
  4570   0016B6  EF5F  F00B         	goto	u3211
  4571   0016BA  EF61  F00B         	goto	u3210
  4572   0016BE                     u3211:
  4573   0016BE  EF67  F00B         	goto	l3782
  4574   0016C2                     u3210:
  4575   0016C2                     
  4576                           ; BSR set to: 0
  4577   0016C2  90D8               	bcf	status,0,c
  4578   0016C4  31B6               	rrcf	___fladd@grs& (0+255),w,b
  4579   0016C6  0901               	iorlw	1
  4580   0016C8  6FB6               	movwf	___fladd@grs& (0+255),b
  4581   0016CA  EF69  F00B         	goto	l3784
  4582   0016CE                     l3782:
  4583                           
  4584                           ; BSR set to: 0
  4585   0016CE  90D8               	bcf	status,0,c
  4586   0016D0  33B6               	rrcf	___fladd@grs& (0+255),f,b
  4587   0016D2                     l3784:
  4588                           
  4589                           ; BSR set to: 0
  4590   0016D2  A1A7               	btfss	___fladd@b& (0+255),0,b
  4591   0016D4  EF6E  F00B         	goto	u3221
  4592   0016D8  EF70  F00B         	goto	u3220
  4593   0016DC                     u3221:
  4594   0016DC  EF71  F00B         	goto	l3788
  4595   0016E0                     u3220:
  4596   0016E0                     
  4597                           ; BSR set to: 0
  4598   0016E0  8FB6               	bsf	___fladd@grs& (0+255),7,b
  4599   0016E2                     l3788:
  4600                           
  4601                           ; BSR set to: 0
  4602   0016E2  35AA               	rlcf	(___fladd@b+3)& (0+255),w,b
  4603   0016E4  33AA               	rrcf	(___fladd@b+3)& (0+255),f,b
  4604   0016E6  33A9               	rrcf	(___fladd@b+2)& (0+255),f,b
  4605   0016E8  33A8               	rrcf	(___fladd@b+1)& (0+255),f,b
  4606   0016EA  33A7               	rrcf	___fladd@b& (0+255),f,b
  4607   0016EC                     
  4608                           ; BSR set to: 0
  4609   0016EC  2BB5               	incf	___fladd@bexp& (0+255),f,b
  4610   0016EE                     l1199:
  4611                           
  4612                           ; BSR set to: 0
  4613   0016EE  51B4               	movf	___fladd@aexp& (0+255),w,b
  4614   0016F0  5DB5               	subwf	___fladd@bexp& (0+255),w,b
  4615   0016F2  A0D8               	btfss	status,0,c
  4616   0016F4  EF7E  F00B         	goto	u3231
  4617   0016F8  EF80  F00B         	goto	u3230
  4618   0016FC                     u3231:
  4619   0016FC  EF5A  F00B         	goto	l1200
  4620   001700                     u3230:
  4621   001700                     l1198:
  4622                           
  4623                           ; BSR set to: 0
  4624   001700  BDB3               	btfsc	___fladd@signs& (0+255),6,b
  4625   001702  EF85  F00B         	goto	u3241
  4626   001706  EF87  F00B         	goto	u3240
  4627   00170A                     u3241:
  4628   00170A  EFC7  F00B         	goto	l3816
  4629   00170E                     u3240:
  4630   00170E                     
  4631                           ; BSR set to: 0
  4632   00170E  51B5               	movf	___fladd@bexp& (0+255),w,b
  4633   001710  A4D8               	btfss	status,2,c
  4634   001712  EF8D  F00B         	goto	u3251
  4635   001716  EF8F  F00B         	goto	u3250
  4636   00171A                     u3251:
  4637   00171A  EF99  F00B         	goto	l3798
  4638   00171E                     u3250:
  4639   00171E                     
  4640                           ; BSR set to: 0
  4641   00171E  0E00               	movlw	0
  4642   001720  6FA7               	movwf	?___fladd& (0+255),b
  4643   001722  0E00               	movlw	0
  4644   001724  6FA8               	movwf	(?___fladd+1)& (0+255),b
  4645   001726  0E00               	movlw	0
  4646   001728  6FA9               	movwf	(?___fladd+2)& (0+255),b
  4647   00172A  0E00               	movlw	0
  4648   00172C  6FAA               	movwf	(?___fladd+3)& (0+255),b
  4649   00172E  EFE8  F00C         	goto	l1207
  4650   001732                     l3798:
  4651                           
  4652                           ; BSR set to: 0
  4653   001732  51AB               	movf	___fladd@a& (0+255),w,b
  4654   001734  27A7               	addwf	___fladd@b& (0+255),f,b
  4655   001736  51AC               	movf	(___fladd@a+1)& (0+255),w,b
  4656   001738  23A8               	addwfc	(___fladd@b+1)& (0+255),f,b
  4657   00173A  51AD               	movf	(___fladd@a+2)& (0+255),w,b
  4658   00173C  23A9               	addwfc	(___fladd@b+2)& (0+255),f,b
  4659   00173E  51AE               	movf	(___fladd@a+3)& (0+255),w,b
  4660   001740  23AA               	addwfc	(___fladd@b+3)& (0+255),f,b
  4661   001742                     
  4662                           ; BSR set to: 0
  4663   001742  A1AA               	btfss	(___fladd@b+3)& (0+255),0,b
  4664   001744  EFA6  F00B         	goto	u3261
  4665   001748  EFA8  F00B         	goto	u3260
  4666   00174C                     u3261:
  4667   00174C  EF54  F00C         	goto	l3852
  4668   001750                     u3260:
  4669   001750                     
  4670                           ; BSR set to: 0
  4671   001750  A1B6               	btfss	___fladd@grs& (0+255),0,b
  4672   001752  EFAD  F00B         	goto	u3271
  4673   001756  EFAF  F00B         	goto	u3270
  4674   00175A                     u3271:
  4675   00175A  EFB5  F00B         	goto	l3806
  4676   00175E                     u3270:
  4677   00175E                     
  4678                           ; BSR set to: 0
  4679   00175E  90D8               	bcf	status,0,c
  4680   001760  31B6               	rrcf	___fladd@grs& (0+255),w,b
  4681   001762  0901               	iorlw	1
  4682   001764  6FB6               	movwf	___fladd@grs& (0+255),b
  4683   001766  EFB7  F00B         	goto	l3808
  4684   00176A                     l3806:
  4685                           
  4686                           ; BSR set to: 0
  4687   00176A  90D8               	bcf	status,0,c
  4688   00176C  33B6               	rrcf	___fladd@grs& (0+255),f,b
  4689   00176E                     l3808:
  4690                           
  4691                           ; BSR set to: 0
  4692   00176E  A1A7               	btfss	___fladd@b& (0+255),0,b
  4693   001770  EFBC  F00B         	goto	u3281
  4694   001774  EFBE  F00B         	goto	u3280
  4695   001778                     u3281:
  4696   001778  EFBF  F00B         	goto	l3812
  4697   00177C                     u3280:
  4698   00177C                     
  4699                           ; BSR set to: 0
  4700   00177C  8FB6               	bsf	___fladd@grs& (0+255),7,b
  4701   00177E                     l3812:
  4702                           
  4703                           ; BSR set to: 0
  4704   00177E  35AA               	rlcf	(___fladd@b+3)& (0+255),w,b
  4705   001780  33AA               	rrcf	(___fladd@b+3)& (0+255),f,b
  4706   001782  33A9               	rrcf	(___fladd@b+2)& (0+255),f,b
  4707   001784  33A8               	rrcf	(___fladd@b+1)& (0+255),f,b
  4708   001786  33A7               	rrcf	___fladd@b& (0+255),f,b
  4709   001788                     
  4710                           ; BSR set to: 0
  4711   001788  2BB5               	incf	___fladd@bexp& (0+255),f,b
  4712   00178A  EF54  F00C         	goto	l3852
  4713   00178E                     l3816:
  4714                           
  4715                           ; BSR set to: 0
  4716   00178E  51AB               	movf	___fladd@a& (0+255),w,b
  4717   001790  5DA7               	subwf	___fladd@b& (0+255),w,b
  4718   001792  51AC               	movf	(___fladd@a+1)& (0+255),w,b
  4719   001794  59A8               	subwfb	(___fladd@b+1)& (0+255),w,b
  4720   001796  51AD               	movf	(___fladd@a+2)& (0+255),w,b
  4721   001798  59A9               	subwfb	(___fladd@b+2)& (0+255),w,b
  4722   00179A  51AA               	movf	(___fladd@b+3)& (0+255),w,b
  4723   00179C  0A80               	xorlw	128
  4724   00179E  6FAF               	movwf	??___fladd& (0+255),b
  4725   0017A0  51AE               	movf	(___fladd@a+3)& (0+255),w,b
  4726   0017A2  0A80               	xorlw	128
  4727   0017A4  59AF               	subwfb	??___fladd& (0+255),w,b
  4728   0017A6  B0D8               	btfsc	status,0,c
  4729   0017A8  EFD8  F00B         	goto	u3291
  4730   0017AC  EFDA  F00B         	goto	u3290
  4731   0017B0                     u3291:
  4732   0017B0  EF05  F00C         	goto	l3826
  4733   0017B4                     u3290:
  4734   0017B4                     
  4735                           ; BSR set to: 0
  4736   0017B4  51A7               	movf	___fladd@b& (0+255),w,b
  4737   0017B6  5DAB               	subwf	___fladd@a& (0+255),w,b
  4738   0017B8  6FAF               	movwf	??___fladd& (0+255),b
  4739   0017BA  51A8               	movf	(___fladd@b+1)& (0+255),w,b
  4740   0017BC  59AC               	subwfb	(___fladd@a+1)& (0+255),w,b
  4741   0017BE  6FB0               	movwf	(??___fladd+1)& (0+255),b
  4742   0017C0  51A9               	movf	(___fladd@b+2)& (0+255),w,b
  4743   0017C2  59AD               	subwfb	(___fladd@a+2)& (0+255),w,b
  4744   0017C4  6FB1               	movwf	(??___fladd+2)& (0+255),b
  4745   0017C6  51AA               	movf	(___fladd@b+3)& (0+255),w,b
  4746   0017C8  59AE               	subwfb	(___fladd@a+3)& (0+255),w,b
  4747   0017CA  6FB2               	movwf	(??___fladd+3)& (0+255),b
  4748   0017CC  0EFF               	movlw	255
  4749   0017CE  25AF               	addwf	??___fladd& (0+255),w,b
  4750   0017D0  6FA7               	movwf	___fladd@b& (0+255),b
  4751   0017D2  0EFF               	movlw	255
  4752   0017D4  21B0               	addwfc	(??___fladd+1)& (0+255),w,b
  4753   0017D6  6FA8               	movwf	(___fladd@b+1)& (0+255),b
  4754   0017D8  0EFF               	movlw	255
  4755   0017DA  21B1               	addwfc	(??___fladd+2)& (0+255),w,b
  4756   0017DC  6FA9               	movwf	(___fladd@b+2)& (0+255),b
  4757   0017DE  0EFF               	movlw	255
  4758   0017E0  21B2               	addwfc	(??___fladd+3)& (0+255),w,b
  4759   0017E2  6FAA               	movwf	(___fladd@b+3)& (0+255),b
  4760   0017E4  0E80               	movlw	128
  4761   0017E6  1BB3               	xorwf	___fladd@signs& (0+255),f,b
  4762   0017E8                     
  4763                           ; BSR set to: 0
  4764   0017E8  6DB6               	negf	___fladd@grs& (0+255),b
  4765   0017EA                     
  4766                           ; BSR set to: 0
  4767   0017EA  51B6               	movf	___fladd@grs& (0+255),w,b
  4768   0017EC  A4D8               	btfss	status,2,c
  4769   0017EE  EFFB  F00B         	goto	u3301
  4770   0017F2  EFFD  F00B         	goto	u3300
  4771   0017F6                     u3301:
  4772   0017F6  EF0D  F00C         	goto	l1215
  4773   0017FA                     u3300:
  4774   0017FA                     
  4775                           ; BSR set to: 0
  4776   0017FA  0E01               	movlw	1
  4777   0017FC  27A7               	addwf	___fladd@b& (0+255),f,b
  4778   0017FE  0E00               	movlw	0
  4779   001800  23A8               	addwfc	(___fladd@b+1)& (0+255),f,b
  4780   001802  23A9               	addwfc	(___fladd@b+2)& (0+255),f,b
  4781   001804  23AA               	addwfc	(___fladd@b+3)& (0+255),f,b
  4782   001806  EF0D  F00C         	goto	l1215
  4783   00180A                     l3826:
  4784                           
  4785                           ; BSR set to: 0
  4786   00180A  51AB               	movf	___fladd@a& (0+255),w,b
  4787   00180C  5FA7               	subwf	___fladd@b& (0+255),f,b
  4788   00180E  51AC               	movf	(___fladd@a+1)& (0+255),w,b
  4789   001810  5BA8               	subwfb	(___fladd@b+1)& (0+255),f,b
  4790   001812  51AD               	movf	(___fladd@a+2)& (0+255),w,b
  4791   001814  5BA9               	subwfb	(___fladd@b+2)& (0+255),f,b
  4792   001816  51AE               	movf	(___fladd@a+3)& (0+255),w,b
  4793   001818  5BAA               	subwfb	(___fladd@b+3)& (0+255),f,b
  4794   00181A                     l1215:
  4795                           
  4796                           ; BSR set to: 0
  4797   00181A  51A7               	movf	___fladd@b& (0+255),w,b
  4798   00181C  11A8               	iorwf	(___fladd@b+1)& (0+255),w,b
  4799   00181E  11A9               	iorwf	(___fladd@b+2)& (0+255),w,b
  4800   001820  11AA               	iorwf	(___fladd@b+3)& (0+255),w,b
  4801   001822  A4D8               	btfss	status,2,c
  4802   001824  EF16  F00C         	goto	u3311
  4803   001828  EF18  F00C         	goto	u3310
  4804   00182C                     u3311:
  4805   00182C  EF4D  F00C         	goto	l3850
  4806   001830                     u3310:
  4807   001830                     
  4808                           ; BSR set to: 0
  4809   001830  51B6               	movf	___fladd@grs& (0+255),w,b
  4810   001832  A4D8               	btfss	status,2,c
  4811   001834  EF1E  F00C         	goto	u3321
  4812   001838  EF20  F00C         	goto	u3320
  4813   00183C                     u3321:
  4814   00183C  EF4D  F00C         	goto	l3850
  4815   001840                     u3320:
  4816   001840                     
  4817                           ; BSR set to: 0
  4818   001840  0E00               	movlw	0
  4819   001842  6FA7               	movwf	?___fladd& (0+255),b
  4820   001844  0E00               	movlw	0
  4821   001846  6FA8               	movwf	(?___fladd+1)& (0+255),b
  4822   001848  0E00               	movlw	0
  4823   00184A  6FA9               	movwf	(?___fladd+2)& (0+255),b
  4824   00184C  0E00               	movlw	0
  4825   00184E  6FAA               	movwf	(?___fladd+3)& (0+255),b
  4826   001850  EFE8  F00C         	goto	l1207
  4827   001854                     l3834:
  4828                           
  4829                           ; BSR set to: 0
  4830   001854  90D8               	bcf	status,0,c
  4831   001856  37A7               	rlcf	___fladd@b& (0+255),f,b
  4832   001858  37A8               	rlcf	(___fladd@b+1)& (0+255),f,b
  4833   00185A  37A9               	rlcf	(___fladd@b+2)& (0+255),f,b
  4834   00185C  37AA               	rlcf	(___fladd@b+3)& (0+255),f,b
  4835   00185E                     
  4836                           ; BSR set to: 0
  4837   00185E  AFB6               	btfss	___fladd@grs& (0+255),7,b
  4838   001860  EF34  F00C         	goto	u3331
  4839   001864  EF36  F00C         	goto	u3330
  4840   001868                     u3331:
  4841   001868  EF37  F00C         	goto	l3840
  4842   00186C                     u3330:
  4843   00186C                     
  4844                           ; BSR set to: 0
  4845   00186C  81A7               	bsf	___fladd@b& (0+255),0,b
  4846   00186E                     l3840:
  4847                           
  4848                           ; BSR set to: 0
  4849   00186E  A1B6               	btfss	___fladd@grs& (0+255),0,b
  4850   001870  EF3C  F00C         	goto	u3341
  4851   001874  EF3E  F00C         	goto	u3340
  4852   001878                     u3341:
  4853   001878  EF42  F00C         	goto	l3844
  4854   00187C                     u3340:
  4855   00187C                     
  4856                           ; BSR set to: 0
  4857   00187C  80D8               	bsf	status,0,c
  4858   00187E  37B6               	rlcf	___fladd@grs& (0+255),f,b
  4859   001880  EF44  F00C         	goto	l3846
  4860   001884                     l3844:
  4861                           
  4862                           ; BSR set to: 0
  4863   001884  90D8               	bcf	status,0,c
  4864   001886  37B6               	rlcf	___fladd@grs& (0+255),f,b
  4865   001888                     l3846:
  4866                           
  4867                           ; BSR set to: 0
  4868   001888  51B5               	movf	___fladd@bexp& (0+255),w,b
  4869   00188A  B4D8               	btfsc	status,2,c
  4870   00188C  EF4A  F00C         	goto	u3351
  4871   001890  EF4C  F00C         	goto	u3350
  4872   001894                     u3351:
  4873   001894  EF4D  F00C         	goto	l3850
  4874   001898                     u3350:
  4875   001898                     
  4876                           ; BSR set to: 0
  4877   001898  07B5               	decf	___fladd@bexp& (0+255),f,b
  4878   00189A                     l3850:
  4879                           
  4880                           ; BSR set to: 0
  4881   00189A  AFA9               	btfss	(___fladd@b+2)& (0+255),7,b
  4882   00189C  EF52  F00C         	goto	u3361
  4883   0018A0  EF54  F00C         	goto	u3360
  4884   0018A4                     u3361:
  4885   0018A4  EF2A  F00C         	goto	l3834
  4886   0018A8                     u3360:
  4887   0018A8                     l3852:
  4888                           
  4889                           ; BSR set to: 0
  4890   0018A8  0E00               	movlw	0
  4891   0018AA  6FB4               	movwf	___fladd@aexp& (0+255),b
  4892   0018AC                     
  4893                           ; BSR set to: 0
  4894   0018AC  AFB6               	btfss	___fladd@grs& (0+255),7,b
  4895   0018AE  EF5B  F00C         	goto	u3371
  4896   0018B2  EF5D  F00C         	goto	u3370
  4897   0018B6                     u3371:
  4898   0018B6  EF75  F00C         	goto	l1224
  4899   0018BA                     u3370:
  4900   0018BA                     
  4901                           ; BSR set to: 0
  4902   0018BA  C0B6  F0AF         	movff	___fladd@grs,??___fladd
  4903   0018BE  0E7F               	movlw	127
  4904   0018C0  17AF               	andwf	??___fladd& (0+255),f,b
  4905   0018C2  B4D8               	btfsc	status,2,c
  4906   0018C4  EF66  F00C         	goto	u3381
  4907   0018C8  EF68  F00C         	goto	u3380
  4908   0018CC                     u3381:
  4909   0018CC  EF6C  F00C         	goto	l1225
  4910   0018D0                     u3380:
  4911   0018D0                     l3858:
  4912                           
  4913                           ; BSR set to: 0
  4914   0018D0  0E01               	movlw	1
  4915   0018D2  6FB4               	movwf	___fladd@aexp& (0+255),b
  4916   0018D4  EF75  F00C         	goto	l1224
  4917   0018D8                     l1225:
  4918                           
  4919                           ; BSR set to: 0
  4920   0018D8  A1A7               	btfss	___fladd@b& (0+255),0,b
  4921   0018DA  EF71  F00C         	goto	u3391
  4922   0018DE  EF73  F00C         	goto	u3390
  4923   0018E2                     u3391:
  4924   0018E2  EF75  F00C         	goto	l1224
  4925   0018E6                     u3390:
  4926   0018E6  EF68  F00C         	goto	l3858
  4927   0018EA                     l1224:
  4928                           
  4929                           ; BSR set to: 0
  4930   0018EA  51B4               	movf	___fladd@aexp& (0+255),w,b
  4931   0018EC  B4D8               	btfsc	status,2,c
  4932   0018EE  EF7B  F00C         	goto	u3401
  4933   0018F2  EF7D  F00C         	goto	u3400
  4934   0018F6                     u3401:
  4935   0018F6  EFA8  F00C         	goto	l3870
  4936   0018FA                     u3400:
  4937   0018FA                     
  4938                           ; BSR set to: 0
  4939   0018FA  0E01               	movlw	1
  4940   0018FC  27A7               	addwf	___fladd@b& (0+255),f,b
  4941   0018FE  0E00               	movlw	0
  4942   001900  23A8               	addwfc	(___fladd@b+1)& (0+255),f,b
  4943   001902  23A9               	addwfc	(___fladd@b+2)& (0+255),f,b
  4944   001904  23AA               	addwfc	(___fladd@b+3)& (0+255),f,b
  4945   001906                     
  4946                           ; BSR set to: 0
  4947   001906  A1AA               	btfss	(___fladd@b+3)& (0+255),0,b
  4948   001908  EF88  F00C         	goto	u3411
  4949   00190C  EF8A  F00C         	goto	u3410
  4950   001910                     u3411:
  4951   001910  EFA8  F00C         	goto	l3870
  4952   001914                     u3410:
  4953   001914                     
  4954                           ; BSR set to: 0
  4955   001914  C0A7  F0AF         	movff	___fladd@b,??___fladd
  4956   001918  C0A8  F0B0         	movff	___fladd@b+1,??___fladd+1
  4957   00191C  C0A9  F0B1         	movff	___fladd@b+2,??___fladd+2
  4958   001920  C0AA  F0B2         	movff	___fladd@b+3,??___fladd+3
  4959   001924  35B2               	rlcf	(??___fladd+3)& (0+255),w,b
  4960   001926  33B2               	rrcf	(??___fladd+3)& (0+255),f,b
  4961   001928  33B1               	rrcf	(??___fladd+2)& (0+255),f,b
  4962   00192A  33B0               	rrcf	(??___fladd+1)& (0+255),f,b
  4963   00192C  33AF               	rrcf	??___fladd& (0+255),f,b
  4964   00192E  C0AF  F0A7         	movff	??___fladd,___fladd@b
  4965   001932  C0B0  F0A8         	movff	??___fladd+1,___fladd@b+1
  4966   001936  C0B1  F0A9         	movff	??___fladd+2,___fladd@b+2
  4967   00193A  C0B2  F0AA         	movff	??___fladd+3,___fladd@b+3
  4968   00193E  29B5               	incf	___fladd@bexp& (0+255),w,b
  4969   001940  B4D8               	btfsc	status,2,c
  4970   001942  EFA5  F00C         	goto	u3421
  4971   001946  EFA7  F00C         	goto	u3420
  4972   00194A                     u3421:
  4973   00194A  EFA8  F00C         	goto	l3870
  4974   00194E                     u3420:
  4975   00194E                     
  4976                           ; BSR set to: 0
  4977   00194E  2BB5               	incf	___fladd@bexp& (0+255),f,b
  4978   001950                     l3870:
  4979                           
  4980                           ; BSR set to: 0
  4981   001950  29B5               	incf	___fladd@bexp& (0+255),w,b
  4982   001952  B4D8               	btfsc	status,2,c
  4983   001954  EFAE  F00C         	goto	u3431
  4984   001958  EFB0  F00C         	goto	u3430
  4985   00195C                     u3431:
  4986   00195C  EFB8  F00C         	goto	l3874
  4987   001960                     u3430:
  4988   001960                     
  4989                           ; BSR set to: 0
  4990   001960  51B5               	movf	___fladd@bexp& (0+255),w,b
  4991   001962  A4D8               	btfss	status,2,c
  4992   001964  EFB6  F00C         	goto	u3441
  4993   001968  EFB8  F00C         	goto	u3440
  4994   00196C                     u3441:
  4995   00196C  EFCA  F00C         	goto	l3878
  4996   001970                     u3440:
  4997   001970                     l3874:
  4998                           
  4999                           ; BSR set to: 0
  5000   001970  0E00               	movlw	0
  5001   001972  6FA7               	movwf	___fladd@b& (0+255),b
  5002   001974  0E00               	movlw	0
  5003   001976  6FA8               	movwf	(___fladd@b+1)& (0+255),b
  5004   001978  0E00               	movlw	0
  5005   00197A  6FA9               	movwf	(___fladd@b+2)& (0+255),b
  5006   00197C  0E00               	movlw	0
  5007   00197E  6FAA               	movwf	(___fladd@b+3)& (0+255),b
  5008   001980  51B5               	movf	___fladd@bexp& (0+255),w,b
  5009   001982  A4D8               	btfss	status,2,c
  5010   001984  EFC6  F00C         	goto	u3451
  5011   001988  EFC8  F00C         	goto	u3450
  5012   00198C                     u3451:
  5013   00198C  EFCA  F00C         	goto	l3878
  5014   001990                     u3450:
  5015   001990                     
  5016                           ; BSR set to: 0
  5017   001990  0E00               	movlw	0
  5018   001992  6FB3               	movwf	___fladd@signs& (0+255),b
  5019   001994                     l3878:
  5020                           
  5021                           ; BSR set to: 0
  5022   001994  A1B5               	btfss	___fladd@bexp& (0+255),0,b
  5023   001996  EFCF  F00C         	goto	u3461
  5024   00199A  EFD1  F00C         	goto	u3460
  5025   00199E                     u3461:
  5026   00199E  EFD4  F00C         	goto	l3882
  5027   0019A2                     u3460:
  5028   0019A2                     
  5029                           ; BSR set to: 0
  5030   0019A2  8FA9               	bsf	(___fladd@b+2)& (0+255),7,b
  5031   0019A4  EFD5  F00C         	goto	l3884
  5032   0019A8                     l3882:
  5033                           
  5034                           ; BSR set to: 0
  5035   0019A8  9FA9               	bcf	(___fladd@b+2)& (0+255),7,b
  5036   0019AA                     l3884:
  5037                           
  5038                           ; BSR set to: 0
  5039   0019AA  90D8               	bcf	status,0,c
  5040   0019AC  31B5               	rrcf	___fladd@bexp& (0+255),w,b
  5041   0019AE  6FAA               	movwf	(___fladd@b+3)& (0+255),b
  5042   0019B0                     
  5043                           ; BSR set to: 0
  5044   0019B0  AFB3               	btfss	___fladd@signs& (0+255),7,b
  5045   0019B2  EFDD  F00C         	goto	u3471
  5046   0019B6  EFDF  F00C         	goto	u3470
  5047   0019BA                     u3471:
  5048   0019BA  EFE0  F00C         	goto	l3890
  5049   0019BE                     u3470:
  5050   0019BE                     
  5051                           ; BSR set to: 0
  5052   0019BE  8FAA               	bsf	(___fladd@b+3)& (0+255),7,b
  5053   0019C0                     l3890:
  5054                           
  5055                           ; BSR set to: 0
  5056   0019C0  C0A7  F0A7         	movff	___fladd@b,?___fladd
  5057   0019C4  C0A8  F0A8         	movff	___fladd@b+1,?___fladd+1
  5058   0019C8  C0A9  F0A9         	movff	___fladd@b+2,?___fladd+2
  5059   0019CC  C0AA  F0AA         	movff	___fladd@b+3,?___fladd+3
  5060   0019D0                     l1207:
  5061                           
  5062                           ; BSR set to: 0
  5063   0019D0  0012               	return		;funcret
  5064   0019D2                     __end_of___fladd:
  5065                           	callstack 0
  5066                           
  5067 ;; *************** function _EUSART_ASYNC_TX_Init *****************
  5068 ;; Defined at:
  5069 ;;		line 181 in file "MCAL/USART/usart.c"
  5070 ;; Parameters:    Size  Location     Type
  5071 ;;  _eusart         1    0[BANK0 ] PTR const struct .
  5072 ;;		 -> uart(16), 
  5073 ;; Auto vars:     Size  Location     Type
  5074 ;;		None
  5075 ;; Return value:  Size  Location     Type
  5076 ;;                  1    wreg      void 
  5077 ;; Registers used:
  5078 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5079 ;; Tracked objects:
  5080 ;;		On entry : 0/0
  5081 ;;		On exit  : 0/0
  5082 ;;		Unchanged: 0/0
  5083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5084 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5087 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5088 ;;Total ram usage:        1 bytes
  5089 ;; Hardware stack levels used: 1
  5090 ;; Hardware stack levels required when called: 10
  5091 ;; This function calls:
  5092 ;;		Nothing
  5093 ;; This function is called by:
  5094 ;;		_EUSART_ASYNC_Init
  5095 ;; This function uses a non-reentrant model
  5096 ;;
  5097                           
  5098                           	psect	text17
  5099   002B5C                     __ptext17:
  5100                           	callstack 0
  5101   002B5C                     _EUSART_ASYNC_TX_Init:
  5102                           	callstack 18
  5103   002B5C                     
  5104                           ;MCAL/USART/usart.c: 183:     if(1==_eusart->usart_tx_cfg.usart_tx_enable){
  5105   002B5C  0100               	movlb	0	; () banked
  5106   002B5E  5180               	movf	EUSART_ASYNC_TX_Init@_eusart& (0+255),w,b
  5107   002B60  6ED9               	movwf	fsr2l,c
  5108   002B62  6ADA               	clrf	fsr2h,c
  5109   002B64  0E04               	movlw	4
  5110   002B66  26D9               	addwf	fsr2l,f,c
  5111   002B68  A0DF               	btfss	indf2,0,c
  5112   002B6A  EFB9  F015         	goto	u3981
  5113   002B6E  EFBB  F015         	goto	u3980
  5114   002B72                     u3981:
  5115   002B72  EF00  F016         	goto	l574
  5116   002B76                     u3980:
  5117   002B76                     
  5118                           ; BSR set to: 0
  5119                           ;MCAL/USART/usart.c: 184:         TXSTAbits.TXEN=1;
  5120   002B76  8AAC               	bsf	172,5,c	;volatile
  5121   002B78                     
  5122                           ; BSR set to: 0
  5123                           ;MCAL/USART/usart.c: 185:         if(1==_eusart->usart_tx_cfg.usart_tx_interrupt_enable)
      +                          {
  5124   002B78  5180               	movf	EUSART_ASYNC_TX_Init@_eusart& (0+255),w,b
  5125   002B7A  6ED9               	movwf	fsr2l,c
  5126   002B7C  6ADA               	clrf	fsr2h,c
  5127   002B7E  0E04               	movlw	4
  5128   002B80  26D9               	addwf	fsr2l,f,c
  5129   002B82  A2DF               	btfss	indf2,1,c
  5130   002B84  EFC6  F015         	goto	u3991
  5131   002B88  EFC8  F015         	goto	u3990
  5132   002B8C                     u3991:
  5133   002B8C  EFD7  F015         	goto	l4260
  5134   002B90                     u3990:
  5135   002B90                     
  5136                           ; BSR set to: 0
  5137                           ;MCAL/USART/usart.c: 188:             (PIE1bits.TXIE = 0);
  5138   002B90  989D               	bcf	157,4,c	;volatile
  5139                           
  5140                           ;MCAL/USART/usart.c: 202:                 (INTCONbits.GIE=1);
  5141   002B92  8EF2               	bsf	242,7,c	;volatile
  5142                           
  5143                           ;MCAL/USART/usart.c: 203:                 (INTCONbits.PEIE=1);
  5144   002B94  8CF2               	bsf	242,6,c	;volatile
  5145                           
  5146                           ;MCAL/USART/usart.c: 205:             (PIE1bits.TXIE = 1);
  5147   002B96  889D               	bsf	157,4,c	;volatile
  5148   002B98                     
  5149                           ; BSR set to: 0
  5150                           ;MCAL/USART/usart.c: 206:             EUSART_TxInterruptHandler=_eusart->EUSART_TxDefaul
      +                          tInterruptHandler;
  5151   002B98  5180               	movf	EUSART_ASYNC_TX_Init@_eusart& (0+255),w,b
  5152   002B9A  6ED9               	movwf	fsr2l,c
  5153   002B9C  6ADA               	clrf	fsr2h,c
  5154   002B9E  0E08               	movlw	8
  5155   002BA0  26D9               	addwf	fsr2l,f,c
  5156   002BA2  CFDE F0F3          	movff	postinc2,_EUSART_TxInterruptHandler
  5157   002BA6  CFDD F0F4          	movff	postdec2,_EUSART_TxInterruptHandler+1
  5158                           
  5159                           ;MCAL/USART/usart.c: 208:         }
  5160   002BAA  EFE4  F015         	goto	l4264
  5161   002BAE                     l4260:
  5162                           
  5163                           ; BSR set to: 0
  5164   002BAE  5180               	movf	EUSART_ASYNC_TX_Init@_eusart& (0+255),w,b
  5165   002BB0  6ED9               	movwf	fsr2l,c
  5166   002BB2  6ADA               	clrf	fsr2h,c
  5167   002BB4  0E04               	movlw	4
  5168   002BB6  26D9               	addwf	fsr2l,f,c
  5169   002BB8  B2DF               	btfsc	indf2,1,c
  5170   002BBA  EFE1  F015         	goto	u4001
  5171   002BBE  EFE3  F015         	goto	u4000
  5172   002BC2                     u4001:
  5173   002BC2  EFE4  F015         	goto	l4264
  5174   002BC6                     u4000:
  5175   002BC6                     
  5176                           ; BSR set to: 0
  5177                           ;MCAL/USART/usart.c: 210:             PIE1bits.TXIE=0;
  5178   002BC6  989D               	bcf	157,4,c	;volatile
  5179   002BC8                     l4264:
  5180                           
  5181                           ; BSR set to: 0
  5182                           ;MCAL/USART/usart.c: 212:         if(1==_eusart->usart_tx_cfg.usart_tx_9bit_enable){
  5183   002BC8  5180               	movf	EUSART_ASYNC_TX_Init@_eusart& (0+255),w,b
  5184   002BCA  6ED9               	movwf	fsr2l,c
  5185   002BCC  6ADA               	clrf	fsr2h,c
  5186   002BCE  0E04               	movlw	4
  5187   002BD0  26D9               	addwf	fsr2l,f,c
  5188   002BD2  A4DF               	btfss	indf2,2,c
  5189   002BD4  EFEE  F015         	goto	u4011
  5190   002BD8  EFF0  F015         	goto	u4010
  5191   002BDC                     u4011:
  5192   002BDC  EFF3  F015         	goto	l4268
  5193   002BE0                     u4010:
  5194   002BE0                     
  5195                           ; BSR set to: 0
  5196                           ;MCAL/USART/usart.c: 213:             TXSTAbits.TX9=1;
  5197   002BE0  8CAC               	bsf	172,6,c	;volatile
  5198                           
  5199                           ;MCAL/USART/usart.c: 214:         }
  5200   002BE2  EF00  F016         	goto	l574
  5201   002BE6                     l4268:
  5202                           
  5203                           ; BSR set to: 0
  5204   002BE6  5180               	movf	EUSART_ASYNC_TX_Init@_eusart& (0+255),w,b
  5205   002BE8  6ED9               	movwf	fsr2l,c
  5206   002BEA  6ADA               	clrf	fsr2h,c
  5207   002BEC  0E04               	movlw	4
  5208   002BEE  26D9               	addwf	fsr2l,f,c
  5209   002BF0  B4DF               	btfsc	indf2,2,c
  5210   002BF2  EFFD  F015         	goto	u4021
  5211   002BF6  EFFF  F015         	goto	u4020
  5212   002BFA                     u4021:
  5213   002BFA  EF00  F016         	goto	l574
  5214   002BFE                     u4020:
  5215   002BFE                     
  5216                           ; BSR set to: 0
  5217                           ;MCAL/USART/usart.c: 216:             TXSTAbits.TX9=0;
  5218   002BFE  9CAC               	bcf	172,6,c	;volatile
  5219   002C00                     l574:
  5220                           
  5221                           ; BSR set to: 0
  5222   002C00  0012               	return		;funcret
  5223   002C02                     __end_of_EUSART_ASYNC_TX_Init:
  5224                           	callstack 0
  5225                           
  5226 ;; *************** function _EUSART_ASYNC_RX_Init *****************
  5227 ;; Defined at:
  5228 ;;		line 221 in file "MCAL/USART/usart.c"
  5229 ;; Parameters:    Size  Location     Type
  5230 ;;  _eusart         1    0[BANK0 ] PTR const struct .
  5231 ;;		 -> uart(16), 
  5232 ;; Auto vars:     Size  Location     Type
  5233 ;;		None
  5234 ;; Return value:  Size  Location     Type
  5235 ;;                  1    wreg      void 
  5236 ;; Registers used:
  5237 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5238 ;; Tracked objects:
  5239 ;;		On entry : 0/0
  5240 ;;		On exit  : 0/0
  5241 ;;		Unchanged: 0/0
  5242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5243 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5246 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5247 ;;Total ram usage:        1 bytes
  5248 ;; Hardware stack levels used: 1
  5249 ;; Hardware stack levels required when called: 10
  5250 ;; This function calls:
  5251 ;;		Nothing
  5252 ;; This function is called by:
  5253 ;;		_EUSART_ASYNC_Init
  5254 ;; This function uses a non-reentrant model
  5255 ;;
  5256                           
  5257                           	psect	text18
  5258   0027AE                     __ptext18:
  5259                           	callstack 0
  5260   0027AE                     _EUSART_ASYNC_RX_Init:
  5261                           	callstack 18
  5262   0027AE                     
  5263                           ;MCAL/USART/usart.c: 223:     if(1==_eusart->usart_rx_cfg.usart_rx_enable){
  5264   0027AE  0100               	movlb	0	; () banked
  5265   0027B0  5180               	movf	EUSART_ASYNC_RX_Init@_eusart& (0+255),w,b
  5266   0027B2  6ED9               	movwf	fsr2l,c
  5267   0027B4  6ADA               	clrf	fsr2h,c
  5268   0027B6  0E06               	movlw	6
  5269   0027B8  26D9               	addwf	fsr2l,f,c
  5270   0027BA  A0DF               	btfss	indf2,0,c
  5271   0027BC  EFE2  F013         	goto	u4031
  5272   0027C0  EFE4  F013         	goto	u4030
  5273   0027C4                     u4031:
  5274   0027C4  EF3B  F014         	goto	l584
  5275   0027C8                     u4030:
  5276   0027C8                     
  5277                           ; BSR set to: 0
  5278                           ;MCAL/USART/usart.c: 224:         RCSTAbits.CREN=1;
  5279   0027C8  88AB               	bsf	171,4,c	;volatile
  5280   0027CA                     
  5281                           ; BSR set to: 0
  5282                           ;MCAL/USART/usart.c: 225:         if(1==_eusart->usart_rx_cfg.usart_rx_interrupt_enable)
      +                          {
  5283   0027CA  5180               	movf	EUSART_ASYNC_RX_Init@_eusart& (0+255),w,b
  5284   0027CC  6ED9               	movwf	fsr2l,c
  5285   0027CE  6ADA               	clrf	fsr2h,c
  5286   0027D0  0E06               	movlw	6
  5287   0027D2  26D9               	addwf	fsr2l,f,c
  5288   0027D4  A2DF               	btfss	indf2,1,c
  5289   0027D6  EFEF  F013         	goto	u4041
  5290   0027DA  EFF1  F013         	goto	u4040
  5291   0027DE                     u4041:
  5292   0027DE  EF12  F014         	goto	l4282
  5293   0027E2                     u4040:
  5294   0027E2                     
  5295                           ; BSR set to: 0
  5296                           ;MCAL/USART/usart.c: 228:             (PIE1bits.RCIE = 0);
  5297   0027E2  9A9D               	bcf	157,5,c	;volatile
  5298                           
  5299                           ;MCAL/USART/usart.c: 242:                 (INTCONbits.GIE=1);
  5300   0027E4  8EF2               	bsf	242,7,c	;volatile
  5301                           
  5302                           ;MCAL/USART/usart.c: 243:                 (INTCONbits.PEIE=1);
  5303   0027E6  8CF2               	bsf	242,6,c	;volatile
  5304                           
  5305                           ;MCAL/USART/usart.c: 245:             (PIE1bits.RCIE = 1);
  5306   0027E8  8A9D               	bsf	157,5,c	;volatile
  5307   0027EA                     
  5308                           ; BSR set to: 0
  5309                           ;MCAL/USART/usart.c: 246:             EUSART_RxInterruptHandler=_eusart->EUSART_RxDefaul
      +                          tInterruptHandler;
  5310   0027EA  5180               	movf	EUSART_ASYNC_RX_Init@_eusart& (0+255),w,b
  5311   0027EC  6ED9               	movwf	fsr2l,c
  5312   0027EE  6ADA               	clrf	fsr2h,c
  5313   0027F0  0E0A               	movlw	10
  5314   0027F2  26D9               	addwf	fsr2l,f,c
  5315   0027F4  CFDE F056          	movff	postinc2,_EUSART_RxInterruptHandler
  5316   0027F8  CFDD F057          	movff	postdec2,_EUSART_RxInterruptHandler+1
  5317                           
  5318                           ;MCAL/USART/usart.c: 247:             EUSART_FramingErrorHandler=_eusart->EUSART_Framing
      +                          ErrorHandler;
  5319   0027FC  5180               	movf	EUSART_ASYNC_RX_Init@_eusart& (0+255),w,b
  5320   0027FE  6ED9               	movwf	fsr2l,c
  5321   002800  6ADA               	clrf	fsr2h,c
  5322   002802  0E0C               	movlw	12
  5323   002804  26D9               	addwf	fsr2l,f,c
  5324   002806  CFDE F054          	movff	postinc2,_EUSART_FramingErrorHandler
  5325   00280A  CFDD F055          	movff	postdec2,_EUSART_FramingErrorHandler+1
  5326                           
  5327                           ;MCAL/USART/usart.c: 248:             EUSART_OverrunErrorHandler=_eusart->EUSART_Overrun
      +                          ErrorHandler;
  5328   00280E  5180               	movf	EUSART_ASYNC_RX_Init@_eusart& (0+255),w,b
  5329   002810  6ED9               	movwf	fsr2l,c
  5330   002812  6ADA               	clrf	fsr2h,c
  5331   002814  0E0E               	movlw	14
  5332   002816  26D9               	addwf	fsr2l,f,c
  5333   002818  CFDE F052          	movff	postinc2,_EUSART_OverrunErrorHandler
  5334   00281C  CFDD F053          	movff	postdec2,_EUSART_OverrunErrorHandler+1
  5335                           
  5336                           ;MCAL/USART/usart.c: 250:         }
  5337   002820  EF1F  F014         	goto	l4286
  5338   002824                     l4282:
  5339                           
  5340                           ; BSR set to: 0
  5341   002824  5180               	movf	EUSART_ASYNC_RX_Init@_eusart& (0+255),w,b
  5342   002826  6ED9               	movwf	fsr2l,c
  5343   002828  6ADA               	clrf	fsr2h,c
  5344   00282A  0E06               	movlw	6
  5345   00282C  26D9               	addwf	fsr2l,f,c
  5346   00282E  B2DF               	btfsc	indf2,1,c
  5347   002830  EF1C  F014         	goto	u4051
  5348   002834  EF1E  F014         	goto	u4050
  5349   002838                     u4051:
  5350   002838  EF1F  F014         	goto	l4286
  5351   00283C                     u4050:
  5352   00283C                     
  5353                           ; BSR set to: 0
  5354                           ;MCAL/USART/usart.c: 252:             PIE1bits.RCIE=0;
  5355   00283C  9A9D               	bcf	157,5,c	;volatile
  5356   00283E                     l4286:
  5357                           
  5358                           ; BSR set to: 0
  5359                           ;MCAL/USART/usart.c: 254:         if(1==_eusart->usart_rx_cfg.usart_rx_9bit_enable){
  5360   00283E  5180               	movf	EUSART_ASYNC_RX_Init@_eusart& (0+255),w,b
  5361   002840  6ED9               	movwf	fsr2l,c
  5362   002842  6ADA               	clrf	fsr2h,c
  5363   002844  0E06               	movlw	6
  5364   002846  26D9               	addwf	fsr2l,f,c
  5365   002848  A4DF               	btfss	indf2,2,c
  5366   00284A  EF29  F014         	goto	u4061
  5367   00284E  EF2B  F014         	goto	u4060
  5368   002852                     u4061:
  5369   002852  EF2E  F014         	goto	l4290
  5370   002856                     u4060:
  5371   002856                     
  5372                           ; BSR set to: 0
  5373                           ;MCAL/USART/usart.c: 255:             TXSTAbits.TX9=1;
  5374   002856  8CAC               	bsf	172,6,c	;volatile
  5375                           
  5376                           ;MCAL/USART/usart.c: 256:         }
  5377   002858  EF3B  F014         	goto	l584
  5378   00285C                     l4290:
  5379                           
  5380                           ; BSR set to: 0
  5381   00285C  5180               	movf	EUSART_ASYNC_RX_Init@_eusart& (0+255),w,b
  5382   00285E  6ED9               	movwf	fsr2l,c
  5383   002860  6ADA               	clrf	fsr2h,c
  5384   002862  0E06               	movlw	6
  5385   002864  26D9               	addwf	fsr2l,f,c
  5386   002866  B4DF               	btfsc	indf2,2,c
  5387   002868  EF38  F014         	goto	u4071
  5388   00286C  EF3A  F014         	goto	u4070
  5389   002870                     u4071:
  5390   002870  EF3B  F014         	goto	l584
  5391   002874                     u4070:
  5392   002874                     
  5393                           ; BSR set to: 0
  5394                           ;MCAL/USART/usart.c: 258:             TXSTAbits.TX9=0;
  5395   002874  9CAC               	bcf	172,6,c	;volatile
  5396   002876                     l584:
  5397                           
  5398                           ; BSR set to: 0
  5399   002876  0012               	return		;funcret
  5400   002878                     __end_of_EUSART_ASYNC_RX_Init:
  5401                           	callstack 0
  5402                           
  5403 ;; *************** function _InterruptManager *****************
  5404 ;; Defined at:
  5405 ;;		line 41 in file "MCAL/INTERRUPT/mcall_interrupt_manager.c"
  5406 ;; Parameters:    Size  Location     Type
  5407 ;;		None
  5408 ;; Auto vars:     Size  Location     Type
  5409 ;;		None
  5410 ;; Return value:  Size  Location     Type
  5411 ;;                  1    wreg      void 
  5412 ;; Registers used:
  5413 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  5414 ;; Tracked objects:
  5415 ;;		On entry : 0/0
  5416 ;;		On exit  : 0/0
  5417 ;;		Unchanged: 0/0
  5418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5421 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5422 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5423 ;;Total ram usage:       12 bytes
  5424 ;; Hardware stack levels used: 1
  5425 ;; Hardware stack levels required when called: 9
  5426 ;; This function calls:
  5427 ;;		_ADC_ISR
  5428 ;;		_EUSART_RX_ISR
  5429 ;;		_EUSART_TX_ISR
  5430 ;; This function is called by:
  5431 ;;		Interrupt level 2
  5432 ;; This function uses a non-reentrant model
  5433 ;;
  5434                           
  5435                           	psect	intcode
  5436   000008                     __pintcode:
  5437                           	callstack 0
  5438   000008                     _InterruptManager:
  5439                           	callstack 16
  5440                           
  5441                           ; BSR set to: 0
  5442                           ;incstack = 0
  5443   000008  827A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5444   00000A  ED3C  F014         	call	int_func,f	;refresh shadow registers
  5445                           
  5446                           	psect	intcode_body
  5447   002878                     __pintcode_body:
  5448                           	callstack 16
  5449   002878                     int_func:
  5450                           	callstack 16
  5451   002878  0006               	pop		; remove dummy address from shadow register refresh
  5452   00287A  CFFA F03C          	movff	pclath,??_InterruptManager
  5453   00287E  CFFB F03D          	movff	pclatu,??_InterruptManager+1
  5454   002882  CFE1 F03E          	movff	fsr1l,??_InterruptManager+2
  5455   002886  CFE2 F03F          	movff	fsr1h,??_InterruptManager+3
  5456   00288A  CFD9 F040          	movff	fsr2l,??_InterruptManager+4
  5457   00288E  CFDA F041          	movff	fsr2h,??_InterruptManager+5
  5458   002892  CFF3 F042          	movff	prodl,??_InterruptManager+6
  5459   002896  CFF4 F043          	movff	prodh,??_InterruptManager+7
  5460   00289A  CFF6 F044          	movff	tblptrl,??_InterruptManager+8
  5461   00289E  CFF7 F045          	movff	tblptrh,??_InterruptManager+9
  5462   0028A2  CFF8 F046          	movff	tblptru,??_InterruptManager+10
  5463   0028A6  CFF5 F047          	movff	tablat,??_InterruptManager+11
  5464   0028AA                     
  5465                           ;MCAL/INTERRUPT/mcall_interrupt_manager.c: 44:     if((1 == PIE1bits.ADIE) && (1 == PIR1
      +                          bits.ADIF)){
  5466   0028AA  AC9D               	btfss	157,6,c	;volatile
  5467   0028AC  EF5A  F014         	goto	i2u526_41
  5468   0028B0  EF5C  F014         	goto	i2u526_40
  5469   0028B4                     i2u526_41:
  5470   0028B4  EF65  F014         	goto	i2l5400
  5471   0028B8                     i2u526_40:
  5472   0028B8  AC9E               	btfss	158,6,c	;volatile
  5473   0028BA  EF61  F014         	goto	i2u527_41
  5474   0028BE  EF63  F014         	goto	i2u527_40
  5475   0028C2                     i2u527_41:
  5476   0028C2  EF65  F014         	goto	i2l5400
  5477   0028C6                     i2u527_40:
  5478   0028C6                     
  5479                           ;MCAL/INTERRUPT/mcall_interrupt_manager.c: 45:         ADC_ISR();
  5480   0028C6  EC90  F01A         	call	_ADC_ISR	;wreg free
  5481   0028CA                     i2l5400:
  5482                           
  5483                           ;MCAL/INTERRUPT/mcall_interrupt_manager.c: 48:     if((1 == PIE1bits.TXIE) && (1 == PIR1
      +                          bits.TXIF)){
  5484   0028CA  A89D               	btfss	157,4,c	;volatile
  5485   0028CC  EF6A  F014         	goto	i2u528_41
  5486   0028D0  EF6C  F014         	goto	i2u528_40
  5487   0028D4                     i2u528_41:
  5488   0028D4  EF75  F014         	goto	i2l5406
  5489   0028D8                     i2u528_40:
  5490   0028D8  A89E               	btfss	158,4,c	;volatile
  5491   0028DA  EF71  F014         	goto	i2u529_41
  5492   0028DE  EF73  F014         	goto	i2u529_40
  5493   0028E2                     i2u529_41:
  5494   0028E2  EF75  F014         	goto	i2l5406
  5495   0028E6                     i2u529_40:
  5496   0028E6                     
  5497                           ;MCAL/INTERRUPT/mcall_interrupt_manager.c: 49:         EUSART_TX_ISR();
  5498   0028E6  EC8E  F01A         	call	_EUSART_TX_ISR	;wreg free
  5499   0028EA                     i2l5406:
  5500                           
  5501                           ;MCAL/INTERRUPT/mcall_interrupt_manager.c: 53:     if((1 == PIE1bits.RCIE) && (1 == PIR1
      +                          bits.RCIF)){
  5502   0028EA  AA9D               	btfss	157,5,c	;volatile
  5503   0028EC  EF7A  F014         	goto	i2u530_41
  5504   0028F0  EF7C  F014         	goto	i2u530_40
  5505   0028F4                     i2u530_41:
  5506   0028F4  EF85  F014         	goto	i2l467
  5507   0028F8                     i2u530_40:
  5508   0028F8  AA9E               	btfss	158,5,c	;volatile
  5509   0028FA  EF81  F014         	goto	i2u531_41
  5510   0028FE  EF83  F014         	goto	i2u531_40
  5511   002902                     i2u531_41:
  5512   002902  EF85  F014         	goto	i2l467
  5513   002906                     i2u531_40:
  5514   002906                     
  5515                           ;MCAL/INTERRUPT/mcall_interrupt_manager.c: 54:         EUSART_RX_ISR();
  5516   002906  ECFC  F019         	call	_EUSART_RX_ISR	;wreg free
  5517   00290A                     i2l467:
  5518   00290A  C047  FFF5         	movff	??_InterruptManager+11,tablat
  5519   00290E  C046  FFF8         	movff	??_InterruptManager+10,tblptru
  5520   002912  C045  FFF7         	movff	??_InterruptManager+9,tblptrh
  5521   002916  C044  FFF6         	movff	??_InterruptManager+8,tblptrl
  5522   00291A  C043  FFF4         	movff	??_InterruptManager+7,prodh
  5523   00291E  C042  FFF3         	movff	??_InterruptManager+6,prodl
  5524   002922  C041  FFDA         	movff	??_InterruptManager+5,fsr2h
  5525   002926  C040  FFD9         	movff	??_InterruptManager+4,fsr2l
  5526   00292A  C03F  FFE2         	movff	??_InterruptManager+3,fsr1h
  5527   00292E  C03E  FFE1         	movff	??_InterruptManager+2,fsr1l
  5528   002932  C03D  FFFB         	movff	??_InterruptManager+1,pclatu
  5529   002936  C03C  FFFA         	movff	??_InterruptManager,pclath
  5530   00293A  927A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5531   00293C  0011               	retfie		f
  5532   00293E                     __end_of_InterruptManager:
  5533                           	callstack 0
  5534                           
  5535 ;; *************** function _EUSART_TX_ISR *****************
  5536 ;; Defined at:
  5537 ;;		line 266 in file "MCAL/USART/usart.c"
  5538 ;; Parameters:    Size  Location     Type
  5539 ;;		None
  5540 ;; Auto vars:     Size  Location     Type
  5541 ;;		None
  5542 ;; Return value:  Size  Location     Type
  5543 ;;                  1    wreg      void 
  5544 ;; Registers used:
  5545 ;;		None
  5546 ;; Tracked objects:
  5547 ;;		On entry : 0/0
  5548 ;;		On exit  : 0/0
  5549 ;;		Unchanged: 0/0
  5550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5555 ;;Total ram usage:        0 bytes
  5556 ;; Hardware stack levels used: 1
  5557 ;; This function calls:
  5558 ;;		Nothing
  5559 ;; This function is called by:
  5560 ;;		_InterruptManager
  5561 ;; This function uses a non-reentrant model
  5562 ;;
  5563                           
  5564                           	psect	text20
  5565   00351C                     __ptext20:
  5566                           	callstack 0
  5567   00351C                     _EUSART_TX_ISR:
  5568                           	callstack 24
  5569   00351C                     
  5570                           ;MCAL/USART/usart.c: 268:     (PIE1bits.TXIE = 0);
  5571   00351C  989D               	bcf	157,4,c	;volatile
  5572   00351E  0012               	return		;funcret
  5573   003520                     __end_of_EUSART_TX_ISR:
  5574                           	callstack 0
  5575                           
  5576 ;; *************** function _EUSART_RX_ISR *****************
  5577 ;; Defined at:
  5578 ;;		line 276 in file "MCAL/USART/usart.c"
  5579 ;; Parameters:    Size  Location     Type
  5580 ;;		None
  5581 ;; Auto vars:     Size  Location     Type
  5582 ;;		None
  5583 ;; Return value:  Size  Location     Type
  5584 ;;                  1    wreg      void 
  5585 ;; Registers used:
  5586 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  5587 ;; Tracked objects:
  5588 ;;		On entry : 0/0
  5589 ;;		On exit  : 0/0
  5590 ;;		Unchanged: 0/0
  5591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5596 ;;Total ram usage:        0 bytes
  5597 ;; Hardware stack levels used: 1
  5598 ;; Hardware stack levels required when called: 8
  5599 ;; This function calls:
  5600 ;;		NULL
  5601 ;;		_MY_EUSART_RX_ISR
  5602 ;; This function is called by:
  5603 ;;		_InterruptManager
  5604 ;; This function uses a non-reentrant model
  5605 ;;
  5606                           
  5607                           	psect	text21
  5608   0033F8                     __ptext21:
  5609                           	callstack 0
  5610   0033F8                     _EUSART_RX_ISR:
  5611                           	callstack 16
  5612   0033F8                     
  5613                           ;MCAL/USART/usart.c: 278:     if(EUSART_RxInterruptHandler){EUSART_RxInterruptHandler();
      +                          }
  5614   0033F8  5056               	movf	_EUSART_RxInterruptHandler^0,w,c
  5615   0033FA  1057               	iorwf	(_EUSART_RxInterruptHandler+1)^0,w,c
  5616   0033FC  B4D8               	btfsc	status,2,c
  5617   0033FE  EF03  F01A         	goto	i2u514_41
  5618   003402  EF05  F01A         	goto	i2u514_40
  5619   003406                     i2u514_41:
  5620   003406  EF13  F01A         	goto	i2l5292
  5621   00340A                     i2u514_40:
  5622   00340A  D802               	call	i2u515_48
  5623   00340C  EF11  F01A         	goto	i2u515_49
  5624   003410                     i2u515_48:
  5625   003410  0005               	push	
  5626   003412  6EFA               	movwf	pclath,c
  5627   003414  5056               	movf	_EUSART_RxInterruptHandler^0,w,c
  5628   003416  6EFD               	movwf	tosl,c
  5629   003418  5057               	movf	(_EUSART_RxInterruptHandler+1)^0,w,c
  5630   00341A  6EFE               	movwf	tosh,c
  5631   00341C  6AFF               	clrf	tosu,c
  5632   00341E  50FA               	movf	pclath,w,c
  5633   003420  0012               	return		;indir
  5634   003422                     i2u515_49:
  5635   003422  EF13  F01A         	goto	i2l594
  5636   003426                     i2l5292:
  5637   003426                     i2l594:
  5638   003426  0012               	return		;funcret
  5639   003428                     __end_of_EUSART_RX_ISR:
  5640                           	callstack 0
  5641                           
  5642 ;; *************** function _MY_EUSART_RX_ISR *****************
  5643 ;; Defined at:
  5644 ;;		line 15 in file "app.c"
  5645 ;; Parameters:    Size  Location     Type
  5646 ;;		None
  5647 ;; Auto vars:     Size  Location     Type
  5648 ;;		None
  5649 ;; Return value:  Size  Location     Type
  5650 ;;                  1    wreg      void 
  5651 ;; Registers used:
  5652 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5653 ;; Tracked objects:
  5654 ;;		On entry : 0/0
  5655 ;;		On exit  : 0/0
  5656 ;;		Unchanged: 0/0
  5657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5662 ;;Total ram usage:        0 bytes
  5663 ;; Hardware stack levels used: 1
  5664 ;; Hardware stack levels required when called: 7
  5665 ;; This function calls:
  5666 ;;		_EUSART_ASYNC_ReadByteNonBlocking
  5667 ;;		_dc_motor_move_right
  5668 ;;		_dc_motor_stop
  5669 ;;		_lcd_send_number_pos
  5670 ;;		_led_off
  5671 ;;		_led_on
  5672 ;; This function is called by:
  5673 ;;		_EUSART_RX_ISR
  5674 ;; This function uses a non-reentrant model
  5675 ;;
  5676                           
  5677                           	psect	text22
  5678   0026CE                     __ptext22:
  5679                           	callstack 0
  5680   0026CE                     _MY_EUSART_RX_ISR:
  5681                           	callstack 16
  5682   0026CE                     
  5683                           ;app.c: 16:     EUSART_ASYNC_ReadByteNonBlocking(&uart_value);
  5684   0026CE  0E61               	movlw	low _uart_value
  5685   0026D0  6E01               	movwf	EUSART_ASYNC_ReadByteNonBlocking@_data^0,c
  5686   0026D2  EC6E  F01A         	call	_EUSART_ASYNC_ReadByteNonBlocking	;wreg free
  5687   0026D6                     
  5688                           ;app.c: 17:     lcd_send_number_pos(&lcd,1,10,uart_value);
  5689   0026D6  0E68               	movlw	low _lcd
  5690   0026D8  6E35               	movwf	lcd_send_number_pos@lcd^0,c
  5691   0026DA  0E01               	movlw	1
  5692   0026DC  6E36               	movwf	lcd_send_number_pos@row^0,c
  5693   0026DE  0E0A               	movlw	10
  5694   0026E0  6E37               	movwf	lcd_send_number_pos@column^0,c
  5695   0026E2  C061  F038         	movff	_uart_value,lcd_send_number_pos@num	;volatile
  5696   0026E6  6A39               	clrf	(lcd_send_number_pos@num+1)^0,c
  5697   0026E8  EC87  F019         	call	_lcd_send_number_pos	;wreg free
  5698   0026EC                     
  5699                           ;app.c: 18:     if(uart_value>=30){
  5700   0026EC  0E1D               	movlw	29
  5701   0026EE  6461               	cpfsgt	_uart_value^0,c	;volatile
  5702   0026F0  EF7C  F013         	goto	i2u507_41
  5703   0026F4  EF7E  F013         	goto	i2u507_40
  5704   0026F8                     i2u507_41:
  5705   0026F8  EF94  F013         	goto	i2l5246
  5706   0026FC                     i2u507_40:
  5707   0026FC                     
  5708                           ;app.c: 19:         ret=dc_motor_move_right(&air_conditioners);
  5709   0026FC  0E71               	movlw	low _air_conditioners
  5710   0026FE  6E09               	movwf	dc_motor_move_right@dc_motor^0,c
  5711   002700  ECAA  F018         	call	_dc_motor_move_right	;wreg free
  5712   002704  6E5B               	movwf	_ret^0,c
  5713   002706                     
  5714                           ;app.c: 20:         ret=led_on(&led_blue);
  5715   002706  0E78               	movlw	low _led_blue
  5716   002708  6E09               	movwf	led_on@led^0,c
  5717   00270A  EC2E  F018         	call	_led_on	;wreg free
  5718   00270E  6E5B               	movwf	_ret^0,c
  5719   002710                     
  5720                           ;app.c: 21:         ret=led_off(&led_white);
  5721   002710  0E76               	movlw	low _led_white
  5722   002712  6E09               	movwf	led_off@led^0,c
  5723   002714  EC58  F018         	call	_led_off	;wreg free
  5724   002718  6E5B               	movwf	_ret^0,c
  5725   00271A                     i2l5244:
  5726                           
  5727                           ;app.c: 22:         ret=led_off(&led_red);
  5728   00271A  0E74               	movlw	low _led_red
  5729   00271C  6E09               	movwf	led_off@led^0,c
  5730   00271E  EC58  F018         	call	_led_off	;wreg free
  5731   002722  6E5B               	movwf	_ret^0,c
  5732                           
  5733                           ;app.c: 23:     }
  5734   002724  EFD6  F013         	goto	i2l632
  5735   002728                     i2l5246:
  5736   002728  0E1E               	movlw	30
  5737   00272A  6061               	cpfslt	_uart_value^0,c	;volatile
  5738   00272C  EF9A  F013         	goto	i2u508_41
  5739   002730  EF9C  F013         	goto	i2u508_40
  5740   002734                     i2u508_41:
  5741   002734  EFBA  F013         	goto	i2l5258
  5742   002738                     i2u508_40:
  5743   002738  0E14               	movlw	20
  5744   00273A  6461               	cpfsgt	_uart_value^0,c	;volatile
  5745   00273C  EFA2  F013         	goto	i2u509_41
  5746   002740  EFA4  F013         	goto	i2u509_40
  5747   002744                     i2u509_41:
  5748   002744  EFBA  F013         	goto	i2l5258
  5749   002748                     i2u509_40:
  5750   002748                     
  5751                           ;app.c: 25:         ret=dc_motor_stop(&air_conditioners);
  5752   002748  0E71               	movlw	low _air_conditioners
  5753   00274A  6E09               	movwf	dc_motor_stop@dc_motor^0,c
  5754   00274C  ECD1  F018         	call	_dc_motor_stop	;wreg free
  5755   002750  6E5B               	movwf	_ret^0,c
  5756                           
  5757                           ;app.c: 26:         ret=dc_motor_stop(&heater);
  5758   002752  0E6E               	movlw	low _heater
  5759   002754  6E09               	movwf	dc_motor_stop@dc_motor^0,c
  5760   002756  ECD1  F018         	call	_dc_motor_stop	;wreg free
  5761   00275A  6E5B               	movwf	_ret^0,c
  5762   00275C                     
  5763                           ;app.c: 27:         ret=led_off(&led_blue);
  5764   00275C  0E78               	movlw	low _led_blue
  5765   00275E  6E09               	movwf	led_off@led^0,c
  5766   002760  EC58  F018         	call	_led_off	;wreg free
  5767   002764  6E5B               	movwf	_ret^0,c
  5768   002766                     
  5769                           ;app.c: 28:         ret=led_on(&led_white);
  5770   002766  0E76               	movlw	low _led_white
  5771   002768  6E09               	movwf	led_on@led^0,c
  5772   00276A  EC2E  F018         	call	_led_on	;wreg free
  5773   00276E  6E5B               	movwf	_ret^0,c
  5774   002770  EF8D  F013         	goto	i2l5244
  5775   002774                     i2l5258:
  5776   002774  0E15               	movlw	21
  5777   002776  6061               	cpfslt	_uart_value^0,c	;volatile
  5778   002778  EFC0  F013         	goto	i2u510_41
  5779   00277C  EFC2  F013         	goto	i2u510_40
  5780   002780                     i2u510_41:
  5781   002780  EFD6  F013         	goto	i2l632
  5782   002784                     i2u510_40:
  5783   002784                     
  5784                           ;app.c: 32:         ret=dc_motor_move_right(&heater);
  5785   002784  0E6E               	movlw	low _heater
  5786   002786  6E09               	movwf	dc_motor_move_right@dc_motor^0,c
  5787   002788  ECAA  F018         	call	_dc_motor_move_right	;wreg free
  5788   00278C  6E5B               	movwf	_ret^0,c
  5789   00278E                     
  5790                           ;app.c: 33:         ret=led_off(&led_blue);
  5791   00278E  0E78               	movlw	low _led_blue
  5792   002790  6E09               	movwf	led_off@led^0,c
  5793   002792  EC58  F018         	call	_led_off	;wreg free
  5794   002796  6E5B               	movwf	_ret^0,c
  5795   002798                     
  5796                           ;app.c: 34:         ret=led_off(&led_white);
  5797   002798  0E76               	movlw	low _led_white
  5798   00279A  6E09               	movwf	led_off@led^0,c
  5799   00279C  EC58  F018         	call	_led_off	;wreg free
  5800   0027A0  6E5B               	movwf	_ret^0,c
  5801   0027A2                     
  5802                           ;app.c: 35:         ret=led_on(&led_red);
  5803   0027A2  0E74               	movlw	low _led_red
  5804   0027A4  6E09               	movwf	led_on@led^0,c
  5805   0027A6  EC2E  F018         	call	_led_on	;wreg free
  5806   0027AA  6E5B               	movwf	_ret^0,c
  5807   0027AC                     i2l632:
  5808   0027AC  0012               	return		;funcret
  5809   0027AE                     __end_of_MY_EUSART_RX_ISR:
  5810                           	callstack 0
  5811                           
  5812 ;; *************** function _led_on *****************
  5813 ;; Defined at:
  5814 ;;		line 41 in file "ECUAL/LED/led.c"
  5815 ;; Parameters:    Size  Location     Type
  5816 ;;  led             1    8[COMRAM] PTR struct .
  5817 ;;		 -> led_red(2), led_white(2), led_blue(2), 
  5818 ;; Auto vars:     Size  Location     Type
  5819 ;;  ret             1   10[COMRAM] unsigned char 
  5820 ;;  gpio_ret        1    9[COMRAM] unsigned char 
  5821 ;; Return value:  Size  Location     Type
  5822 ;;                  1    wreg      unsigned char 
  5823 ;; Registers used:
  5824 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5825 ;; Tracked objects:
  5826 ;;		On entry : 0/0
  5827 ;;		On exit  : 0/0
  5828 ;;		Unchanged: 0/0
  5829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5830 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5831 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5833 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5834 ;;Total ram usage:        3 bytes
  5835 ;; Hardware stack levels used: 1
  5836 ;; Hardware stack levels required when called: 1
  5837 ;; This function calls:
  5838 ;;		i2_gpio_pin_logic_write
  5839 ;; This function is called by:
  5840 ;;		_MY_EUSART_RX_ISR
  5841 ;; This function uses a non-reentrant model
  5842 ;;
  5843                           
  5844                           	psect	text23
  5845   00305C                     __ptext23:
  5846                           	callstack 0
  5847   00305C                     _led_on:
  5848                           	callstack 21
  5849   00305C                     
  5850                           ;ECUAL/LED/led.c: 44:     Std_ReturnType gpio_ret=(Std_ReturnType)0x00;
  5851   00305C  0E00               	movlw	0
  5852   00305E  6E0A               	movwf	led_on@gpio_ret^0,c
  5853                           
  5854                           ;ECUAL/LED/led.c: 45:     if(((void*)0)==led){
  5855   003060  5009               	movf	led_on@led^0,w,c
  5856   003062  A4D8               	btfss	status,2,c
  5857   003064  EF36  F018         	goto	i2u498_41
  5858   003068  EF38  F018         	goto	i2u498_40
  5859   00306C                     i2u498_41:
  5860   00306C  EF3C  F018         	goto	i2l5140
  5861   003070                     i2u498_40:
  5862   003070                     
  5863                           ;ECUAL/LED/led.c: 46:         ret=(Std_ReturnType)0x00;
  5864   003070  0E00               	movlw	0
  5865   003072  6E0B               	movwf	led_on@ret^0,c
  5866                           
  5867                           ;ECUAL/LED/led.c: 47:     }
  5868   003074  EF56  F018         	goto	i2l5146
  5869   003078                     i2l5140:
  5870   003078  C009  F001         	movff	led_on@led,i2gpio_pin_logic_write@pin
  5871   00307C  0E01               	movlw	1
  5872   00307E  6E02               	movwf	i2gpio_pin_logic_write@pin_logic^0,c
  5873   003080  ECB5  F011         	call	i2_gpio_pin_logic_write	;wreg free
  5874   003084                     
  5875                           ;ECUAL/LED/led.c: 50:         led->led_state=led->led_pin.logic;
  5876   003084  5009               	movf	led_on@led^0,w,c
  5877   003086  6ED9               	movwf	fsr2l,c
  5878   003088  6ADA               	clrf	fsr2h,c
  5879   00308A  0E01               	movlw	1
  5880   00308C  26D9               	addwf	fsr2l,f,c
  5881   00308E  5009               	movf	led_on@led^0,w,c
  5882   003090  6EE1               	movwf	fsr1l,c
  5883   003092  6AE2               	clrf	fsr1h,c
  5884   003094  BEE7               	btfsc	indf1,7,c
  5885   003096  EF4F  F018         	goto	i2u499_41
  5886   00309A  EF52  F018         	goto	i2u499_40
  5887   00309E                     i2u499_41:
  5888   00309E  0E01               	movlw	1
  5889   0030A0  EF53  F018         	goto	i2u499_46
  5890   0030A4                     i2u499_40:
  5891   0030A4  0E00               	movlw	0
  5892   0030A6                     i2u499_46:
  5893   0030A6  6EDF               	movwf	indf2,c
  5894   0030A8                     
  5895                           ;ECUAL/LED/led.c: 51:         ret=(Std_ReturnType)0x01;
  5896   0030A8  0E01               	movlw	1
  5897   0030AA  6E0B               	movwf	led_on@ret^0,c
  5898   0030AC                     i2l5146:
  5899                           
  5900                           ;ECUAL/LED/led.c: 54:     return ret;
  5901   0030AC  500B               	movf	led_on@ret^0,w,c
  5902   0030AE  0012               	return		;funcret
  5903   0030B0                     __end_of_led_on:
  5904                           	callstack 0
  5905                           
  5906 ;; *************** function _led_off *****************
  5907 ;; Defined at:
  5908 ;;		line 65 in file "ECUAL/LED/led.c"
  5909 ;; Parameters:    Size  Location     Type
  5910 ;;  led             1    8[COMRAM] PTR struct .
  5911 ;;		 -> led_red(2), led_white(2), led_blue(2), 
  5912 ;; Auto vars:     Size  Location     Type
  5913 ;;  ret             1   10[COMRAM] unsigned char 
  5914 ;;  gpio_ret        1    9[COMRAM] unsigned char 
  5915 ;; Return value:  Size  Location     Type
  5916 ;;                  1    wreg      unsigned char 
  5917 ;; Registers used:
  5918 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5919 ;; Tracked objects:
  5920 ;;		On entry : 0/0
  5921 ;;		On exit  : 0/0
  5922 ;;		Unchanged: 0/0
  5923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5924 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5925 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5927 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5928 ;;Total ram usage:        3 bytes
  5929 ;; Hardware stack levels used: 1
  5930 ;; Hardware stack levels required when called: 1
  5931 ;; This function calls:
  5932 ;;		i2_gpio_pin_logic_write
  5933 ;; This function is called by:
  5934 ;;		_MY_EUSART_RX_ISR
  5935 ;; This function uses a non-reentrant model
  5936 ;;
  5937                           
  5938                           	psect	text24
  5939   0030B0                     __ptext24:
  5940                           	callstack 0
  5941   0030B0                     _led_off:
  5942                           	callstack 21
  5943   0030B0                     
  5944                           ;ECUAL/LED/led.c: 68:     Std_ReturnType gpio_ret=(Std_ReturnType)0x00;
  5945   0030B0  0E00               	movlw	0
  5946   0030B2  6E0A               	movwf	led_off@gpio_ret^0,c
  5947                           
  5948                           ;ECUAL/LED/led.c: 69:     if(((void*)0)==led){
  5949   0030B4  5009               	movf	led_off@led^0,w,c
  5950   0030B6  A4D8               	btfss	status,2,c
  5951   0030B8  EF60  F018         	goto	i2u500_41
  5952   0030BC  EF62  F018         	goto	i2u500_40
  5953   0030C0                     i2u500_41:
  5954   0030C0  EF66  F018         	goto	i2l5154
  5955   0030C4                     i2u500_40:
  5956   0030C4                     
  5957                           ;ECUAL/LED/led.c: 70:         ret=(Std_ReturnType)0x00;
  5958   0030C4  0E00               	movlw	0
  5959   0030C6  6E0B               	movwf	led_off@ret^0,c
  5960                           
  5961                           ;ECUAL/LED/led.c: 71:     }
  5962   0030C8  EF80  F018         	goto	i2l5160
  5963   0030CC                     i2l5154:
  5964   0030CC  C009  F001         	movff	led_off@led,i2gpio_pin_logic_write@pin
  5965   0030D0  0E00               	movlw	0
  5966   0030D2  6E02               	movwf	i2gpio_pin_logic_write@pin_logic^0,c
  5967   0030D4  ECB5  F011         	call	i2_gpio_pin_logic_write	;wreg free
  5968   0030D8                     
  5969                           ;ECUAL/LED/led.c: 74:         led->led_state=led->led_pin.logic;
  5970   0030D8  5009               	movf	led_off@led^0,w,c
  5971   0030DA  6ED9               	movwf	fsr2l,c
  5972   0030DC  6ADA               	clrf	fsr2h,c
  5973   0030DE  0E01               	movlw	1
  5974   0030E0  26D9               	addwf	fsr2l,f,c
  5975   0030E2  5009               	movf	led_off@led^0,w,c
  5976   0030E4  6EE1               	movwf	fsr1l,c
  5977   0030E6  6AE2               	clrf	fsr1h,c
  5978   0030E8  BEE7               	btfsc	indf1,7,c
  5979   0030EA  EF79  F018         	goto	i2u501_41
  5980   0030EE  EF7C  F018         	goto	i2u501_40
  5981   0030F2                     i2u501_41:
  5982   0030F2  0E01               	movlw	1
  5983   0030F4  EF7D  F018         	goto	i2u501_46
  5984   0030F8                     i2u501_40:
  5985   0030F8  0E00               	movlw	0
  5986   0030FA                     i2u501_46:
  5987   0030FA  6EDF               	movwf	indf2,c
  5988   0030FC                     
  5989                           ;ECUAL/LED/led.c: 75:         ret=(Std_ReturnType)0x01;
  5990   0030FC  0E01               	movlw	1
  5991   0030FE  6E0B               	movwf	led_off@ret^0,c
  5992   003100                     i2l5160:
  5993                           
  5994                           ;ECUAL/LED/led.c: 78:     return ret;
  5995   003100  500B               	movf	led_off@ret^0,w,c
  5996   003102  0012               	return		;funcret
  5997   003104                     __end_of_led_off:
  5998                           	callstack 0
  5999                           
  6000 ;; *************** function _lcd_send_number_pos *****************
  6001 ;; Defined at:
  6002 ;;		line 289 in file "ECUAL/LCD/lcd.c"
  6003 ;; Parameters:    Size  Location     Type
  6004 ;;  lcd             1   52[COMRAM] PTR struct .
  6005 ;;		 -> lcd(6), 
  6006 ;;  row             1   53[COMRAM] unsigned char 
  6007 ;;  column          1   54[COMRAM] unsigned char 
  6008 ;;  num             2   55[COMRAM] unsigned short 
  6009 ;; Auto vars:     Size  Location     Type
  6010 ;;  ret             1    0        unsigned char 
  6011 ;;  lcd_ret         1   58[COMRAM] unsigned char 
  6012 ;;  gpio_ret        1   57[COMRAM] unsigned char 
  6013 ;; Return value:  Size  Location     Type
  6014 ;;                  1    wreg      unsigned char 
  6015 ;; Registers used:
  6016 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6017 ;; Tracked objects:
  6018 ;;		On entry : 0/0
  6019 ;;		On exit  : 0/0
  6020 ;;		Unchanged: 0/0
  6021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6022 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6023 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6025 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6026 ;;Total ram usage:        7 bytes
  6027 ;; Hardware stack levels used: 1
  6028 ;; Hardware stack levels required when called: 6
  6029 ;; This function calls:
  6030 ;;		_convert_uint16_to_string
  6031 ;;		_lcd_send_string_pos
  6032 ;; This function is called by:
  6033 ;;		_MY_EUSART_RX_ISR
  6034 ;; This function uses a non-reentrant model
  6035 ;;
  6036                           
  6037                           	psect	text25
  6038   00330E                     __ptext25:
  6039                           	callstack 0
  6040   00330E                     _lcd_send_number_pos:
  6041                           	callstack 16
  6042   00330E                     
  6043                           ;ECUAL/LCD/lcd.c: 295:     Std_ReturnType gpio_ret=(Std_ReturnType)0x00;
  6044   00330E  0E00               	movlw	0
  6045   003310  6E3A               	movwf	lcd_send_number_pos@gpio_ret^0,c
  6046                           
  6047                           ;ECUAL/LCD/lcd.c: 296:     Std_ReturnType lcd_ret=(Std_ReturnType)0x00;
  6048   003312  0E00               	movlw	0
  6049   003314  6E3B               	movwf	lcd_send_number_pos@lcd_ret^0,c
  6050                           
  6051                           ;ECUAL/LCD/lcd.c: 297:     if(((void*)0)==lcd){
  6052   003316  5035               	movf	lcd_send_number_pos@lcd^0,w,c
  6053   003318  A4D8               	btfss	status,2,c
  6054   00331A  EF91  F019         	goto	i2u497_41
  6055   00331E  EF93  F019         	goto	i2u497_40
  6056   003322                     i2u497_41:
  6057   003322  EF95  F019         	goto	i2l5130
  6058   003326                     i2u497_40:
  6059   003326                     
  6060                           ;ECUAL/LCD/lcd.c: 299:     }
  6061   003326  EFA7  F019         	goto	i2l121
  6062   00332A                     i2l5130:
  6063                           
  6064                           ;ECUAL/LCD/lcd.c: 301:         convert_uint16_to_string(num,number);
  6065   00332A  C038  F02B         	movff	lcd_send_number_pos@num,convert_uint16_to_string@value
  6066   00332E  C039  F02C         	movff	lcd_send_number_pos@num+1,convert_uint16_to_string@value+1
  6067   003332  0E62               	movlw	low lcd_send_number_pos@number
  6068   003334  6E2D               	movwf	convert_uint16_to_string@str^0,c
  6069   003336  EC01  F016         	call	_convert_uint16_to_string	;wreg free
  6070   00333A                     
  6071                           ;ECUAL/LCD/lcd.c: 302:         lcd_send_string_pos(lcd,row,column,number);
  6072   00333A  C035  F01B         	movff	lcd_send_number_pos@lcd,lcd_send_string_pos@lcd
  6073   00333E  C036  F01C         	movff	lcd_send_number_pos@row,lcd_send_string_pos@row
  6074   003342  C037  F01D         	movff	lcd_send_number_pos@column,lcd_send_string_pos@column
  6075   003346  0E62               	movlw	low lcd_send_number_pos@number
  6076   003348  6E1E               	movwf	lcd_send_string_pos@str^0,c
  6077   00334A  ECCF  F016         	call	_lcd_send_string_pos	;wreg free
  6078   00334E                     i2l121:
  6079   00334E  0012               	return		;funcret
  6080   003350                     __end_of_lcd_send_number_pos:
  6081                           	callstack 0
  6082                           
  6083 ;; *************** function _lcd_send_string_pos *****************
  6084 ;; Defined at:
  6085 ;;		line 206 in file "ECUAL/LCD/lcd.c"
  6086 ;; Parameters:    Size  Location     Type
  6087 ;;  lcd             1   26[COMRAM] PTR struct .
  6088 ;;		 -> lcd(6), 
  6089 ;;  row             1   27[COMRAM] unsigned char 
  6090 ;;  column          1   28[COMRAM] unsigned char 
  6091 ;;  str             1   29[COMRAM] PTR unsigned char 
  6092 ;;		 -> lcd_send_number_pos@number(1), 
  6093 ;; Auto vars:     Size  Location     Type
  6094 ;;  ret             1    0        unsigned char 
  6095 ;;  lcd_ret         1   31[COMRAM] unsigned char 
  6096 ;;  gpio_ret        1   30[COMRAM] unsigned char 
  6097 ;; Return value:  Size  Location     Type
  6098 ;;                  1    wreg      unsigned char 
  6099 ;; Registers used:
  6100 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6101 ;; Tracked objects:
  6102 ;;		On entry : 0/0
  6103 ;;		On exit  : 0/0
  6104 ;;		Unchanged: 0/0
  6105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6106 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6107 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6109 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6110 ;;Total ram usage:        6 bytes
  6111 ;; Hardware stack levels used: 1
  6112 ;; Hardware stack levels required when called: 4
  6113 ;; This function calls:
  6114 ;;		_lcd_send_string
  6115 ;;		_lcd_set_curser
  6116 ;; This function is called by:
  6117 ;;		_lcd_send_number_pos
  6118 ;; This function uses a non-reentrant model
  6119 ;;
  6120                           
  6121                           	psect	text26
  6122   002D9E                     __ptext26:
  6123                           	callstack 0
  6124   002D9E                     _lcd_send_string_pos:
  6125                           	callstack 17
  6126   002D9E                     
  6127                           ;ECUAL/LCD/lcd.c: 209:     Std_ReturnType gpio_ret=(Std_ReturnType)0x00;
  6128   002D9E  0E00               	movlw	0
  6129   002DA0  6E1F               	movwf	lcd_send_string_pos@gpio_ret^0,c
  6130                           
  6131                           ;ECUAL/LCD/lcd.c: 210:     Std_ReturnType lcd_ret=(Std_ReturnType)0x00;
  6132   002DA2  0E00               	movlw	0
  6133   002DA4  6E20               	movwf	lcd_send_string_pos@lcd_ret^0,c
  6134                           
  6135                           ;ECUAL/LCD/lcd.c: 211:     if(((void*)0)==lcd || ((void*)0)==str || row>4 || column>40){
  6136   002DA6  501B               	movf	lcd_send_string_pos@lcd^0,w,c
  6137   002DA8  B4D8               	btfsc	status,2,c
  6138   002DAA  EFD9  F016         	goto	i2u482_41
  6139   002DAE  EFDB  F016         	goto	i2u482_40
  6140   002DB2                     i2u482_41:
  6141   002DB2  EFF3  F016         	goto	i2l5034
  6142   002DB6                     i2u482_40:
  6143   002DB6  501E               	movf	lcd_send_string_pos@str^0,w,c
  6144   002DB8  B4D8               	btfsc	status,2,c
  6145   002DBA  EFE1  F016         	goto	i2u483_41
  6146   002DBE  EFE3  F016         	goto	i2u483_40
  6147   002DC2                     i2u483_41:
  6148   002DC2  EFF3  F016         	goto	i2l5034
  6149   002DC6                     i2u483_40:
  6150   002DC6  0E05               	movlw	5
  6151   002DC8  601C               	cpfslt	lcd_send_string_pos@row^0,c
  6152   002DCA  EFE9  F016         	goto	i2u484_41
  6153   002DCE  EFEB  F016         	goto	i2u484_40
  6154   002DD2                     i2u484_41:
  6155   002DD2  EFF3  F016         	goto	i2l5034
  6156   002DD6                     i2u484_40:
  6157   002DD6  0E28               	movlw	40
  6158   002DD8  641D               	cpfsgt	lcd_send_string_pos@column^0,c
  6159   002DDA  EFF1  F016         	goto	i2u485_41
  6160   002DDE  EFF3  F016         	goto	i2u485_40
  6161   002DE2                     i2u485_41:
  6162   002DE2  EFF5  F016         	goto	i2l5036
  6163   002DE6                     i2u485_40:
  6164   002DE6                     i2l5034:
  6165                           
  6166                           ;ECUAL/LCD/lcd.c: 213:     }
  6167   002DE6  EF05  F017         	goto	i2l88
  6168   002DEA                     i2l5036:
  6169                           
  6170                           ;ECUAL/LCD/lcd.c: 215:         lcd_ret=lcd_set_curser(lcd,row,column);
  6171   002DEA  C01B  F014         	movff	lcd_send_string_pos@lcd,lcd_set_curser@lcd
  6172   002DEE  C01C  F015         	movff	lcd_send_string_pos@row,lcd_set_curser@row
  6173   002DF2  C01D  F016         	movff	lcd_send_string_pos@column,lcd_set_curser@column
  6174   002DF6  EC4C  F016         	call	_lcd_set_curser	;wreg free
  6175   002DFA  6E20               	movwf	lcd_send_string_pos@lcd_ret^0,c
  6176                           
  6177                           ;ECUAL/LCD/lcd.c: 216:         lcd_ret=lcd_send_string(lcd,str);
  6178   002DFC  C01B  F014         	movff	lcd_send_string_pos@lcd,lcd_send_string@lcd
  6179   002E00  C01E  F015         	movff	lcd_send_string_pos@str,lcd_send_string@str
  6180   002E04  ECD3  F017         	call	_lcd_send_string	;wreg free
  6181   002E08  6E20               	movwf	lcd_send_string_pos@lcd_ret^0,c
  6182   002E0A                     i2l88:
  6183   002E0A  0012               	return		;funcret
  6184   002E0C                     __end_of_lcd_send_string_pos:
  6185                           	callstack 0
  6186                           
  6187 ;; *************** function _lcd_set_curser *****************
  6188 ;; Defined at:
  6189 ;;		line 400 in file "ECUAL/LCD/lcd.c"
  6190 ;; Parameters:    Size  Location     Type
  6191 ;;  lcd             1   19[COMRAM] PTR struct .
  6192 ;;		 -> lcd(6), 
  6193 ;;  row             1   20[COMRAM] unsigned char 
  6194 ;;  column          1   21[COMRAM] unsigned char 
  6195 ;; Auto vars:     Size  Location     Type
  6196 ;;  lcd_ret         1   25[COMRAM] unsigned char 
  6197 ;;  ret             1    0        unsigned char 
  6198 ;;  gpio_ret        1   24[COMRAM] unsigned char 
  6199 ;; Return value:  Size  Location     Type
  6200 ;;                  1    wreg      unsigned char 
  6201 ;; Registers used:
  6202 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6203 ;; Tracked objects:
  6204 ;;		On entry : 0/0
  6205 ;;		On exit  : 0/0
  6206 ;;		Unchanged: 0/0
  6207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6208 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6209 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6210 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6211 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6212 ;;Total ram usage:        7 bytes
  6213 ;; Hardware stack levels used: 1
  6214 ;; Hardware stack levels required when called: 3
  6215 ;; This function calls:
  6216 ;;		i2_lcd_send_command
  6217 ;; This function is called by:
  6218 ;;		_lcd_send_string_pos
  6219 ;;		_lcd_send_char_data_pos
  6220 ;; This function uses a non-reentrant model
  6221 ;;
  6222                           
  6223                           	psect	text27
  6224   002C98                     __ptext27:
  6225                           	callstack 0
  6226   002C98                     _lcd_set_curser:
  6227                           	callstack 17
  6228   002C98                     
  6229                           ;ECUAL/LCD/lcd.c: 403:     Std_ReturnType gpio_ret=(Std_ReturnType)0x00;
  6230   002C98  0E00               	movlw	0
  6231   002C9A  6E19               	movwf	lcd_set_curser@gpio_ret^0,c
  6232                           
  6233                           ;ECUAL/LCD/lcd.c: 404:     Std_ReturnType lcd_ret=(Std_ReturnType)0x00;
  6234   002C9C  0E00               	movlw	0
  6235   002C9E  6E1A               	movwf	lcd_set_curser@lcd_ret^0,c
  6236   002CA0                     
  6237                           ;ECUAL/LCD/lcd.c: 405:  column--;
  6238   002CA0  0616               	decf	lcd_set_curser@column^0,f,c
  6239                           
  6240                           ;ECUAL/LCD/lcd.c: 413:     switch(row){
  6241   002CA2  EF77  F016         	goto	i2l4976
  6242   002CA6                     i2l4966:
  6243   002CA6  C014  F00F         	movff	lcd_set_curser@lcd,i2lcd_send_command@lcd
  6244   002CAA  5016               	movf	lcd_set_curser@column^0,w,c
  6245   002CAC  0F80               	addlw	128
  6246   002CAE  6E10               	movwf	i2lcd_send_command@command^0,c
  6247   002CB0  EC6D  F017         	call	i2_lcd_send_command	;wreg free
  6248   002CB4  EF94  F016         	goto	i2l4978
  6249   002CB8                     i2l4968:
  6250   002CB8  C014  F00F         	movff	lcd_set_curser@lcd,i2lcd_send_command@lcd
  6251   002CBC  5016               	movf	lcd_set_curser@column^0,w,c
  6252   002CBE  0FC0               	addlw	192
  6253   002CC0  6E10               	movwf	i2lcd_send_command@command^0,c
  6254   002CC2  EC6D  F017         	call	i2_lcd_send_command	;wreg free
  6255   002CC6  EF94  F016         	goto	i2l4978
  6256   002CCA                     i2l4970:
  6257   002CCA  C014  F00F         	movff	lcd_set_curser@lcd,i2lcd_send_command@lcd
  6258   002CCE  5016               	movf	lcd_set_curser@column^0,w,c
  6259   002CD0  0F94               	addlw	148
  6260   002CD2  6E10               	movwf	i2lcd_send_command@command^0,c
  6261   002CD4  EC6D  F017         	call	i2_lcd_send_command	;wreg free
  6262   002CD8  EF94  F016         	goto	i2l4978
  6263   002CDC                     i2l4972:
  6264   002CDC  C014  F00F         	movff	lcd_set_curser@lcd,i2lcd_send_command@lcd
  6265   002CE0  5016               	movf	lcd_set_curser@column^0,w,c
  6266   002CE2  0FD4               	addlw	212
  6267   002CE4  6E10               	movwf	i2lcd_send_command@command^0,c
  6268   002CE6  EC6D  F017         	call	i2_lcd_send_command	;wreg free
  6269   002CEA  EF94  F016         	goto	i2l4978
  6270   002CEE                     i2l4976:
  6271   002CEE  5015               	movf	lcd_set_curser@row^0,w,c
  6272   002CF0  6E17               	movwf	??_lcd_set_curser^0,c
  6273   002CF2  6A18               	clrf	(??_lcd_set_curser+1)^0,c
  6274                           
  6275                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6276                           ; Switch size 1, requested type "simple"
  6277                           ; Number of cases is 1, Range of values is 0 to 0
  6278                           ; switch strategies available:
  6279                           ; Name         Instructions Cycles
  6280                           ; simple_byte            4     3 (average)
  6281                           ;	Chosen strategy is simple_byte
  6282   002CF4  5018               	movf	(??_lcd_set_curser+1)^0,w,c
  6283   002CF6  0A00               	xorlw	0	; case 0
  6284   002CF8  B4D8               	btfsc	status,2,c
  6285   002CFA  EF81  F016         	goto	i2l5550
  6286   002CFE  EF94  F016         	goto	i2l4978
  6287   002D02                     i2l5550:
  6288                           
  6289                           ; Switch size 1, requested type "simple"
  6290                           ; Number of cases is 4, Range of values is 1 to 4
  6291                           ; switch strategies available:
  6292                           ; Name         Instructions Cycles
  6293                           ; simple_byte           13     7 (average)
  6294                           ;	Chosen strategy is simple_byte
  6295   002D02  5017               	movf	??_lcd_set_curser^0,w,c
  6296   002D04  0A01               	xorlw	1	; case 1
  6297   002D06  B4D8               	btfsc	status,2,c
  6298   002D08  EF53  F016         	goto	i2l4966
  6299   002D0C  0A03               	xorlw	3	; case 2
  6300   002D0E  B4D8               	btfsc	status,2,c
  6301   002D10  EF5C  F016         	goto	i2l4968
  6302   002D14  0A01               	xorlw	1	; case 3
  6303   002D16  B4D8               	btfsc	status,2,c
  6304   002D18  EF65  F016         	goto	i2l4970
  6305   002D1C  0A07               	xorlw	7	; case 4
  6306   002D1E  B4D8               	btfsc	status,2,c
  6307   002D20  EF6E  F016         	goto	i2l4972
  6308   002D24  EF94  F016         	goto	i2l4978
  6309   002D28                     i2l4978:
  6310                           
  6311                           ;ECUAL/LCD/lcd.c: 421:     return ret;
  6312   002D28  0E00               	movlw	0
  6313   002D2A  0012               	return		;funcret
  6314   002D2C                     __end_of_lcd_set_curser:
  6315                           	callstack 0
  6316                           
  6317 ;; *************** function i2_lcd_send_command *****************
  6318 ;; Defined at:
  6319 ;;		line 78 in file "ECUAL/LCD/lcd.c"
  6320 ;; Parameters:    Size  Location     Type
  6321 ;;  lcd             1   14[COMRAM] PTR struct .
  6322 ;;		 -> lcd(6), 
  6323 ;;  command         1   15[COMRAM] unsigned char 
  6324 ;; Auto vars:     Size  Location     Type
  6325 ;;  ret             1   18[COMRAM] unsigned char 
  6326 ;;  lcd_ret         1   17[COMRAM] unsigned char 
  6327 ;;  gpio_ret        1   16[COMRAM] unsigned char 
  6328 ;; Return value:  Size  Location     Type
  6329 ;;                  1    wreg      unsigned char 
  6330 ;; Registers used:
  6331 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6332 ;; Tracked objects:
  6333 ;;		On entry : 0/0
  6334 ;;		On exit  : 0/0
  6335 ;;		Unchanged: 0/0
  6336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6337 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6338 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6340 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6341 ;;Total ram usage:        5 bytes
  6342 ;; Hardware stack levels used: 1
  6343 ;; Hardware stack levels required when called: 2
  6344 ;; This function calls:
  6345 ;;		i2_gpio_pin_logic_write
  6346 ;;		i2_lcd_send_enable
  6347 ;;		i2_lcd_send_nbits
  6348 ;; This function is called by:
  6349 ;;		_lcd_set_curser
  6350 ;; This function uses a non-reentrant model
  6351 ;;
  6352                           
  6353                           	psect	text28
  6354   002EDA                     __ptext28:
  6355                           	callstack 0
  6356   002EDA                     i2_lcd_send_command:
  6357                           	callstack 17
  6358   002EDA                     
  6359                           ;ECUAL/LCD/lcd.c: 81:     Std_ReturnType gpio_ret=(Std_ReturnType)0x00;
  6360   002EDA  0E00               	movlw	0
  6361   002EDC  6E11               	movwf	i2lcd_send_command@gpio_ret^0,c
  6362                           
  6363                           ;ECUAL/LCD/lcd.c: 82:     Std_ReturnType lcd_ret=(Std_ReturnType)0x00;
  6364   002EDE  0E00               	movlw	0
  6365   002EE0  6E12               	movwf	i2lcd_send_command@lcd_ret^0,c
  6366                           
  6367                           ;ECUAL/LCD/lcd.c: 83:     if(((void*)0)==lcd){
  6368   002EE2  500F               	movf	i2lcd_send_command@lcd^0,w,c
  6369   002EE4  A4D8               	btfss	status,2,c
  6370   002EE6  EF77  F017         	goto	i2u470_41
  6371   002EEA  EF79  F017         	goto	i2u470_40
  6372   002EEE                     i2u470_41:
  6373   002EEE  EF7D  F017         	goto	i2l4924
  6374   002EF2                     i2u470_40:
  6375   002EF2                     
  6376                           ;ECUAL/LCD/lcd.c: 84:         ret=(Std_ReturnType)0x00;
  6377   002EF2  0E00               	movlw	0
  6378   002EF4  6E13               	movwf	i2lcd_send_command@ret^0,c
  6379                           
  6380                           ;ECUAL/LCD/lcd.c: 85:     }
  6381   002EF6  EF9E  F017         	goto	i2l4928
  6382   002EFA                     i2l4924:
  6383   002EFA  C00F  F001         	movff	i2lcd_send_command@lcd,i2gpio_pin_logic_write@pin
  6384   002EFE  0E00               	movlw	0
  6385   002F00  6E02               	movwf	i2gpio_pin_logic_write@pin_logic^0,c
  6386   002F02  ECB5  F011         	call	i2_gpio_pin_logic_write	;wreg free
  6387                           
  6388                           ;ECUAL/LCD/lcd.c: 89:         lcd_ret=lcd_send_nbits(lcd,command>>4);
  6389   002F06  C00F  F009         	movff	i2lcd_send_command@lcd,i2lcd_send_nbits@lcd
  6390   002F0A  3810               	swapf	i2lcd_send_command@command^0,w,c
  6391   002F0C  0B0F               	andlw	15
  6392   002F0E  6E0A               	movwf	i2lcd_send_nbits@data_or_command^0,c
  6393   002F10  EC82  F018         	call	i2_lcd_send_nbits	;wreg free
  6394   002F14  6E12               	movwf	i2lcd_send_command@lcd_ret^0,c
  6395                           
  6396                           ;ECUAL/LCD/lcd.c: 90:         lcd_ret=lcd_send_enable(lcd);
  6397   002F16  C00F  F009         	movff	i2lcd_send_command@lcd,i2lcd_send_enable@lcd
  6398   002F1A  EC5A  F01A         	call	i2_lcd_send_enable	;wreg free
  6399   002F1E  6E12               	movwf	i2lcd_send_command@lcd_ret^0,c
  6400                           
  6401                           ;ECUAL/LCD/lcd.c: 91:         lcd_ret=lcd_send_nbits(lcd,command);
  6402   002F20  C00F  F009         	movff	i2lcd_send_command@lcd,i2lcd_send_nbits@lcd
  6403   002F24  C010  F00A         	movff	i2lcd_send_command@command,i2lcd_send_nbits@data_or_command
  6404   002F28  EC82  F018         	call	i2_lcd_send_nbits	;wreg free
  6405   002F2C  6E12               	movwf	i2lcd_send_command@lcd_ret^0,c
  6406                           
  6407                           ;ECUAL/LCD/lcd.c: 92:         lcd_ret=lcd_send_enable(lcd);
  6408   002F2E  C00F  F009         	movff	i2lcd_send_command@lcd,i2lcd_send_enable@lcd
  6409   002F32  EC5A  F01A         	call	i2_lcd_send_enable	;wreg free
  6410   002F36  6E12               	movwf	i2lcd_send_command@lcd_ret^0,c
  6411   002F38                     
  6412                           ;ECUAL/LCD/lcd.c: 100:         ret=(Std_ReturnType)0x01;
  6413   002F38  0E01               	movlw	1
  6414   002F3A  6E13               	movwf	i2lcd_send_command@ret^0,c
  6415   002F3C                     i2l4928:
  6416                           
  6417                           ;ECUAL/LCD/lcd.c: 103:     return ret;
  6418   002F3C  5013               	movf	i2lcd_send_command@ret^0,w,c
  6419   002F3E  0012               	return		;funcret
  6420   002F40                     __end_ofi2_lcd_send_command:
  6421                           	callstack 0
  6422                           
  6423 ;; *************** function _lcd_send_string *****************
  6424 ;; Defined at:
  6425 ;;		line 177 in file "ECUAL/LCD/lcd.c"
  6426 ;; Parameters:    Size  Location     Type
  6427 ;;  lcd             1   19[COMRAM] PTR struct .
  6428 ;;		 -> lcd(6), 
  6429 ;;  str             1   20[COMRAM] PTR unsigned char 
  6430 ;;		 -> lcd_send_number_pos@number(1), lcd_send_number@number(1), 
  6431 ;; Auto vars:     Size  Location     Type
  6432 ;;  ret             1   23[COMRAM] unsigned char 
  6433 ;;  lcd_ret         1   22[COMRAM] unsigned char 
  6434 ;;  gpio_ret        1   21[COMRAM] unsigned char 
  6435 ;; Return value:  Size  Location     Type
  6436 ;;                  1    wreg      unsigned char 
  6437 ;; Registers used:
  6438 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6439 ;; Tracked objects:
  6440 ;;		On entry : 0/0
  6441 ;;		On exit  : 0/0
  6442 ;;		Unchanged: 0/0
  6443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6444 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6445 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6447 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6448 ;;Total ram usage:        5 bytes
  6449 ;; Hardware stack levels used: 1
  6450 ;; Hardware stack levels required when called: 3
  6451 ;; This function calls:
  6452 ;;		_lcd_send_char_data
  6453 ;; This function is called by:
  6454 ;;		_lcd_send_string_pos
  6455 ;;		_lcd_send_number
  6456 ;; This function uses a non-reentrant model
  6457 ;;
  6458                           
  6459                           	psect	text29
  6460   002FA6                     __ptext29:
  6461                           	callstack 0
  6462   002FA6                     _lcd_send_string:
  6463                           	callstack 17
  6464   002FA6                     
  6465                           ;ECUAL/LCD/lcd.c: 180:     Std_ReturnType gpio_ret=(Std_ReturnType)0x00;
  6466   002FA6  0E00               	movlw	0
  6467   002FA8  6E16               	movwf	lcd_send_string@gpio_ret^0,c
  6468                           
  6469                           ;ECUAL/LCD/lcd.c: 181:     Std_ReturnType lcd_ret=(Std_ReturnType)0x00;
  6470   002FAA  0E00               	movlw	0
  6471   002FAC  6E17               	movwf	lcd_send_string@lcd_ret^0,c
  6472                           
  6473                           ;ECUAL/LCD/lcd.c: 182:     if(((void*)0)==lcd || ((void*)0)==str){
  6474   002FAE  5014               	movf	lcd_send_string@lcd^0,w,c
  6475   002FB0  B4D8               	btfsc	status,2,c
  6476   002FB2  EFDD  F017         	goto	i2u477_41
  6477   002FB6  EFDF  F017         	goto	i2u477_40
  6478   002FBA                     i2u477_41:
  6479   002FBA  EFE7  F017         	goto	i2l4990
  6480   002FBE                     i2u477_40:
  6481   002FBE  5015               	movf	lcd_send_string@str^0,w,c
  6482   002FC0  A4D8               	btfss	status,2,c
  6483   002FC2  EFE5  F017         	goto	i2u478_41
  6484   002FC6  EFE7  F017         	goto	i2u478_40
  6485   002FCA                     i2u478_41:
  6486   002FCA  EFF5  F017         	goto	i2l4996
  6487   002FCE                     i2u478_40:
  6488   002FCE                     i2l4990:
  6489                           
  6490                           ;ECUAL/LCD/lcd.c: 183:         ret=(Std_ReturnType)0x00;
  6491   002FCE  0E00               	movlw	0
  6492   002FD0  6E18               	movwf	lcd_send_string@ret^0,c
  6493                           
  6494                           ;ECUAL/LCD/lcd.c: 184:     }
  6495   002FD2  EF02  F018         	goto	i2l77
  6496   002FD6                     i2l4992:
  6497   002FD6  C014  F00F         	movff	lcd_send_string@lcd,lcd_send_char_data@lcd
  6498   002FDA  5015               	movf	lcd_send_string@str^0,w,c
  6499   002FDC  6ED9               	movwf	fsr2l,c
  6500   002FDE  6ADA               	clrf	fsr2h,c
  6501   002FE0  50DF               	movf	indf2,w,c
  6502   002FE2  6E10               	movwf	lcd_send_char_data@data^0,c
  6503   002FE4  ECA0  F017         	call	_lcd_send_char_data	;wreg free
  6504   002FE8  2A15               	incf	lcd_send_string@str^0,f,c
  6505   002FEA                     i2l4996:
  6506                           
  6507                           ;ECUAL/LCD/lcd.c: 186:         while(*str){
  6508   002FEA  5015               	movf	lcd_send_string@str^0,w,c
  6509   002FEC  6ED9               	movwf	fsr2l,c
  6510   002FEE  6ADA               	clrf	fsr2h,c
  6511   002FF0  50DF               	movf	indf2,w,c
  6512   002FF2  A4D8               	btfss	status,2,c
  6513   002FF4  EFFE  F017         	goto	i2u479_41
  6514   002FF8  EF00  F018         	goto	i2u479_40
  6515   002FFC                     i2u479_41:
  6516   002FFC  EFEB  F017         	goto	i2l4992
  6517   003000                     i2u479_40:
  6518   003000                     
  6519                           ;ECUAL/LCD/lcd.c: 190:         ret=(Std_ReturnType)0x01;
  6520   003000  0E01               	movlw	1
  6521   003002  6E18               	movwf	lcd_send_string@ret^0,c
  6522   003004                     i2l77:
  6523                           
  6524                           ;ECUAL/LCD/lcd.c: 193:     return ret;
  6525   003004  5018               	movf	lcd_send_string@ret^0,w,c
  6526   003006  0012               	return		;funcret
  6527   003008                     __end_of_lcd_send_string:
  6528                           	callstack 0
  6529                           
  6530 ;; *************** function _lcd_send_char_data *****************
  6531 ;; Defined at:
  6532 ;;		line 115 in file "ECUAL/LCD/lcd.c"
  6533 ;; Parameters:    Size  Location     Type
  6534 ;;  lcd             1   14[COMRAM] PTR struct .
  6535 ;;		 -> lcd(6), 
  6536 ;;  data            1   15[COMRAM] unsigned char 
  6537 ;; Auto vars:     Size  Location     Type
  6538 ;;  ret             1   18[COMRAM] unsigned char 
  6539 ;;  lcd_ret         1   17[COMRAM] unsigned char 
  6540 ;;  gpio_ret        1   16[COMRAM] unsigned char 
  6541 ;; Return value:  Size  Location     Type
  6542 ;;                  1    wreg      unsigned char 
  6543 ;; Registers used:
  6544 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6545 ;; Tracked objects:
  6546 ;;		On entry : 0/0
  6547 ;;		On exit  : 0/0
  6548 ;;		Unchanged: 0/0
  6549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6550 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6551 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6553 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6554 ;;Total ram usage:        5 bytes
  6555 ;; Hardware stack levels used: 1
  6556 ;; Hardware stack levels required when called: 2
  6557 ;; This function calls:
  6558 ;;		i2_gpio_pin_logic_write
  6559 ;;		i2_lcd_send_enable
  6560 ;;		i2_lcd_send_nbits
  6561 ;; This function is called by:
  6562 ;;		_lcd_send_string
  6563 ;;		_lcd_send_char_data_pos
  6564 ;;		_lcd_send_custom_char
  6565 ;; This function uses a non-reentrant model
  6566 ;;
  6567                           
  6568                           	psect	text30
  6569   002F40                     __ptext30:
  6570                           	callstack 0
  6571   002F40                     _lcd_send_char_data:
  6572                           	callstack 17
  6573   002F40                     
  6574                           ;ECUAL/LCD/lcd.c: 118:     Std_ReturnType gpio_ret=(Std_ReturnType)0x00;
  6575   002F40  0E00               	movlw	0
  6576   002F42  6E11               	movwf	lcd_send_char_data@gpio_ret^0,c
  6577                           
  6578                           ;ECUAL/LCD/lcd.c: 119:     Std_ReturnType lcd_ret=(Std_ReturnType)0x00;
  6579   002F44  0E00               	movlw	0
  6580   002F46  6E12               	movwf	lcd_send_char_data@lcd_ret^0,c
  6581                           
  6582                           ;ECUAL/LCD/lcd.c: 120:     if(((void*)0)==lcd){
  6583   002F48  500F               	movf	lcd_send_char_data@lcd^0,w,c
  6584   002F4A  A4D8               	btfss	status,2,c
  6585   002F4C  EFAA  F017         	goto	i2u469_41
  6586   002F50  EFAC  F017         	goto	i2u469_40
  6587   002F54                     i2u469_41:
  6588   002F54  EFB0  F017         	goto	i2l4912
  6589   002F58                     i2u469_40:
  6590   002F58                     
  6591                           ;ECUAL/LCD/lcd.c: 121:         ret=(Std_ReturnType)0x00;
  6592   002F58  0E00               	movlw	0
  6593   002F5A  6E13               	movwf	lcd_send_char_data@ret^0,c
  6594                           
  6595                           ;ECUAL/LCD/lcd.c: 122:     }
  6596   002F5C  EFD1  F017         	goto	i2l4916
  6597   002F60                     i2l4912:
  6598   002F60  C00F  F001         	movff	lcd_send_char_data@lcd,i2gpio_pin_logic_write@pin
  6599   002F64  0E01               	movlw	1
  6600   002F66  6E02               	movwf	i2gpio_pin_logic_write@pin_logic^0,c
  6601   002F68  ECB5  F011         	call	i2_gpio_pin_logic_write	;wreg free
  6602                           
  6603                           ;ECUAL/LCD/lcd.c: 126:         lcd_ret=lcd_send_nbits(lcd,data>>4);
  6604   002F6C  C00F  F009         	movff	lcd_send_char_data@lcd,i2lcd_send_nbits@lcd
  6605   002F70  3810               	swapf	lcd_send_char_data@data^0,w,c
  6606   002F72  0B0F               	andlw	15
  6607   002F74  6E0A               	movwf	i2lcd_send_nbits@data_or_command^0,c
  6608   002F76  EC82  F018         	call	i2_lcd_send_nbits	;wreg free
  6609   002F7A  6E12               	movwf	lcd_send_char_data@lcd_ret^0,c
  6610                           
  6611                           ;ECUAL/LCD/lcd.c: 127:         lcd_ret=lcd_send_enable(lcd);
  6612   002F7C  C00F  F009         	movff	lcd_send_char_data@lcd,i2lcd_send_enable@lcd
  6613   002F80  EC5A  F01A         	call	i2_lcd_send_enable	;wreg free
  6614   002F84  6E12               	movwf	lcd_send_char_data@lcd_ret^0,c
  6615                           
  6616                           ;ECUAL/LCD/lcd.c: 128:         lcd_ret=lcd_send_nbits(lcd,data);
  6617   002F86  C00F  F009         	movff	lcd_send_char_data@lcd,i2lcd_send_nbits@lcd
  6618   002F8A  C010  F00A         	movff	lcd_send_char_data@data,i2lcd_send_nbits@data_or_command
  6619   002F8E  EC82  F018         	call	i2_lcd_send_nbits	;wreg free
  6620   002F92  6E12               	movwf	lcd_send_char_data@lcd_ret^0,c
  6621                           
  6622                           ;ECUAL/LCD/lcd.c: 129:         lcd_ret=lcd_send_enable(lcd);
  6623   002F94  C00F  F009         	movff	lcd_send_char_data@lcd,i2lcd_send_enable@lcd
  6624   002F98  EC5A  F01A         	call	i2_lcd_send_enable	;wreg free
  6625   002F9C  6E12               	movwf	lcd_send_char_data@lcd_ret^0,c
  6626   002F9E                     
  6627                           ;ECUAL/LCD/lcd.c: 136:         ret=(Std_ReturnType)0x01;
  6628   002F9E  0E01               	movlw	1
  6629   002FA0  6E13               	movwf	lcd_send_char_data@ret^0,c
  6630   002FA2                     i2l4916:
  6631                           
  6632                           ;ECUAL/LCD/lcd.c: 139:     return ret;
  6633   002FA2  5013               	movf	lcd_send_char_data@ret^0,w,c
  6634   002FA4  0012               	return		;funcret
  6635   002FA6                     __end_of_lcd_send_char_data:
  6636                           	callstack 0
  6637                           
  6638 ;; *************** function i2_lcd_send_nbits *****************
  6639 ;; Defined at:
  6640 ;;		line 376 in file "ECUAL/LCD/lcd.c"
  6641 ;; Parameters:    Size  Location     Type
  6642 ;;  lcd             1    8[COMRAM] PTR struct .
  6643 ;;		 -> lcd(6), 
  6644 ;;  data_or_comm    1    9[COMRAM] unsigned char 
  6645 ;; Auto vars:     Size  Location     Type
  6646 ;;  pin_counter     1   13[COMRAM] unsigned char 
  6647 ;;  ret             1   12[COMRAM] unsigned char 
  6648 ;;  gpio_ret        1    0        unsigned char 
  6649 ;; Return value:  Size  Location     Type
  6650 ;;                  1    wreg      unsigned char 
  6651 ;; Registers used:
  6652 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6653 ;; Tracked objects:
  6654 ;;		On entry : 0/0
  6655 ;;		On exit  : 0/0
  6656 ;;		Unchanged: 0/0
  6657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6658 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6659 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6660 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6661 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6662 ;;Total ram usage:        6 bytes
  6663 ;; Hardware stack levels used: 1
  6664 ;; Hardware stack levels required when called: 1
  6665 ;; This function calls:
  6666 ;;		i2_gpio_pin_logic_write
  6667 ;; This function is called by:
  6668 ;;		_lcd_send_char_data
  6669 ;;		i2_lcd_send_command
  6670 ;; This function uses a non-reentrant model
  6671 ;;
  6672                           
  6673                           	psect	text31
  6674   003104                     __ptext31:
  6675                           	callstack 0
  6676   003104                     i2_lcd_send_nbits:
  6677                           	callstack 17
  6678   003104                     
  6679                           ;ECUAL/LCD/lcd.c: 378:     uint8 pin_counter;;ECUAL/LCD/lcd.c: 379:     Std_ReturnType r
      +                          et=(Std_ReturnType)0x00;
  6680   003104  0E00               	movlw	0
  6681   003106  6E0D               	movwf	i2lcd_send_nbits@ret^0,c
  6682                           
  6683                           ;ECUAL/LCD/lcd.c: 381:     for(pin_counter=0;pin_counter<n;pin_counter++){
  6684   003108  0E00               	movlw	0
  6685   00310A  6E0E               	movwf	i2lcd_send_nbits@pin_counter^0,c
  6686   00310C  EF9E  F018         	goto	i2l4890
  6687   003110                     i2l4886:
  6688                           
  6689                           ; BSR set to: 0
  6690   003110  5009               	movf	i2lcd_send_nbits@lcd^0,w,c
  6691   003112  240E               	addwf	i2lcd_send_nbits@pin_counter^0,w,c
  6692   003114  0F02               	addlw	2
  6693   003116  6E01               	movwf	i2gpio_pin_logic_write@pin^0,c
  6694   003118  C00E  F00B         	movff	i2lcd_send_nbits@pin_counter,??i2_lcd_send_nbits
  6695   00311C  C00A  F00C         	movff	i2lcd_send_nbits@data_or_command,??i2_lcd_send_nbits+1
  6696   003120  2A0B               	incf	??i2_lcd_send_nbits^0,f,c
  6697   003122  EF95  F018         	goto	i2u467_44
  6698   003126                     i2u467_45:
  6699   003126  90D8               	bcf	status,0,c
  6700   003128  320C               	rrcf	(??i2_lcd_send_nbits+1)^0,f,c
  6701   00312A                     i2u467_44:
  6702   00312A  2E0B               	decfsz	??i2_lcd_send_nbits^0,f,c
  6703   00312C  EF93  F018         	goto	i2u467_45
  6704   003130  500C               	movf	(??i2_lcd_send_nbits+1)^0,w,c
  6705   003132  0B01               	andlw	1
  6706   003134  6E02               	movwf	i2gpio_pin_logic_write@pin_logic^0,c
  6707   003136  ECB5  F011         	call	i2_gpio_pin_logic_write	;wreg free
  6708   00313A                     
  6709                           ;ECUAL/LCD/lcd.c: 383:     }
  6710   00313A  2A0E               	incf	i2lcd_send_nbits@pin_counter^0,f,c
  6711   00313C                     i2l4890:
  6712   00313C  0100               	movlb	0	; () banked
  6713   00313E  51E2               	movf	_n& (0+255),w,b
  6714   003140  5C0E               	subwf	i2lcd_send_nbits@pin_counter^0,w,c
  6715   003142  A0D8               	btfss	status,0,c
  6716   003144  EFA6  F018         	goto	i2u468_41
  6717   003148  EFA8  F018         	goto	i2u468_40
  6718   00314C                     i2u468_41:
  6719   00314C  EF88  F018         	goto	i2l4886
  6720   003150                     i2u468_40:
  6721   003150                     
  6722                           ; BSR set to: 0
  6723                           ;ECUAL/LCD/lcd.c: 385:     return ret;
  6724   003150  500D               	movf	i2lcd_send_nbits@ret^0,w,c
  6725   003152                     
  6726                           ; BSR set to: 0
  6727   003152  0012               	return		;funcret
  6728   003154                     __end_ofi2_lcd_send_nbits:
  6729                           	callstack 0
  6730                           
  6731 ;; *************** function i2_lcd_send_enable *****************
  6732 ;; Defined at:
  6733 ;;		line 388 in file "ECUAL/LCD/lcd.c"
  6734 ;; Parameters:    Size  Location     Type
  6735 ;;  lcd             1    8[COMRAM] PTR struct .
  6736 ;;		 -> lcd(6), 
  6737 ;; Auto vars:     Size  Location     Type
  6738 ;;  ret             1    0        unsigned char 
  6739 ;;  gpio_ret        1    9[COMRAM] unsigned char 
  6740 ;; Return value:  Size  Location     Type
  6741 ;;                  1    wreg      unsigned char 
  6742 ;; Registers used:
  6743 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6744 ;; Tracked objects:
  6745 ;;		On entry : 0/0
  6746 ;;		On exit  : 0/0
  6747 ;;		Unchanged: 0/0
  6748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6749 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6750 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6752 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6753 ;;Total ram usage:        2 bytes
  6754 ;; Hardware stack levels used: 1
  6755 ;; Hardware stack levels required when called: 1
  6756 ;; This function calls:
  6757 ;;		i2_gpio_pin_logic_write
  6758 ;; This function is called by:
  6759 ;;		_lcd_send_char_data
  6760 ;;		i2_lcd_send_command
  6761 ;; This function uses a non-reentrant model
  6762 ;;
  6763                           
  6764                           	psect	text32
  6765   0034B4                     __ptext32:
  6766                           	callstack 0
  6767   0034B4                     i2_lcd_send_enable:
  6768                           	callstack 17
  6769   0034B4                     
  6770                           ;ECUAL/LCD/lcd.c: 391:     Std_ReturnType gpio_ret=(Std_ReturnType)0x00;
  6771   0034B4  0E00               	movlw	0
  6772   0034B6  6E0A               	movwf	i2lcd_send_enable@gpio_ret^0,c
  6773   0034B8  2809               	incf	i2lcd_send_enable@lcd^0,w,c
  6774   0034BA  6E01               	movwf	i2gpio_pin_logic_write@pin^0,c
  6775   0034BC  0E01               	movlw	1
  6776   0034BE  6E02               	movwf	i2gpio_pin_logic_write@pin_logic^0,c
  6777   0034C0  ECB5  F011         	call	i2_gpio_pin_logic_write	;wreg free
  6778   0034C4                     
  6779                           ;ECUAL/LCD/lcd.c: 393:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  6780   0034C4  0E03               	movlw	3
  6781   0034C6                     i2u536_47:
  6782   0034C6  2EE8               	decfsz	wreg,f,c
  6783   0034C8  D7FE               	bra	i2u536_47
  6784   0034CA  0000               	nop	
  6785   0034CC  2809               	incf	i2lcd_send_enable@lcd^0,w,c
  6786   0034CE  6E01               	movwf	i2gpio_pin_logic_write@pin^0,c
  6787   0034D0  0E00               	movlw	0
  6788   0034D2  6E02               	movwf	i2gpio_pin_logic_write@pin_logic^0,c
  6789   0034D4  ECB5  F011         	call	i2_gpio_pin_logic_write	;wreg free
  6790   0034D8                     
  6791                           ;ECUAL/LCD/lcd.c: 396:     return ret;
  6792   0034D8  0E00               	movlw	0
  6793   0034DA  0012               	return		;funcret
  6794   0034DC                     __end_ofi2_lcd_send_enable:
  6795                           	callstack 0
  6796                           
  6797 ;; *************** function _convert_uint16_to_string *****************
  6798 ;; Defined at:
  6799 ;;		line 336 in file "ECUAL/LCD/lcd.c"
  6800 ;; Parameters:    Size  Location     Type
  6801 ;;  value           2   42[COMRAM] unsigned short 
  6802 ;;  str             1   44[COMRAM] PTR unsigned char 
  6803 ;;		 -> lcd_send_number_pos@number(1), lcd_send_number@number(1), 
  6804 ;; Auto vars:     Size  Location     Type
  6805 ;;  Temp_String     6   45[COMRAM] unsigned char [6]
  6806 ;;  DataCounter     1   51[COMRAM] unsigned char 
  6807 ;;  ret             1    0        unsigned char 
  6808 ;; Return value:  Size  Location     Type
  6809 ;;                  1    wreg      unsigned char 
  6810 ;; Registers used:
  6811 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6812 ;; Tracked objects:
  6813 ;;		On entry : 0/0
  6814 ;;		On exit  : 0/0
  6815 ;;		Unchanged: 0/0
  6816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6817 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6818 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6820 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6821 ;;Total ram usage:       10 bytes
  6822 ;; Hardware stack levels used: 1
  6823 ;; Hardware stack levels required when called: 5
  6824 ;; This function calls:
  6825 ;;		_memset
  6826 ;;		_sprintf
  6827 ;; This function is called by:
  6828 ;;		_lcd_send_number_pos
  6829 ;;		_lcd_send_number
  6830 ;; This function uses a non-reentrant model
  6831 ;;
  6832                           
  6833                           	psect	text33
  6834   002C02                     __ptext33:
  6835                           	callstack 0
  6836   002C02                     _convert_uint16_to_string:
  6837                           	callstack 16
  6838   002C02                     
  6839                           ;ECUAL/LCD/lcd.c: 338:     uint8 Temp_String[6] = {0};
  6840   002C02  EE20  F048         	lfsr	2,convert_uint16_to_string@F3180
  6841   002C06  EE10  F02E         	lfsr	1,convert_uint16_to_string@Temp_String
  6842   002C0A  0E05               	movlw	5
  6843   002C0C                     i2u300_41:
  6844   002C0C  CFDB FFE3          	movff	plusw2,plusw1
  6845   002C10  06E8               	decf	wreg,f,c
  6846   002C12  E2FC               	bc	i2u300_41
  6847   002C14                     
  6848                           ;ECUAL/LCD/lcd.c: 339:     uint8 DataCounter = 0;
  6849   002C14  0E00               	movlw	0
  6850   002C16  6E34               	movwf	convert_uint16_to_string@DataCounter^0,c
  6851   002C18                     
  6852                           ;ECUAL/LCD/lcd.c: 340:     if(((void*)0) == str){
  6853   002C18  502D               	movf	convert_uint16_to_string@str^0,w,c
  6854   002C1A  A4D8               	btfss	status,2,c
  6855   002C1C  EF12  F016         	goto	i2u301_41
  6856   002C20  EF14  F016         	goto	i2u301_40
  6857   002C24                     i2u301_41:
  6858   002C24  EF16  F016         	goto	i2l3650
  6859   002C28                     i2u301_40:
  6860   002C28                     
  6861                           ;ECUAL/LCD/lcd.c: 342:     }
  6862   002C28  EF4B  F016         	goto	i2l136
  6863   002C2C                     i2l3650:
  6864                           
  6865                           ;ECUAL/LCD/lcd.c: 344:         memset(str, ' ', 5);
  6866   002C2C  C02D  F001         	movff	convert_uint16_to_string@str,memset@dest
  6867   002C30  0E00               	movlw	0
  6868   002C32  6E03               	movwf	(memset@c+1)^0,c
  6869   002C34  0E20               	movlw	32
  6870   002C36  6E02               	movwf	memset@c^0,c
  6871   002C38  0E00               	movlw	0
  6872   002C3A  6E05               	movwf	(memset@n+1)^0,c
  6873   002C3C  0E05               	movlw	5
  6874   002C3E  6E04               	movwf	memset@n^0,c
  6875   002C40  EC14  F01A         	call	_memset	;wreg free
  6876   002C44                     
  6877                           ;ECUAL/LCD/lcd.c: 345:         str[5] = '\0';
  6878   002C44  502D               	movf	convert_uint16_to_string@str^0,w,c
  6879   002C46  6ED9               	movwf	fsr2l,c
  6880   002C48  6ADA               	clrf	fsr2h,c
  6881   002C4A  0E05               	movlw	5
  6882   002C4C  26D9               	addwf	fsr2l,f,c
  6883   002C4E  6ADF               	clrf	indf2,c
  6884   002C50                     
  6885                           ;ECUAL/LCD/lcd.c: 346:         sprintf((char *)Temp_String, "%i", value);
  6886   002C50  0E2E               	movlw	low convert_uint16_to_string@Temp_String
  6887   002C52  6E1A               	movwf	sprintf@s^0,c
  6888   002C54  0E01               	movlw	low STR_1
  6889   002C56  6E1B               	movwf	sprintf@fmt^0,c
  6890   002C58  C02B  F01C         	movff	convert_uint16_to_string@value,?_sprintf+2
  6891   002C5C  C02C  F01D         	movff	convert_uint16_to_string@value+1,?_sprintf+3
  6892   002C60  ECC8  F019         	call	_sprintf	;wreg free
  6893                           
  6894                           ;ECUAL/LCD/lcd.c: 347:         while(Temp_String[DataCounter] != '\0'){
  6895   002C64  EF3F  F016         	goto	i2l3660
  6896   002C68                     i2l3656:
  6897                           
  6898                           ;ECUAL/LCD/lcd.c: 348:             str[DataCounter] = Temp_String[DataCounter];
  6899   002C68  5034               	movf	convert_uint16_to_string@DataCounter^0,w,c
  6900   002C6A  0F2E               	addlw	low convert_uint16_to_string@Temp_String
  6901   002C6C  6ED9               	movwf	fsr2l,c
  6902   002C6E  6ADA               	clrf	fsr2h,c
  6903   002C70  502D               	movf	convert_uint16_to_string@str^0,w,c
  6904   002C72  2434               	addwf	convert_uint16_to_string@DataCounter^0,w,c
  6905   002C74  6EE1               	movwf	fsr1l,c
  6906   002C76  6AE2               	clrf	fsr1h,c
  6907   002C78  CFDF FFE7          	movff	indf2,indf1
  6908   002C7C                     
  6909                           ;ECUAL/LCD/lcd.c: 349:             DataCounter++;
  6910   002C7C  2A34               	incf	convert_uint16_to_string@DataCounter^0,f,c
  6911   002C7E                     i2l3660:
  6912                           
  6913                           ;ECUAL/LCD/lcd.c: 347:         while(Temp_String[DataCounter] != '\0'){
  6914   002C7E  5034               	movf	convert_uint16_to_string@DataCounter^0,w,c
  6915   002C80  0F2E               	addlw	low convert_uint16_to_string@Temp_String
  6916   002C82  6ED9               	movwf	fsr2l,c
  6917   002C84  6ADA               	clrf	fsr2h,c
  6918   002C86  50DF               	movf	indf2,w,c
  6919   002C88  A4D8               	btfss	status,2,c
  6920   002C8A  EF49  F016         	goto	i2u302_41
  6921   002C8E  EF4B  F016         	goto	i2u302_40
  6922   002C92                     i2u302_41:
  6923   002C92  EF34  F016         	goto	i2l3656
  6924   002C96                     i2u302_40:
  6925   002C96                     i2l136:
  6926   002C96  0012               	return		;funcret
  6927   002C98                     __end_of_convert_uint16_to_string:
  6928                           	callstack 0
  6929                           
  6930 ;; *************** function _sprintf *****************
  6931 ;; Defined at:
  6932 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  6933 ;; Parameters:    Size  Location     Type
  6934 ;;  s               1   25[COMRAM] PTR unsigned char 
  6935 ;;		 -> convert_uint16_to_string@Temp_String(6), 
  6936 ;;  fmt             1   26[COMRAM] PTR const unsigned char 
  6937 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  6938 ;; Auto vars:     Size  Location     Type
  6939 ;;  f              12   30[COMRAM] struct _IO_FILE
  6940 ;;  ret             2    0        int 
  6941 ;;  ap              1   29[COMRAM] PTR void [1]
  6942 ;;		 -> ?_sprintf(2), 
  6943 ;; Return value:  Size  Location     Type
  6944 ;;                  2   25[COMRAM] int 
  6945 ;; Registers used:
  6946 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6947 ;; Tracked objects:
  6948 ;;		On entry : 0/0
  6949 ;;		On exit  : 0/0
  6950 ;;		Unchanged: 0/0
  6951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6952 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6953 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6955 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6956 ;;Total ram usage:       17 bytes
  6957 ;; Hardware stack levels used: 1
  6958 ;; Hardware stack levels required when called: 4
  6959 ;; This function calls:
  6960 ;;		_vfprintf
  6961 ;; This function is called by:
  6962 ;;		_convert_uint16_to_string
  6963 ;;		_convert_uint8_to_string
  6964 ;;		_convert_uint32_to_string
  6965 ;; This function uses a non-reentrant model
  6966 ;;
  6967                           
  6968                           	psect	text34
  6969   003390                     __ptext34:
  6970                           	callstack 0
  6971   003390                     _sprintf:
  6972                           	callstack 16
  6973   003390  0E1C               	movlw	low (?_sprintf+2)
  6974   003392  6E1E               	movwf	sprintf@ap^0,c
  6975   003394  C01A  F01F         	movff	sprintf@s,sprintf@f
  6976   003398  0E00               	movlw	0
  6977   00339A  6E23               	movwf	(sprintf@f+4)^0,c
  6978   00339C  0E00               	movlw	0
  6979   00339E  6E22               	movwf	(sprintf@f+3)^0,c
  6980   0033A0  0E00               	movlw	0
  6981   0033A2  6E2A               	movwf	(sprintf@f+11)^0,c
  6982   0033A4  0E00               	movlw	0
  6983   0033A6  6E29               	movwf	(sprintf@f+10)^0,c
  6984   0033A8  0E1F               	movlw	low sprintf@f
  6985   0033AA  6E16               	movwf	vfprintf@fp^0,c
  6986   0033AC  C01B  F017         	movff	sprintf@fmt,vfprintf@fmt
  6987   0033B0  0E1E               	movlw	low sprintf@ap
  6988   0033B2  6E18               	movwf	vfprintf@ap^0,c
  6989   0033B4  ECA8  F019         	call	_vfprintf	;wreg free
  6990   0033B8  501A               	movf	sprintf@s^0,w,c
  6991   0033BA  2422               	addwf	(sprintf@f+3)^0,w,c
  6992   0033BC  6ED9               	movwf	fsr2l,c
  6993   0033BE  6ADA               	clrf	fsr2h,c
  6994   0033C0  6ADF               	clrf	indf2,c
  6995   0033C2  0012               	return		;funcret
  6996   0033C4                     __end_of_sprintf:
  6997                           	callstack 0
  6998                           
  6999 ;; *************** function _vfprintf *****************
  7000 ;; Defined at:
  7001 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  7002 ;; Parameters:    Size  Location     Type
  7003 ;;  fp              1   21[COMRAM] PTR struct _IO_FILE
  7004 ;;		 -> sprintf@f(12), 
  7005 ;;  fmt             1   22[COMRAM] PTR const unsigned char 
  7006 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  7007 ;;  ap              1   23[COMRAM] PTR PTR void 
  7008 ;;		 -> sprintf@ap(1), 
  7009 ;; Auto vars:     Size  Location     Type
  7010 ;;  cfmt            1   24[COMRAM] PTR unsigned char 
  7011 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  7012 ;; Return value:  Size  Location     Type
  7013 ;;                  2   21[COMRAM] int 
  7014 ;; Registers used:
  7015 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7016 ;; Tracked objects:
  7017 ;;		On entry : 0/0
  7018 ;;		On exit  : 0/0
  7019 ;;		Unchanged: 0/0
  7020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7021 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7022 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7024 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7025 ;;Total ram usage:        4 bytes
  7026 ;; Hardware stack levels used: 1
  7027 ;; Hardware stack levels required when called: 3
  7028 ;; This function calls:
  7029 ;;		_vfpfcnvrt
  7030 ;; This function is called by:
  7031 ;;		_sprintf
  7032 ;; This function uses a non-reentrant model
  7033 ;;
  7034                           
  7035                           	psect	text35
  7036   003350                     __ptext35:
  7037                           	callstack 0
  7038   003350                     _vfprintf:
  7039                           	callstack 16
  7040   003350                     
  7041                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  7042   003350  C017  F019         	movff	vfprintf@fmt,vfprintf@cfmt
  7043                           
  7044                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  7045   003354  EFB4  F019         	goto	i2l3492
  7046   003358                     i2l3490:
  7047                           
  7048                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  7049   003358  C016  F00B         	movff	vfprintf@fp,vfpfcnvrt@fp
  7050   00335C  0E19               	movlw	low vfprintf@cfmt
  7051   00335E  6E0C               	movwf	vfpfcnvrt@fmt^0,c
  7052   003360  C018  F00D         	movff	vfprintf@ap,vfpfcnvrt@ap
  7053   003364  ECB7  F00E         	call	_vfpfcnvrt	;wreg free
  7054   003368                     i2l3492:
  7055                           
  7056                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  7057   003368  C019  FFF6         	movff	vfprintf@cfmt,tblptrl
  7058   00336C                     	if	1	;There is more than 1 active tblptr byte
  7059   00336C  0E10               	movlw	high __smallconst
  7060   00336E  6EF7               	movwf	tblptrh,c
  7061   003370                     	endif
  7062   003370                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7063   003370  6AF8               	clrf	tblptru,c
  7064   003372                     	endif
  7065   003372                     	if	0	;tblptru may be non-zero
  7066   003372                     	endif
  7067   003372  0008               	tblrd		*
  7068   003374  50F5               	movf	tablat,w,c
  7069   003376  0900               	iorlw	0
  7070   003378  A4D8               	btfss	status,2,c
  7071   00337A  EFC1  F019         	goto	i2u282_41
  7072   00337E  EFC3  F019         	goto	i2u282_40
  7073   003382                     i2u282_41:
  7074   003382  EFAC  F019         	goto	i2l3490
  7075   003386                     i2u282_40:
  7076   003386                     
  7077                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  7078   003386  0E00               	movlw	0
  7079   003388  6E17               	movwf	(?_vfprintf+1)^0,c
  7080   00338A  0E00               	movlw	0
  7081   00338C  6E16               	movwf	?_vfprintf^0,c
  7082   00338E  0012               	return		;funcret
  7083   003390                     __end_of_vfprintf:
  7084                           	callstack 0
  7085                           
  7086 ;; *************** function _vfpfcnvrt *****************
  7087 ;; Defined at:
  7088 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  7089 ;; Parameters:    Size  Location     Type
  7090 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  7091 ;;		 -> sprintf@f(12), 
  7092 ;;  fmt             1   11[COMRAM] PTR PTR unsigned char 
  7093 ;;		 -> vfprintf@cfmt(1), 
  7094 ;;  ap              1   12[COMRAM] PTR PTR void 
  7095 ;;		 -> sprintf@ap(1), 
  7096 ;; Auto vars:     Size  Location     Type
  7097 ;;  convarg         4   16[COMRAM] struct .
  7098 ;;  c               1   20[COMRAM] unsigned char 
  7099 ;;  cp              1   15[COMRAM] PTR unsigned char 
  7100 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  7101 ;;  done            1   14[COMRAM] _Bool 
  7102 ;; Return value:  Size  Location     Type
  7103 ;;                  1    wreg      void 
  7104 ;; Registers used:
  7105 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7106 ;; Tracked objects:
  7107 ;;		On entry : 0/0
  7108 ;;		On exit  : 0/0
  7109 ;;		Unchanged: 0/0
  7110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7111 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7112 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7113 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7114 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7115 ;;Total ram usage:       11 bytes
  7116 ;; Hardware stack levels used: 1
  7117 ;; Hardware stack levels required when called: 2
  7118 ;; This function calls:
  7119 ;;		___awdiv
  7120 ;;		___awmod
  7121 ;;		_abs
  7122 ;;		_fputc
  7123 ;; This function is called by:
  7124 ;;		_vfprintf
  7125 ;; This function uses a non-reentrant model
  7126 ;;
  7127                           
  7128                           	psect	text36
  7129   001D6E                     __ptext36:
  7130                           	callstack 0
  7131   001D6E                     _vfpfcnvrt:
  7132                           	callstack 16
  7133   001D6E                     
  7134                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  7135   001D6E  500C               	movf	vfpfcnvrt@fmt^0,w,c
  7136   001D70  6ED9               	movwf	fsr2l,c
  7137   001D72  6ADA               	clrf	fsr2h,c
  7138   001D74  CFDF FFF6          	movff	indf2,tblptrl
  7139   001D78                     	if	1	;There is more than 1 active tblptr byte
  7140   001D78  0E10               	movlw	high __smallconst
  7141   001D7A  6EF7               	movwf	tblptrh,c
  7142   001D7C                     	endif
  7143   001D7C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7144   001D7C  6AF8               	clrf	tblptru,c
  7145   001D7E                     	endif
  7146   001D7E                     	if	0	;tblptru may be non-zero
  7147   001D7E                     	endif
  7148   001D7E  0008               	tblrd		*
  7149   001D80  50F5               	movf	tablat,w,c
  7150   001D82  0A25               	xorlw	37
  7151   001D84  A4D8               	btfss	status,2,c
  7152   001D86  EFC7  F00E         	goto	i2u269_41
  7153   001D8A  EFC9  F00E         	goto	i2u269_40
  7154   001D8E                     i2u269_41:
  7155   001D8E  EF8A  F00F         	goto	i2l3446
  7156   001D92                     i2u269_40:
  7157   001D92                     
  7158                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  7159   001D92  500C               	movf	vfpfcnvrt@fmt^0,w,c
  7160   001D94  6ED9               	movwf	fsr2l,c
  7161   001D96  6ADA               	clrf	fsr2h,c
  7162   001D98  2ADF               	incf	indf2,f,c
  7163   001D9A                     
  7164                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  7165   001D9A  0E00               	movlw	0
  7166   001D9C  6E4F               	movwf	(_width+1)^0,c
  7167   001D9E  0E00               	movlw	0
  7168   001DA0  6E4E               	movwf	_width^0,c
  7169   001DA2  C04E  F05A         	movff	_width,_flags
  7170   001DA6                     
  7171                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  7172   001DA6  6850               	setf	_prec^0,c
  7173   001DA8  6851               	setf	(_prec+1)^0,c
  7174   001DAA                     
  7175                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  7176   001DAA  500C               	movf	vfpfcnvrt@fmt^0,w,c
  7177   001DAC  6ED9               	movwf	fsr2l,c
  7178   001DAE  6ADA               	clrf	fsr2h,c
  7179   001DB0  50DF               	movf	indf2,w,c
  7180   001DB2  6E10               	movwf	vfpfcnvrt@cp^0,c
  7181   001DB4                     
  7182                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  7183   001DB4  C010  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  7184   001DB8                     	if	1	;There is more than 1 active tblptr byte
  7185   001DB8  0E10               	movlw	high __smallconst
  7186   001DBA  6EF7               	movwf	tblptrh,c
  7187   001DBC                     	endif
  7188   001DBC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7189   001DBC  6AF8               	clrf	tblptru,c
  7190   001DBE                     	endif
  7191   001DBE                     	if	0	;tblptru may be non-zero
  7192   001DBE                     	endif
  7193   001DBE  0008               	tblrd		*
  7194   001DC0  50F5               	movf	tablat,w,c
  7195   001DC2  0A64               	xorlw	100
  7196   001DC4  B4D8               	btfsc	status,2,c
  7197   001DC6  EFE7  F00E         	goto	i2u270_41
  7198   001DCA  EFE9  F00E         	goto	i2u270_40
  7199   001DCE                     i2u270_41:
  7200   001DCE  EFF8  F00E         	goto	i2l3416
  7201   001DD2                     i2u270_40:
  7202   001DD2  C010  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  7203   001DD6                     	if	1	;There is more than 1 active tblptr byte
  7204   001DD6  0E10               	movlw	high __smallconst
  7205   001DD8  6EF7               	movwf	tblptrh,c
  7206   001DDA                     	endif
  7207   001DDA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7208   001DDA  6AF8               	clrf	tblptru,c
  7209   001DDC                     	endif
  7210   001DDC                     	if	0	;tblptru may be non-zero
  7211   001DDC                     	endif
  7212   001DDC  0008               	tblrd		*
  7213   001DDE  50F5               	movf	tablat,w,c
  7214   001DE0  0A69               	xorlw	105
  7215   001DE2  A4D8               	btfss	status,2,c
  7216   001DE4  EFF6  F00E         	goto	i2u271_41
  7217   001DE8  EFF8  F00E         	goto	i2u271_40
  7218   001DEC                     i2u271_41:
  7219   001DEC  EF84  F00F         	goto	i2l3442
  7220   001DF0                     i2u271_40:
  7221   001DF0                     i2l3416:
  7222                           
  7223                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  7224   001DF0  500D               	movf	vfpfcnvrt@ap^0,w,c
  7225   001DF2  6ED9               	movwf	fsr2l,c
  7226   001DF4  6ADA               	clrf	fsr2h,c
  7227   001DF6  0E02               	movlw	2
  7228   001DF8  26DF               	addwf	indf2,f,c
  7229   001DFA  5CDF               	subwf	indf2,w,c
  7230   001DFC  6ED9               	movwf	fsr2l,c
  7231   001DFE  6ADA               	clrf	fsr2h,c
  7232   001E00  CFDE F011          	movff	postinc2,vfpfcnvrt@convarg
  7233   001E04  CFDE F012          	movff	postinc2,vfpfcnvrt@convarg+1
  7234   001E08                     
  7235                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  7236   001E08  500C               	movf	vfpfcnvrt@fmt^0,w,c
  7237   001E0A  6ED9               	movwf	fsr2l,c
  7238   001E0C  6ADA               	clrf	fsr2h,c
  7239   001E0E  2810               	incf	vfpfcnvrt@cp^0,w,c
  7240   001E10  6EDF               	movwf	indf2,c
  7241   001E12                     
  7242                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  7243   001E12  0E20               	movlw	32
  7244   001E14  6E15               	movwf	vfpfcnvrt@c^0,c
  7245                           
  7246                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  7247   001E16  BE12               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  7248   001E18  EF10  F00F         	goto	i2u272_41
  7249   001E1C  EF13  F00F         	goto	i2u272_40
  7250   001E20                     i2u272_41:
  7251   001E20  0E01               	movlw	1
  7252   001E22  EF14  F00F         	goto	i2u273_40
  7253   001E26                     i2u272_40:
  7254   001E26  0E00               	movlw	0
  7255   001E28                     i2u273_40:
  7256   001E28  6E0F               	movwf	vfpfcnvrt@done^0,c
  7257   001E2A                     i2l3422:
  7258                           
  7259                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  7260   001E2A  0615               	decf	vfpfcnvrt@c^0,f,c
  7261   001E2C  0E00               	movlw	low _dbuf
  7262   001E2E  2415               	addwf	vfpfcnvrt@c^0,w,c
  7263   001E30  6ED9               	movwf	fsr2l,c
  7264   001E32  6ADA               	clrf	fsr2h,c
  7265   001E34  0E01               	movlw	high _dbuf
  7266   001E36  22DA               	addwfc	fsr2h,f,c
  7267   001E38  C011  F001         	movff	vfpfcnvrt@convarg,___awmod@dividend
  7268   001E3C  C012  F002         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  7269   001E40  0E00               	movlw	0
  7270   001E42  6E04               	movwf	(___awmod@divisor+1)^0,c
  7271   001E44  0E0A               	movlw	10
  7272   001E46  6E03               	movwf	___awmod@divisor^0,c
  7273   001E48  EC01  F015         	call	___awmod	;wreg free
  7274   001E4C  C001  F007         	movff	?___awmod,abs@a
  7275   001E50  C002  F008         	movff	?___awmod+1,abs@a+1
  7276   001E54  ECE2  F019         	call	_abs	;wreg free
  7277   001E58  5007               	movf	?_abs^0,w,c
  7278   001E5A  0F30               	addlw	48
  7279   001E5C  6EDF               	movwf	indf2,c
  7280   001E5E                     
  7281                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  7282   001E5E  C011  F001         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  7283   001E62  C012  F002         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  7284   001E66  0E00               	movlw	0
  7285   001E68  6E04               	movwf	(___awdiv@divisor+1)^0,c
  7286   001E6A  0E0A               	movlw	10
  7287   001E6C  6E03               	movwf	___awdiv@divisor^0,c
  7288   001E6E  EC9F  F014         	call	___awdiv	;wreg free
  7289   001E72  C001  F011         	movff	?___awdiv,vfpfcnvrt@convarg
  7290   001E76  C002  F012         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  7291   001E7A                     
  7292                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  7293   001E7A  5011               	movf	vfpfcnvrt@convarg^0,w,c
  7294   001E7C  1012               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  7295   001E7E  B4D8               	btfsc	status,2,c
  7296   001E80  EF44  F00F         	goto	i2u274_41
  7297   001E84  EF46  F00F         	goto	i2u274_40
  7298   001E88                     i2u274_41:
  7299   001E88  EF4E  F00F         	goto	i2l3430
  7300   001E8C                     i2u274_40:
  7301   001E8C  5015               	movf	vfpfcnvrt@c^0,w,c
  7302   001E8E  A4D8               	btfss	status,2,c
  7303   001E90  EF4C  F00F         	goto	i2u275_41
  7304   001E94  EF4E  F00F         	goto	i2u275_40
  7305   001E98                     i2u275_41:
  7306   001E98  EF15  F00F         	goto	i2l3422
  7307   001E9C                     i2u275_40:
  7308   001E9C                     i2l3430:
  7309                           
  7310                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  7311   001E9C  5015               	movf	vfpfcnvrt@c^0,w,c
  7312   001E9E  B4D8               	btfsc	status,2,c
  7313   001EA0  EF54  F00F         	goto	i2u276_41
  7314   001EA4  EF56  F00F         	goto	i2u276_40
  7315   001EA8                     i2u276_41:
  7316   001EA8  EF79  F00F         	goto	i2l3440
  7317   001EAC                     i2u276_40:
  7318   001EAC  500F               	movf	vfpfcnvrt@done^0,w,c
  7319   001EAE  B4D8               	btfsc	status,2,c
  7320   001EB0  EF5C  F00F         	goto	i2u277_41
  7321   001EB4  EF5E  F00F         	goto	i2u277_40
  7322   001EB8                     i2u277_41:
  7323   001EB8  EF79  F00F         	goto	i2l3440
  7324   001EBC                     i2u277_40:
  7325   001EBC                     
  7326                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  7327   001EBC  0615               	decf	vfpfcnvrt@c^0,f,c
  7328   001EBE  0E00               	movlw	low _dbuf
  7329   001EC0  2415               	addwf	vfpfcnvrt@c^0,w,c
  7330   001EC2  6ED9               	movwf	fsr2l,c
  7331   001EC4  6ADA               	clrf	fsr2h,c
  7332   001EC6  0E01               	movlw	high _dbuf
  7333   001EC8  22DA               	addwfc	fsr2h,f,c
  7334   001ECA  0E2D               	movlw	45
  7335   001ECC  6EDF               	movwf	indf2,c
  7336   001ECE  EF79  F00F         	goto	i2l3440
  7337   001ED2                     i2l3436:
  7338                           
  7339                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  7340   001ED2  0E00               	movlw	low _dbuf
  7341   001ED4  2415               	addwf	vfpfcnvrt@c^0,w,c
  7342   001ED6  6ED9               	movwf	fsr2l,c
  7343   001ED8  6ADA               	clrf	fsr2h,c
  7344   001EDA  0E01               	movlw	high _dbuf
  7345   001EDC  22DA               	addwfc	fsr2h,f,c
  7346   001EDE  50DF               	movf	indf2,w,c
  7347   001EE0  6E0E               	movwf	??_vfpfcnvrt^0,c
  7348   001EE2  500E               	movf	??_vfpfcnvrt^0,w,c
  7349   001EE4  6E01               	movwf	fputc@c^0,c
  7350   001EE6  6A02               	clrf	(fputc@c+1)^0,c
  7351   001EE8  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  7352   001EEC  EC59  F015         	call	_fputc	;wreg free
  7353   001EF0  2A15               	incf	vfpfcnvrt@c^0,f,c
  7354   001EF2                     i2l3440:
  7355                           
  7356                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  7357   001EF2  0E20               	movlw	32
  7358   001EF4  1815               	xorwf	vfpfcnvrt@c^0,w,c
  7359   001EF6  A4D8               	btfss	status,2,c
  7360   001EF8  EF80  F00F         	goto	i2u278_41
  7361   001EFC  EF82  F00F         	goto	i2u278_40
  7362   001F00                     i2u278_41:
  7363   001F00  EF69  F00F         	goto	i2l3436
  7364   001F04                     i2u278_40:
  7365   001F04  EF9C  F00F         	goto	i2l1392
  7366   001F08                     i2l3442:
  7367                           
  7368                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  7369   001F08  500C               	movf	vfpfcnvrt@fmt^0,w,c
  7370   001F0A  6ED9               	movwf	fsr2l,c
  7371   001F0C  6ADA               	clrf	fsr2h,c
  7372   001F0E  2ADF               	incf	indf2,f,c
  7373   001F10  EF9C  F00F         	goto	i2l1392
  7374   001F14                     i2l3446:
  7375                           
  7376                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  7377   001F14  500C               	movf	vfpfcnvrt@fmt^0,w,c
  7378   001F16  6ED9               	movwf	fsr2l,c
  7379   001F18  6ADA               	clrf	fsr2h,c
  7380   001F1A  CFDF FFF6          	movff	indf2,tblptrl
  7381   001F1E                     	if	1	;There is more than 1 active tblptr byte
  7382   001F1E  0E10               	movlw	high __smallconst
  7383   001F20  6EF7               	movwf	tblptrh,c
  7384   001F22                     	endif
  7385   001F22                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7386   001F22  6AF8               	clrf	tblptru,c
  7387   001F24                     	endif
  7388   001F24                     	if	0	;tblptru may be non-zero
  7389   001F24                     	endif
  7390   001F24  0008               	tblrd		*
  7391   001F26  50F5               	movf	tablat,w,c
  7392   001F28  6E01               	movwf	fputc@c^0,c
  7393   001F2A  6A02               	clrf	(fputc@c+1)^0,c
  7394   001F2C  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  7395   001F30  EC59  F015         	call	_fputc	;wreg free
  7396   001F34  EF84  F00F         	goto	i2l3442
  7397   001F38                     i2l1392:
  7398   001F38  0012               	return		;funcret
  7399   001F3A                     __end_of_vfpfcnvrt:
  7400                           	callstack 0
  7401                           
  7402 ;; *************** function _fputc *****************
  7403 ;; Defined at:
  7404 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  7405 ;; Parameters:    Size  Location     Type
  7406 ;;  c               2    0[COMRAM] int 
  7407 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  7408 ;;		 -> sprintf@f(12), 
  7409 ;; Auto vars:     Size  Location     Type
  7410 ;;		None
  7411 ;; Return value:  Size  Location     Type
  7412 ;;                  2    0[COMRAM] int 
  7413 ;; Registers used:
  7414 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7415 ;; Tracked objects:
  7416 ;;		On entry : 0/0
  7417 ;;		On exit  : 0/0
  7418 ;;		Unchanged: 0/0
  7419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7420 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7422 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7423 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7424 ;;Total ram usage:        8 bytes
  7425 ;; Hardware stack levels used: 1
  7426 ;; Hardware stack levels required when called: 1
  7427 ;; This function calls:
  7428 ;;		_putch
  7429 ;; This function is called by:
  7430 ;;		_vfpfcnvrt
  7431 ;; This function uses a non-reentrant model
  7432 ;;
  7433                           
  7434                           	psect	text37
  7435   002AB2                     __ptext37:
  7436                           	callstack 0
  7437   002AB2                     _fputc:
  7438                           	callstack 16
  7439   002AB2  5003               	movf	fputc@fp^0,w,c
  7440   002AB4  B4D8               	btfsc	status,2,c
  7441   002AB6  EF5F  F015         	goto	i2u258_41
  7442   002ABA  EF61  F015         	goto	i2u258_40
  7443   002ABE                     i2u258_41:
  7444   002ABE  EF69  F015         	goto	i2l3360
  7445   002AC2                     i2u258_40:
  7446   002AC2  5003               	movf	fputc@fp^0,w,c
  7447   002AC4  A4D8               	btfss	status,2,c
  7448   002AC6  EF67  F015         	goto	i2u259_41
  7449   002ACA  EF69  F015         	goto	i2u259_40
  7450   002ACE                     i2u259_41:
  7451   002ACE  EF6E  F015         	goto	i2l3362
  7452   002AD2                     i2u259_40:
  7453   002AD2                     i2l3360:
  7454   002AD2  5001               	movf	fputc@c^0,w,c
  7455   002AD4  EC92  F01A         	call	_putch
  7456   002AD8  EFAD  F015         	goto	i2l1417
  7457   002ADC                     i2l3362:
  7458   002ADC  5003               	movf	fputc@fp^0,w,c
  7459   002ADE  6ED9               	movwf	fsr2l,c
  7460   002AE0  6ADA               	clrf	fsr2h,c
  7461   002AE2  0E0A               	movlw	10
  7462   002AE4  26D9               	addwf	fsr2l,f,c
  7463   002AE6  50DE               	movf	postinc2,w,c
  7464   002AE8  10DE               	iorwf	postinc2,w,c
  7465   002AEA  B4D8               	btfsc	status,2,c
  7466   002AEC  EF7A  F015         	goto	i2u260_41
  7467   002AF0  EF7C  F015         	goto	i2u260_40
  7468   002AF4                     i2u260_41:
  7469   002AF4  EF95  F015         	goto	i2l3366
  7470   002AF8                     i2u260_40:
  7471   002AF8  5003               	movf	fputc@fp^0,w,c
  7472   002AFA  6ED9               	movwf	fsr2l,c
  7473   002AFC  6ADA               	clrf	fsr2h,c
  7474   002AFE  0E0A               	movlw	10
  7475   002B00  26D9               	addwf	fsr2l,f,c
  7476   002B02  5003               	movf	fputc@fp^0,w,c
  7477   002B04  6EE1               	movwf	fsr1l,c
  7478   002B06  6AE2               	clrf	fsr1h,c
  7479   002B08  0E03               	movlw	3
  7480   002B0A  26E1               	addwf	fsr1l,f,c
  7481   002B0C  50DE               	movf	postinc2,w,c
  7482   002B0E  5CE6               	subwf	postinc1,w,c
  7483   002B10  50E6               	movf	postinc1,w,c
  7484   002B12  0A80               	xorlw	128
  7485   002B14  6E08               	movwf	(??_fputc+4)^0,c
  7486   002B16  50DE               	movf	postinc2,w,c
  7487   002B18  0A80               	xorlw	128
  7488   002B1A  5808               	subwfb	(??_fputc+4)^0,w,c
  7489   002B1C  B0D8               	btfsc	status,0,c
  7490   002B1E  EF93  F015         	goto	i2u261_41
  7491   002B22  EF95  F015         	goto	i2u261_40
  7492   002B26                     i2u261_41:
  7493   002B26  EFAD  F015         	goto	i2l1417
  7494   002B2A                     i2u261_40:
  7495   002B2A                     i2l3366:
  7496   002B2A  5003               	movf	fputc@fp^0,w,c
  7497   002B2C  6ED9               	movwf	fsr2l,c
  7498   002B2E  6ADA               	clrf	fsr2h,c
  7499   002B30  0E03               	movlw	3
  7500   002B32  26D9               	addwf	fsr2l,f,c
  7501   002B34  50DF               	movf	indf2,w,c
  7502   002B36  6E04               	movwf	??_fputc^0,c
  7503   002B38  5003               	movf	fputc@fp^0,w,c
  7504   002B3A  6ED9               	movwf	fsr2l,c
  7505   002B3C  6ADA               	clrf	fsr2h,c
  7506   002B3E  50DF               	movf	indf2,w,c
  7507   002B40  2404               	addwf	??_fputc^0,w,c
  7508   002B42  6ED9               	movwf	fsr2l,c
  7509   002B44  6ADA               	clrf	fsr2h,c
  7510   002B46  C001  FFDF         	movff	fputc@c,indf2
  7511   002B4A  5003               	movf	fputc@fp^0,w,c
  7512   002B4C  6ED9               	movwf	fsr2l,c
  7513   002B4E  6ADA               	clrf	fsr2h,c
  7514   002B50  0E03               	movlw	3
  7515   002B52  26D9               	addwf	fsr2l,f,c
  7516   002B54  2ADE               	incf	postinc2,f,c
  7517   002B56  0E00               	movlw	0
  7518   002B58  22DD               	addwfc	postdec2,f,c
  7519   002B5A                     i2l1417:
  7520   002B5A  0012               	return		;funcret
  7521   002B5C                     __end_of_fputc:
  7522                           	callstack 0
  7523                           
  7524 ;; *************** function _putch *****************
  7525 ;; Defined at:
  7526 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  7527 ;; Parameters:    Size  Location     Type
  7528 ;;  c               1    wreg     unsigned char 
  7529 ;; Auto vars:     Size  Location     Type
  7530 ;;  c               1    0[COMRAM] unsigned char 
  7531 ;; Return value:  Size  Location     Type
  7532 ;;                  1    wreg      void 
  7533 ;; Registers used:
  7534 ;;		wreg
  7535 ;; Tracked objects:
  7536 ;;		On entry : 0/0
  7537 ;;		On exit  : 0/0
  7538 ;;		Unchanged: 0/0
  7539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7544 ;;Total ram usage:        0 bytes
  7545 ;; Hardware stack levels used: 1
  7546 ;; This function calls:
  7547 ;;		Nothing
  7548 ;; This function is called by:
  7549 ;;		_fputc
  7550 ;; This function uses a non-reentrant model
  7551 ;;
  7552                           
  7553                           	psect	text38
  7554   003524                     __ptext38:
  7555                           	callstack 0
  7556   003524                     _putch:
  7557                           	callstack 16
  7558   003524  0012               	return		;funcret
  7559   003526                     __end_of_putch:
  7560                           	callstack 0
  7561                           
  7562 ;; *************** function _abs *****************
  7563 ;; Defined at:
  7564 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  7565 ;; Parameters:    Size  Location     Type
  7566 ;;  a               2    6[COMRAM] int 
  7567 ;; Auto vars:     Size  Location     Type
  7568 ;;		None
  7569 ;; Return value:  Size  Location     Type
  7570 ;;                  2    6[COMRAM] int 
  7571 ;; Registers used:
  7572 ;;		wreg, status,2, status,0
  7573 ;; Tracked objects:
  7574 ;;		On entry : 0/0
  7575 ;;		On exit  : 0/0
  7576 ;;		Unchanged: 0/0
  7577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7578 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7580 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7581 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7582 ;;Total ram usage:        4 bytes
  7583 ;; Hardware stack levels used: 1
  7584 ;; This function calls:
  7585 ;;		Nothing
  7586 ;; This function is called by:
  7587 ;;		_vfpfcnvrt
  7588 ;; This function uses a non-reentrant model
  7589 ;;
  7590                           
  7591                           	psect	text39
  7592   0033C4                     __ptext39:
  7593                           	callstack 0
  7594   0033C4                     _abs:
  7595                           	callstack 17
  7596   0033C4  BE08               	btfsc	(abs@a+1)^0,7,c
  7597   0033C6  EFE7  F019         	goto	i2u262_41
  7598   0033CA  EFE9  F019         	goto	i2u262_40
  7599   0033CE                     i2u262_41:
  7600   0033CE  EFEF  F019         	goto	i2l1402
  7601   0033D2                     i2u262_40:
  7602   0033D2  C007  F007         	movff	abs@a,?_abs
  7603   0033D6  C008  F008         	movff	abs@a+1,?_abs+1
  7604   0033DA  EFFB  F019         	goto	i2l1405
  7605   0033DE                     i2l1402:
  7606   0033DE  C007  F009         	movff	abs@a,??_abs
  7607   0033E2  C008  F00A         	movff	abs@a+1,??_abs+1
  7608   0033E6  1E09               	comf	??_abs^0,f,c
  7609   0033E8  1E0A               	comf	(??_abs+1)^0,f,c
  7610   0033EA  4A09               	infsnz	??_abs^0,f,c
  7611   0033EC  2A0A               	incf	(??_abs+1)^0,f,c
  7612   0033EE  C009  F007         	movff	??_abs,?_abs
  7613   0033F2  C00A  F008         	movff	??_abs+1,?_abs+1
  7614   0033F6                     i2l1405:
  7615   0033F6  0012               	return		;funcret
  7616   0033F8                     __end_of_abs:
  7617                           	callstack 0
  7618                           
  7619 ;; *************** function ___awmod *****************
  7620 ;; Defined at:
  7621 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  7622 ;; Parameters:    Size  Location     Type
  7623 ;;  dividend        2    0[COMRAM] int 
  7624 ;;  divisor         2    2[COMRAM] int 
  7625 ;; Auto vars:     Size  Location     Type
  7626 ;;  sign            1    5[COMRAM] unsigned char 
  7627 ;;  counter         1    4[COMRAM] unsigned char 
  7628 ;; Return value:  Size  Location     Type
  7629 ;;                  2    0[COMRAM] int 
  7630 ;; Registers used:
  7631 ;;		wreg, status,2, status,0
  7632 ;; Tracked objects:
  7633 ;;		On entry : 0/0
  7634 ;;		On exit  : 0/0
  7635 ;;		Unchanged: 0/0
  7636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7637 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7638 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7640 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7641 ;;Total ram usage:        6 bytes
  7642 ;; Hardware stack levels used: 1
  7643 ;; This function calls:
  7644 ;;		Nothing
  7645 ;; This function is called by:
  7646 ;;		_vfpfcnvrt
  7647 ;; This function uses a non-reentrant model
  7648 ;;
  7649                           
  7650                           	psect	text40
  7651   002A02                     __ptext40:
  7652                           	callstack 0
  7653   002A02                     ___awmod:
  7654                           	callstack 17
  7655   002A02  0E00               	movlw	0
  7656   002A04  6E06               	movwf	___awmod@sign^0,c
  7657   002A06  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  7658   002A08  EF0A  F015         	goto	i2u252_40
  7659   002A0C  EF08  F015         	goto	i2u252_41
  7660   002A10                     i2u252_41:
  7661   002A10  EF10  F015         	goto	i2l3328
  7662   002A14                     i2u252_40:
  7663   002A14  6C01               	negf	___awmod@dividend^0,c
  7664   002A16  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7665   002A18  B0D8               	btfsc	status,0,c
  7666   002A1A  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7667   002A1C  0E01               	movlw	1
  7668   002A1E  6E06               	movwf	___awmod@sign^0,c
  7669   002A20                     i2l3328:
  7670   002A20  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  7671   002A22  EF17  F015         	goto	i2u253_40
  7672   002A26  EF15  F015         	goto	i2u253_41
  7673   002A2A                     i2u253_41:
  7674   002A2A  EF1B  F015         	goto	i2l3332
  7675   002A2E                     i2u253_40:
  7676   002A2E  6C03               	negf	___awmod@divisor^0,c
  7677   002A30  1E04               	comf	(___awmod@divisor+1)^0,f,c
  7678   002A32  B0D8               	btfsc	status,0,c
  7679   002A34  2A04               	incf	(___awmod@divisor+1)^0,f,c
  7680   002A36                     i2l3332:
  7681   002A36  5003               	movf	___awmod@divisor^0,w,c
  7682   002A38  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  7683   002A3A  B4D8               	btfsc	status,2,c
  7684   002A3C  EF22  F015         	goto	i2u254_41
  7685   002A40  EF24  F015         	goto	i2u254_40
  7686   002A44                     i2u254_41:
  7687   002A44  EF48  F015         	goto	i2l3348
  7688   002A48                     i2u254_40:
  7689   002A48  0E01               	movlw	1
  7690   002A4A  6E05               	movwf	___awmod@counter^0,c
  7691   002A4C  EF2C  F015         	goto	i2l3338
  7692   002A50                     i2l3336:
  7693   002A50  90D8               	bcf	status,0,c
  7694   002A52  3603               	rlcf	___awmod@divisor^0,f,c
  7695   002A54  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  7696   002A56  2A05               	incf	___awmod@counter^0,f,c
  7697   002A58                     i2l3338:
  7698   002A58  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  7699   002A5A  EF31  F015         	goto	i2u255_41
  7700   002A5E  EF33  F015         	goto	i2u255_40
  7701   002A62                     i2u255_41:
  7702   002A62  EF28  F015         	goto	i2l3336
  7703   002A66                     i2u255_40:
  7704   002A66                     i2l3340:
  7705   002A66  5003               	movf	___awmod@divisor^0,w,c
  7706   002A68  5C01               	subwf	___awmod@dividend^0,w,c
  7707   002A6A  5004               	movf	(___awmod@divisor+1)^0,w,c
  7708   002A6C  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  7709   002A6E  A0D8               	btfss	status,0,c
  7710   002A70  EF3C  F015         	goto	i2u256_41
  7711   002A74  EF3E  F015         	goto	i2u256_40
  7712   002A78                     i2u256_41:
  7713   002A78  EF42  F015         	goto	i2l3344
  7714   002A7C                     i2u256_40:
  7715   002A7C  5003               	movf	___awmod@divisor^0,w,c
  7716   002A7E  5E01               	subwf	___awmod@dividend^0,f,c
  7717   002A80  5004               	movf	(___awmod@divisor+1)^0,w,c
  7718   002A82  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  7719   002A84                     i2l3344:
  7720   002A84  90D8               	bcf	status,0,c
  7721   002A86  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  7722   002A88  3203               	rrcf	___awmod@divisor^0,f,c
  7723   002A8A  2E05               	decfsz	___awmod@counter^0,f,c
  7724   002A8C  EF33  F015         	goto	i2l3340
  7725   002A90                     i2l3348:
  7726   002A90  5006               	movf	___awmod@sign^0,w,c
  7727   002A92  B4D8               	btfsc	status,2,c
  7728   002A94  EF4E  F015         	goto	i2u257_41
  7729   002A98  EF50  F015         	goto	i2u257_40
  7730   002A9C                     i2u257_41:
  7731   002A9C  EF54  F015         	goto	i2l3352
  7732   002AA0                     i2u257_40:
  7733   002AA0  6C01               	negf	___awmod@dividend^0,c
  7734   002AA2  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7735   002AA4  B0D8               	btfsc	status,0,c
  7736   002AA6  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7737   002AA8                     i2l3352:
  7738   002AA8  C001  F001         	movff	___awmod@dividend,?___awmod
  7739   002AAC  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  7740   002AB0  0012               	return		;funcret
  7741   002AB2                     __end_of___awmod:
  7742                           	callstack 0
  7743                           
  7744 ;; *************** function ___awdiv *****************
  7745 ;; Defined at:
  7746 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  7747 ;; Parameters:    Size  Location     Type
  7748 ;;  dividend        2    0[COMRAM] int 
  7749 ;;  divisor         2    2[COMRAM] int 
  7750 ;; Auto vars:     Size  Location     Type
  7751 ;;  quotient        2    6[COMRAM] int 
  7752 ;;  sign            1    5[COMRAM] unsigned char 
  7753 ;;  counter         1    4[COMRAM] unsigned char 
  7754 ;; Return value:  Size  Location     Type
  7755 ;;                  2    0[COMRAM] int 
  7756 ;; Registers used:
  7757 ;;		wreg, status,2, status,0
  7758 ;; Tracked objects:
  7759 ;;		On entry : 0/0
  7760 ;;		On exit  : 0/0
  7761 ;;		Unchanged: 0/0
  7762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7763 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7764 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7766 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7767 ;;Total ram usage:        8 bytes
  7768 ;; Hardware stack levels used: 1
  7769 ;; This function calls:
  7770 ;;		Nothing
  7771 ;; This function is called by:
  7772 ;;		_vfpfcnvrt
  7773 ;; This function uses a non-reentrant model
  7774 ;;
  7775                           
  7776                           	psect	text41
  7777   00293E                     __ptext41:
  7778                           	callstack 0
  7779   00293E                     ___awdiv:
  7780                           	callstack 17
  7781   00293E  0E00               	movlw	0
  7782   002940  6E06               	movwf	___awdiv@sign^0,c
  7783   002942  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  7784   002944  EFA8  F014         	goto	i2u246_40
  7785   002948  EFA6  F014         	goto	i2u246_41
  7786   00294C                     i2u246_41:
  7787   00294C  EFAE  F014         	goto	i2l3284
  7788   002950                     i2u246_40:
  7789   002950  6C03               	negf	___awdiv@divisor^0,c
  7790   002952  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  7791   002954  B0D8               	btfsc	status,0,c
  7792   002956  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  7793   002958  0E01               	movlw	1
  7794   00295A  6E06               	movwf	___awdiv@sign^0,c
  7795   00295C                     i2l3284:
  7796   00295C  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  7797   00295E  EFB5  F014         	goto	i2u247_40
  7798   002962  EFB3  F014         	goto	i2u247_41
  7799   002966                     i2u247_41:
  7800   002966  EFBB  F014         	goto	i2l3290
  7801   00296A                     i2u247_40:
  7802   00296A  6C01               	negf	___awdiv@dividend^0,c
  7803   00296C  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  7804   00296E  B0D8               	btfsc	status,0,c
  7805   002970  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  7806   002972  0E01               	movlw	1
  7807   002974  1A06               	xorwf	___awdiv@sign^0,f,c
  7808   002976                     i2l3290:
  7809   002976  0E00               	movlw	0
  7810   002978  6E08               	movwf	(___awdiv@quotient+1)^0,c
  7811   00297A  0E00               	movlw	0
  7812   00297C  6E07               	movwf	___awdiv@quotient^0,c
  7813   00297E  5003               	movf	___awdiv@divisor^0,w,c
  7814   002980  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  7815   002982  B4D8               	btfsc	status,2,c
  7816   002984  EFC6  F014         	goto	i2u248_41
  7817   002988  EFC8  F014         	goto	i2u248_40
  7818   00298C                     i2u248_41:
  7819   00298C  EFF0  F014         	goto	i2l3312
  7820   002990                     i2u248_40:
  7821   002990  0E01               	movlw	1
  7822   002992  6E05               	movwf	___awdiv@counter^0,c
  7823   002994  EFD0  F014         	goto	i2l3298
  7824   002998                     i2l3296:
  7825   002998  90D8               	bcf	status,0,c
  7826   00299A  3603               	rlcf	___awdiv@divisor^0,f,c
  7827   00299C  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  7828   00299E  2A05               	incf	___awdiv@counter^0,f,c
  7829   0029A0                     i2l3298:
  7830   0029A0  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  7831   0029A2  EFD5  F014         	goto	i2u249_41
  7832   0029A6  EFD7  F014         	goto	i2u249_40
  7833   0029AA                     i2u249_41:
  7834   0029AA  EFCC  F014         	goto	i2l3296
  7835   0029AE                     i2u249_40:
  7836   0029AE                     i2l3300:
  7837   0029AE  90D8               	bcf	status,0,c
  7838   0029B0  3607               	rlcf	___awdiv@quotient^0,f,c
  7839   0029B2  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  7840   0029B4  5003               	movf	___awdiv@divisor^0,w,c
  7841   0029B6  5C01               	subwf	___awdiv@dividend^0,w,c
  7842   0029B8  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7843   0029BA  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  7844   0029BC  A0D8               	btfss	status,0,c
  7845   0029BE  EFE3  F014         	goto	i2u250_41
  7846   0029C2  EFE5  F014         	goto	i2u250_40
  7847   0029C6                     i2u250_41:
  7848   0029C6  EFEA  F014         	goto	i2l3308
  7849   0029CA                     i2u250_40:
  7850   0029CA  5003               	movf	___awdiv@divisor^0,w,c
  7851   0029CC  5E01               	subwf	___awdiv@dividend^0,f,c
  7852   0029CE  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7853   0029D0  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  7854   0029D2  8007               	bsf	___awdiv@quotient^0,0,c
  7855   0029D4                     i2l3308:
  7856   0029D4  90D8               	bcf	status,0,c
  7857   0029D6  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  7858   0029D8  3203               	rrcf	___awdiv@divisor^0,f,c
  7859   0029DA  2E05               	decfsz	___awdiv@counter^0,f,c
  7860   0029DC  EFD7  F014         	goto	i2l3300
  7861   0029E0                     i2l3312:
  7862   0029E0  5006               	movf	___awdiv@sign^0,w,c
  7863   0029E2  B4D8               	btfsc	status,2,c
  7864   0029E4  EFF6  F014         	goto	i2u251_41
  7865   0029E8  EFF8  F014         	goto	i2u251_40
  7866   0029EC                     i2u251_41:
  7867   0029EC  EFFC  F014         	goto	i2l3316
  7868   0029F0                     i2u251_40:
  7869   0029F0  6C07               	negf	___awdiv@quotient^0,c
  7870   0029F2  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  7871   0029F4  B0D8               	btfsc	status,0,c
  7872   0029F6  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  7873   0029F8                     i2l3316:
  7874   0029F8  C007  F001         	movff	___awdiv@quotient,?___awdiv
  7875   0029FC  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  7876   002A00  0012               	return		;funcret
  7877   002A02                     __end_of___awdiv:
  7878                           	callstack 0
  7879                           
  7880 ;; *************** function _memset *****************
  7881 ;; Defined at:
  7882 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\memset.c"
  7883 ;; Parameters:    Size  Location     Type
  7884 ;;  dest            1    0[COMRAM] PTR void 
  7885 ;;		 -> lcd_send_number_pos@number(1), lcd_send_number@number(1), 
  7886 ;;  c               2    1[COMRAM] int 
  7887 ;;  n               2    3[COMRAM] unsigned int 
  7888 ;; Auto vars:     Size  Location     Type
  7889 ;;  p               1    5[COMRAM] PTR unsigned char 
  7890 ;;		 -> lcd_send_number_pos@number(1), lcd_send_number@number(1), 
  7891 ;; Return value:  Size  Location     Type
  7892 ;;                  1    wreg      PTR void 
  7893 ;; Registers used:
  7894 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7895 ;; Tracked objects:
  7896 ;;		On entry : 0/0
  7897 ;;		On exit  : 0/0
  7898 ;;		Unchanged: 0/0
  7899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7900 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7901 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7903 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7904 ;;Total ram usage:        6 bytes
  7905 ;; Hardware stack levels used: 1
  7906 ;; This function calls:
  7907 ;;		Nothing
  7908 ;; This function is called by:
  7909 ;;		_convert_uint16_to_string
  7910 ;;		_convert_uint8_to_string
  7911 ;;		_convert_uint32_to_string
  7912 ;; This function uses a non-reentrant model
  7913 ;;
  7914                           
  7915                           	psect	text42
  7916   003428                     __ptext42:
  7917                           	callstack 0
  7918   003428                     _memset:
  7919                           	callstack 20
  7920   003428  C001  F006         	movff	memset@dest,memset@p
  7921   00342C  EF1E  F01A         	goto	i2l3586
  7922   003430                     i2l3582:
  7923   003430  5006               	movf	memset@p^0,w,c
  7924   003432  6ED9               	movwf	fsr2l,c
  7925   003434  6ADA               	clrf	fsr2h,c
  7926   003436  C002  FFDF         	movff	memset@c,indf2
  7927   00343A  2A06               	incf	memset@p^0,f,c
  7928   00343C                     i2l3586:
  7929   00343C  0604               	decf	memset@n^0,f,c
  7930   00343E  A0D8               	btfss	status,0,c
  7931   003440  0605               	decf	(memset@n+1)^0,f,c
  7932   003442  2804               	incf	memset@n^0,w,c
  7933   003444  E106               	bnz	i2u293_41
  7934   003446  2805               	incf	(memset@n+1)^0,w,c
  7935   003448  A4D8               	btfss	status,2,c
  7936   00344A  EF29  F01A         	goto	i2u293_41
  7937   00344E  EF2B  F01A         	goto	i2u293_40
  7938   003452                     i2u293_41:
  7939   003452  EF18  F01A         	goto	i2l3582
  7940   003456                     i2u293_40:
  7941   003456  0012               	return		;funcret
  7942   003458                     __end_of_memset:
  7943                           	callstack 0
  7944                           
  7945 ;; *************** function _dc_motor_stop *****************
  7946 ;; Defined at:
  7947 ;;		line 91 in file "ECUAL/DC_MOTOR/dc_motor.c"
  7948 ;; Parameters:    Size  Location     Type
  7949 ;;  dc_motor        1    8[COMRAM] PTR struct .
  7950 ;;		 -> heater(3), air_conditioners(3), 
  7951 ;; Auto vars:     Size  Location     Type
  7952 ;;  ret             1   10[COMRAM] unsigned char 
  7953 ;;  gpio_ret        1    9[COMRAM] unsigned char 
  7954 ;; Return value:  Size  Location     Type
  7955 ;;                  1    wreg      unsigned char 
  7956 ;; Registers used:
  7957 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7958 ;; Tracked objects:
  7959 ;;		On entry : 0/0
  7960 ;;		On exit  : 0/0
  7961 ;;		Unchanged: 0/0
  7962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7963 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7964 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7966 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7967 ;;Total ram usage:        3 bytes
  7968 ;; Hardware stack levels used: 1
  7969 ;; Hardware stack levels required when called: 1
  7970 ;; This function calls:
  7971 ;;		i2_gpio_pin_logic_write
  7972 ;; This function is called by:
  7973 ;;		_MY_EUSART_RX_ISR
  7974 ;; This function uses a non-reentrant model
  7975 ;;
  7976                           
  7977                           	psect	text43
  7978   0031A2                     __ptext43:
  7979                           	callstack 0
  7980   0031A2                     _dc_motor_stop:
  7981                           	callstack 21
  7982   0031A2                     
  7983                           ;ECUAL/DC_MOTOR/dc_motor.c: 94:     Std_ReturnType gpio_ret=(Std_ReturnType)0x00;
  7984   0031A2  0E00               	movlw	0
  7985   0031A4  6E0A               	movwf	dc_motor_stop@gpio_ret^0,c
  7986                           
  7987                           ;ECUAL/DC_MOTOR/dc_motor.c: 95:     if(((void*)0)==dc_motor){
  7988   0031A6  5009               	movf	dc_motor_stop@dc_motor^0,w,c
  7989   0031A8  A4D8               	btfss	status,2,c
  7990   0031AA  EFD9  F018         	goto	i2u495_41
  7991   0031AE  EFDB  F018         	goto	i2u495_40
  7992   0031B2                     i2u495_41:
  7993   0031B2  EFDF  F018         	goto	i2l5104
  7994   0031B6                     i2u495_40:
  7995   0031B6                     
  7996                           ;ECUAL/DC_MOTOR/dc_motor.c: 96:         ret=(Std_ReturnType)0x00;
  7997   0031B6  0E00               	movlw	0
  7998   0031B8  6E0B               	movwf	dc_motor_stop@ret^0,c
  7999                           
  8000                           ;ECUAL/DC_MOTOR/dc_motor.c: 97:     }
  8001   0031BA  EFF5  F018         	goto	i2l5110
  8002   0031BE                     i2l5104:
  8003                           
  8004                           ;ECUAL/DC_MOTOR/dc_motor.c: 99:         gpio_ret =gpio_pin_logic_write(&(dc_motor->dc_mo
      +                          tor_pin0),LOW);
  8005   0031BE  C009  F001         	movff	dc_motor_stop@dc_motor,i2gpio_pin_logic_write@pin
  8006   0031C2  0E00               	movlw	0
  8007   0031C4  6E02               	movwf	i2gpio_pin_logic_write@pin_logic^0,c
  8008   0031C6  ECB5  F011         	call	i2_gpio_pin_logic_write	;wreg free
  8009   0031CA  6E0A               	movwf	dc_motor_stop@gpio_ret^0,c
  8010                           
  8011                           ;ECUAL/DC_MOTOR/dc_motor.c: 100:         gpio_ret =gpio_pin_logic_write(&(dc_motor->dc_m
      +                          otor_pin1),LOW);
  8012   0031CC  2809               	incf	dc_motor_stop@dc_motor^0,w,c
  8013   0031CE  6E01               	movwf	i2gpio_pin_logic_write@pin^0,c
  8014   0031D0  0E00               	movlw	0
  8015   0031D2  6E02               	movwf	i2gpio_pin_logic_write@pin_logic^0,c
  8016   0031D4  ECB5  F011         	call	i2_gpio_pin_logic_write	;wreg free
  8017   0031D8  6E0A               	movwf	dc_motor_stop@gpio_ret^0,c
  8018   0031DA                     
  8019                           ;ECUAL/DC_MOTOR/dc_motor.c: 101:         dc_motor->dc_motor_state=DC_MOTOR_OFF;
  8020   0031DA  5009               	movf	dc_motor_stop@dc_motor^0,w,c
  8021   0031DC  6ED9               	movwf	fsr2l,c
  8022   0031DE  6ADA               	clrf	fsr2h,c
  8023   0031E0  0E02               	movlw	2
  8024   0031E2  26D9               	addwf	fsr2l,f,c
  8025   0031E4  6ADF               	clrf	indf2,c
  8026   0031E6                     
  8027                           ;ECUAL/DC_MOTOR/dc_motor.c: 102:         ret=(Std_ReturnType)0x01;
  8028   0031E6  0E01               	movlw	1
  8029   0031E8  6E0B               	movwf	dc_motor_stop@ret^0,c
  8030   0031EA                     i2l5110:
  8031                           
  8032                           ;ECUAL/DC_MOTOR/dc_motor.c: 105:     return ret;
  8033   0031EA  500B               	movf	dc_motor_stop@ret^0,w,c
  8034   0031EC  0012               	return		;funcret
  8035   0031EE                     __end_of_dc_motor_stop:
  8036                           	callstack 0
  8037                           
  8038 ;; *************** function _dc_motor_move_right *****************
  8039 ;; Defined at:
  8040 ;;		line 41 in file "ECUAL/DC_MOTOR/dc_motor.c"
  8041 ;; Parameters:    Size  Location     Type
  8042 ;;  dc_motor        1    8[COMRAM] PTR struct .
  8043 ;;		 -> heater(3), air_conditioners(3), 
  8044 ;; Auto vars:     Size  Location     Type
  8045 ;;  ret             1   10[COMRAM] unsigned char 
  8046 ;;  gpio_ret        1    9[COMRAM] unsigned char 
  8047 ;; Return value:  Size  Location     Type
  8048 ;;                  1    wreg      unsigned char 
  8049 ;; Registers used:
  8050 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8051 ;; Tracked objects:
  8052 ;;		On entry : 0/0
  8053 ;;		On exit  : 0/0
  8054 ;;		Unchanged: 0/0
  8055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8056 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8057 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8059 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8060 ;;Total ram usage:        3 bytes
  8061 ;; Hardware stack levels used: 1
  8062 ;; Hardware stack levels required when called: 1
  8063 ;; This function calls:
  8064 ;;		i2_gpio_pin_logic_write
  8065 ;; This function is called by:
  8066 ;;		_MY_EUSART_RX_ISR
  8067 ;; This function uses a non-reentrant model
  8068 ;;
  8069                           
  8070                           	psect	text44
  8071   003154                     __ptext44:
  8072                           	callstack 0
  8073   003154                     _dc_motor_move_right:
  8074                           	callstack 21
  8075   003154                     
  8076                           ;ECUAL/DC_MOTOR/dc_motor.c: 44:     Std_ReturnType gpio_ret=(Std_ReturnType)0x00;
  8077   003154  0E00               	movlw	0
  8078   003156  6E0A               	movwf	dc_motor_move_right@gpio_ret^0,c
  8079                           
  8080                           ;ECUAL/DC_MOTOR/dc_motor.c: 45:     if(((void*)0)==dc_motor){
  8081   003158  5009               	movf	dc_motor_move_right@dc_motor^0,w,c
  8082   00315A  A4D8               	btfss	status,2,c
  8083   00315C  EFB2  F018         	goto	i2u494_41
  8084   003160  EFB4  F018         	goto	i2u494_40
  8085   003164                     i2u494_41:
  8086   003164  EFB8  F018         	goto	i2l5090
  8087   003168                     i2u494_40:
  8088   003168                     
  8089                           ;ECUAL/DC_MOTOR/dc_motor.c: 46:         ret=(Std_ReturnType)0x00;
  8090   003168  0E00               	movlw	0
  8091   00316A  6E0B               	movwf	dc_motor_move_right@ret^0,c
  8092                           
  8093                           ;ECUAL/DC_MOTOR/dc_motor.c: 47:     }
  8094   00316C  EFCF  F018         	goto	i2l5096
  8095   003170                     i2l5090:
  8096                           
  8097                           ;ECUAL/DC_MOTOR/dc_motor.c: 49:         gpio_ret =gpio_pin_logic_write(&(dc_motor->dc_mo
      +                          tor_pin0),HIGH);
  8098   003170  C009  F001         	movff	dc_motor_move_right@dc_motor,i2gpio_pin_logic_write@pin
  8099   003174  0E01               	movlw	1
  8100   003176  6E02               	movwf	i2gpio_pin_logic_write@pin_logic^0,c
  8101   003178  ECB5  F011         	call	i2_gpio_pin_logic_write	;wreg free
  8102   00317C  6E0A               	movwf	dc_motor_move_right@gpio_ret^0,c
  8103                           
  8104                           ;ECUAL/DC_MOTOR/dc_motor.c: 50:         gpio_ret =gpio_pin_logic_write(&(dc_motor->dc_mo
      +                          tor_pin1),LOW);
  8105   00317E  2809               	incf	dc_motor_move_right@dc_motor^0,w,c
  8106   003180  6E01               	movwf	i2gpio_pin_logic_write@pin^0,c
  8107   003182  0E00               	movlw	0
  8108   003184  6E02               	movwf	i2gpio_pin_logic_write@pin_logic^0,c
  8109   003186  ECB5  F011         	call	i2_gpio_pin_logic_write	;wreg free
  8110   00318A  6E0A               	movwf	dc_motor_move_right@gpio_ret^0,c
  8111   00318C                     
  8112                           ;ECUAL/DC_MOTOR/dc_motor.c: 51:         dc_motor->dc_motor_state=DC_MOTOR_ON;
  8113   00318C  5009               	movf	dc_motor_move_right@dc_motor^0,w,c
  8114   00318E  6ED9               	movwf	fsr2l,c
  8115   003190  6ADA               	clrf	fsr2h,c
  8116   003192  0E02               	movlw	2
  8117   003194  26D9               	addwf	fsr2l,f,c
  8118   003196  0E01               	movlw	1
  8119   003198  6EDF               	movwf	indf2,c
  8120   00319A                     
  8121                           ;ECUAL/DC_MOTOR/dc_motor.c: 52:         ret=(Std_ReturnType)0x01;
  8122   00319A  0E01               	movlw	1
  8123   00319C  6E0B               	movwf	dc_motor_move_right@ret^0,c
  8124   00319E                     i2l5096:
  8125                           
  8126                           ;ECUAL/DC_MOTOR/dc_motor.c: 55:     return ret;
  8127   00319E  500B               	movf	dc_motor_move_right@ret^0,w,c
  8128   0031A0  0012               	return		;funcret
  8129   0031A2                     __end_of_dc_motor_move_right:
  8130                           	callstack 0
  8131                           
  8132 ;; *************** function i2_gpio_pin_logic_write *****************
  8133 ;; Defined at:
  8134 ;;		line 81 in file "MCAL/GPIO/gpio.c"
  8135 ;; Parameters:    Size  Location     Type
  8136 ;;  pin             1    0[COMRAM] PTR struct .
  8137 ;;		 -> lcd$lcd_pins(4), heater(3), led_red(2), led_white(2), 
  8138 ;;		 -> led_blue(2), air_conditioners(3), lcd(6), 
  8139 ;;  pin_logic       1    1[COMRAM] enum E2978
  8140 ;; Auto vars:     Size  Location     Type
  8141 ;;  ret             1    7[COMRAM] unsigned char 
  8142 ;; Return value:  Size  Location     Type
  8143 ;;                  1    wreg      unsigned char 
  8144 ;; Registers used:
  8145 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8146 ;; Tracked objects:
  8147 ;;		On entry : 0/0
  8148 ;;		On exit  : 0/0
  8149 ;;		Unchanged: 0/0
  8150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8151 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8152 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8153 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8154 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8155 ;;Total ram usage:        8 bytes
  8156 ;; Hardware stack levels used: 1
  8157 ;; This function calls:
  8158 ;;		Nothing
  8159 ;; This function is called by:
  8160 ;;		_dc_motor_move_right
  8161 ;;		_dc_motor_stop
  8162 ;;		_lcd_send_char_data
  8163 ;;		_led_on
  8164 ;;		_led_off
  8165 ;;		i2_lcd_send_command
  8166 ;;		i2_lcd_send_nbits
  8167 ;;		i2_lcd_send_enable
  8168 ;; This function uses a non-reentrant model
  8169 ;;
  8170                           
  8171                           	psect	text45
  8172   00236A                     __ptext45:
  8173                           	callstack 0
  8174   00236A                     i2_gpio_pin_logic_write:
  8175                           	callstack 21
  8176   00236A                     
  8177                           ;MCAL/GPIO/gpio.c: 84:     if(((void*)0)==pin ||(pin->pin)>7 || pin_logic>1){
  8178   00236A  5001               	movf	i2gpio_pin_logic_write@pin^0,w,c
  8179   00236C  B4D8               	btfsc	status,2,c
  8180   00236E  EFBB  F011         	goto	i2u461_41
  8181   002372  EFBD  F011         	goto	i2u461_40
  8182   002376                     i2u461_41:
  8183   002376  EFD5  F011         	goto	i2l4862
  8184   00237A                     i2u461_40:
  8185   00237A  5001               	movf	i2gpio_pin_logic_write@pin^0,w,c
  8186   00237C  6ED9               	movwf	fsr2l,c
  8187   00237E  6ADA               	clrf	fsr2h,c
  8188   002380  30DF               	rrcf	223,w,c
  8189   002382  32E8               	rrcf	wreg,f,c
  8190   002384  32E8               	rrcf	wreg,f,c
  8191   002386  0B07               	andlw	7
  8192   002388  6E03               	movwf	??i2_gpio_pin_logic_write^0,c
  8193   00238A  0E08               	movlw	8
  8194   00238C  6003               	cpfslt	??i2_gpio_pin_logic_write^0,c
  8195   00238E  EFCB  F011         	goto	i2u462_41
  8196   002392  EFCD  F011         	goto	i2u462_40
  8197   002396                     i2u462_41:
  8198   002396  EFD5  F011         	goto	i2l4862
  8199   00239A                     i2u462_40:
  8200   00239A  0E01               	movlw	1
  8201   00239C  6402               	cpfsgt	i2gpio_pin_logic_write@pin_logic^0,c
  8202   00239E  EFD3  F011         	goto	i2u463_41
  8203   0023A2  EFD5  F011         	goto	i2u463_40
  8204   0023A6                     i2u463_41:
  8205   0023A6  EF2E  F012         	goto	i2l4870
  8206   0023AA                     i2u463_40:
  8207   0023AA                     i2l4862:
  8208                           
  8209                           ;MCAL/GPIO/gpio.c: 85:         ret=(Std_ReturnType)0x00;
  8210   0023AA  0E00               	movlw	0
  8211   0023AC  6E08               	movwf	i2gpio_pin_logic_write@ret^0,c
  8212                           
  8213                           ;MCAL/GPIO/gpio.c: 86:     }
  8214   0023AE  EF4D  F012         	goto	i2l4876
  8215   0023B2                     i2l4864:
  8216                           
  8217                           ;MCAL/GPIO/gpio.c: 90:                 (*latx[pin->port] &= ~((uint8)1<<pin->pin));
  8218   0023B2  5001               	movf	i2gpio_pin_logic_write@pin^0,w,c
  8219   0023B4  6ED9               	movwf	fsr2l,c
  8220   0023B6  6ADA               	clrf	fsr2h,c
  8221   0023B8  30DF               	rrcf	223,w,c
  8222   0023BA  32E8               	rrcf	wreg,f,c
  8223   0023BC  32E8               	rrcf	wreg,f,c
  8224   0023BE  0B07               	andlw	7
  8225   0023C0  6E03               	movwf	??i2_gpio_pin_logic_write^0,c
  8226   0023C2  0E01               	movlw	1
  8227   0023C4  6E04               	movwf	(??i2_gpio_pin_logic_write+1)^0,c
  8228   0023C6  2A03               	incf	??i2_gpio_pin_logic_write^0,f,c
  8229   0023C8  EFE8  F011         	goto	i2u464_44
  8230   0023CC                     i2u464_45:
  8231   0023CC  90D8               	bcf	status,0,c
  8232   0023CE  3604               	rlcf	(??i2_gpio_pin_logic_write+1)^0,f,c
  8233   0023D0                     i2u464_44:
  8234   0023D0  2E03               	decfsz	??i2_gpio_pin_logic_write^0,f,c
  8235   0023D2  EFE6  F011         	goto	i2u464_45
  8236   0023D6  5004               	movf	(??i2_gpio_pin_logic_write+1)^0,w,c
  8237   0023D8  0AFF               	xorlw	255
  8238   0023DA  6E05               	movwf	(??i2_gpio_pin_logic_write+2)^0,c
  8239   0023DC  5001               	movf	i2gpio_pin_logic_write@pin^0,w,c
  8240   0023DE  6ED9               	movwf	fsr2l,c
  8241   0023E0  6ADA               	clrf	fsr2h,c
  8242   0023E2  50DF               	movf	223,w,c
  8243   0023E4  0B07               	andlw	7
  8244   0023E6  0D02               	mullw	2
  8245   0023E8  50F3               	movf	243,w,c
  8246   0023EA  0FCE               	addlw	low _latx
  8247   0023EC  6ED9               	movwf	fsr2l,c
  8248   0023EE  6ADA               	clrf	fsr2h,c
  8249   0023F0  CFDE F006          	movff	postinc2,??i2_gpio_pin_logic_write+3
  8250   0023F4  CFDD F007          	movff	postdec2,??i2_gpio_pin_logic_write+4
  8251   0023F8  C006  FFD9         	movff	??i2_gpio_pin_logic_write+3,fsr2l
  8252   0023FC  C007  FFDA         	movff	??i2_gpio_pin_logic_write+4,fsr2h
  8253   002400  5005               	movf	(??i2_gpio_pin_logic_write+2)^0,w,c
  8254   002402  16DF               	andwf	indf2,f,c
  8255                           
  8256                           ;MCAL/GPIO/gpio.c: 91:                 break;
  8257   002404  EF43  F012         	goto	i2l4872
  8258   002408                     i2l4866:
  8259                           
  8260                           ;MCAL/GPIO/gpio.c: 94:                 (*latx[pin->port] |= ((uint8)1<<pin->pin));
  8261   002408  5001               	movf	i2gpio_pin_logic_write@pin^0,w,c
  8262   00240A  6ED9               	movwf	fsr2l,c
  8263   00240C  6ADA               	clrf	fsr2h,c
  8264   00240E  30DF               	rrcf	223,w,c
  8265   002410  32E8               	rrcf	wreg,f,c
  8266   002412  32E8               	rrcf	wreg,f,c
  8267   002414  0B07               	andlw	7
  8268   002416  6E03               	movwf	??i2_gpio_pin_logic_write^0,c
  8269   002418  0E01               	movlw	1
  8270   00241A  6E04               	movwf	(??i2_gpio_pin_logic_write+1)^0,c
  8271   00241C  2A03               	incf	??i2_gpio_pin_logic_write^0,f,c
  8272   00241E  EF13  F012         	goto	i2u465_44
  8273   002422                     i2u465_45:
  8274   002422  90D8               	bcf	status,0,c
  8275   002424  3604               	rlcf	(??i2_gpio_pin_logic_write+1)^0,f,c
  8276   002426                     i2u465_44:
  8277   002426  2E03               	decfsz	??i2_gpio_pin_logic_write^0,f,c
  8278   002428  EF11  F012         	goto	i2u465_45
  8279   00242C  5001               	movf	i2gpio_pin_logic_write@pin^0,w,c
  8280   00242E  6ED9               	movwf	fsr2l,c
  8281   002430  6ADA               	clrf	fsr2h,c
  8282   002432  50DF               	movf	223,w,c
  8283   002434  0B07               	andlw	7
  8284   002436  0D02               	mullw	2
  8285   002438  50F3               	movf	243,w,c
  8286   00243A  0FCE               	addlw	low _latx
  8287   00243C  6ED9               	movwf	fsr2l,c
  8288   00243E  6ADA               	clrf	fsr2h,c
  8289   002440  CFDE F005          	movff	postinc2,??i2_gpio_pin_logic_write+2
  8290   002444  CFDD F006          	movff	postdec2,??i2_gpio_pin_logic_write+3
  8291   002448  C005  FFD9         	movff	??i2_gpio_pin_logic_write+2,fsr2l
  8292   00244C  C006  FFDA         	movff	??i2_gpio_pin_logic_write+3,fsr2h
  8293   002450  5004               	movf	(??i2_gpio_pin_logic_write+1)^0,w,c
  8294   002452  12DF               	iorwf	indf2,f,c
  8295                           
  8296                           ;MCAL/GPIO/gpio.c: 95:                 break;
  8297   002454  EF43  F012         	goto	i2l4872
  8298   002458                     i2l4868:
  8299                           
  8300                           ;MCAL/GPIO/gpio.c: 99:         }
  8301   002458  EF43  F012         	goto	i2l4872
  8302   00245C                     i2l4870:
  8303   00245C  5002               	movf	i2gpio_pin_logic_write@pin_logic^0,w,c
  8304   00245E  6E03               	movwf	??i2_gpio_pin_logic_write^0,c
  8305   002460  6A04               	clrf	(??i2_gpio_pin_logic_write+1)^0,c
  8306                           
  8307                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8308                           ; Switch size 1, requested type "simple"
  8309                           ; Number of cases is 1, Range of values is 0 to 0
  8310                           ; switch strategies available:
  8311                           ; Name         Instructions Cycles
  8312                           ; simple_byte            4     3 (average)
  8313                           ;	Chosen strategy is simple_byte
  8314   002462  5004               	movf	(??i2_gpio_pin_logic_write+1)^0,w,c
  8315   002464  0A00               	xorlw	0	; case 0
  8316   002466  B4D8               	btfsc	status,2,c
  8317   002468  EF38  F012         	goto	i2l5552
  8318   00246C  EF2C  F012         	goto	i2l4868
  8319   002470                     i2l5552:
  8320                           
  8321                           ; Switch size 1, requested type "simple"
  8322                           ; Number of cases is 2, Range of values is 0 to 1
  8323                           ; switch strategies available:
  8324                           ; Name         Instructions Cycles
  8325                           ; simple_byte            7     4 (average)
  8326                           ;	Chosen strategy is simple_byte
  8327   002470  5003               	movf	??i2_gpio_pin_logic_write^0,w,c
  8328   002472  0A00               	xorlw	0	; case 0
  8329   002474  B4D8               	btfsc	status,2,c
  8330   002476  EFD9  F011         	goto	i2l4864
  8331   00247A  0A01               	xorlw	1	; case 1
  8332   00247C  B4D8               	btfsc	status,2,c
  8333   00247E  EF04  F012         	goto	i2l4866
  8334   002482  EF2C  F012         	goto	i2l4868
  8335   002486                     i2l4872:
  8336                           
  8337                           ;MCAL/GPIO/gpio.c: 100:         pin->logic=pin_logic;
  8338   002486  5001               	movf	i2gpio_pin_logic_write@pin^0,w,c
  8339   002488  6ED9               	movwf	fsr2l,c
  8340   00248A  6ADA               	clrf	fsr2h,c
  8341   00248C  B002               	btfsc	i2gpio_pin_logic_write@pin_logic^0,0,c
  8342   00248E  D002               	bra	i2u466_45
  8343   002490  9EDF               	bcf	indf2,7,c
  8344   002492  D001               	bra	i2u466_46
  8345   002494                     i2u466_45:
  8346   002494  8EDF               	bsf	indf2,7,c
  8347   002496                     i2u466_46:
  8348   002496                     
  8349                           ;MCAL/GPIO/gpio.c: 101:         ret=(Std_ReturnType)0x01;
  8350   002496  0E01               	movlw	1
  8351   002498  6E08               	movwf	i2gpio_pin_logic_write@ret^0,c
  8352   00249A                     i2l4876:
  8353                           
  8354                           ;MCAL/GPIO/gpio.c: 104:     return ret;
  8355   00249A  5008               	movf	i2gpio_pin_logic_write@ret^0,w,c
  8356   00249C  0012               	return		;funcret
  8357   00249E                     __end_ofi2_gpio_pin_logic_write:
  8358                           	callstack 0
  8359                           
  8360 ;; *************** function _EUSART_ASYNC_ReadByteNonBlocking *****************
  8361 ;; Defined at:
  8362 ;;		line 118 in file "MCAL/USART/usart.c"
  8363 ;; Parameters:    Size  Location     Type
  8364 ;;  _data           1    0[COMRAM] PTR unsigned char 
  8365 ;;		 -> uart_value(1), 
  8366 ;; Auto vars:     Size  Location     Type
  8367 ;;  ret             1    0        unsigned char 
  8368 ;; Return value:  Size  Location     Type
  8369 ;;                  1    wreg      unsigned char 
  8370 ;; Registers used:
  8371 ;;		wreg, fsr2l, fsr2h, status,2
  8372 ;; Tracked objects:
  8373 ;;		On entry : 0/0
  8374 ;;		On exit  : 0/0
  8375 ;;		Unchanged: 0/0
  8376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8377 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8380 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8381 ;;Total ram usage:        1 bytes
  8382 ;; Hardware stack levels used: 1
  8383 ;; This function calls:
  8384 ;;		Nothing
  8385 ;; This function is called by:
  8386 ;;		_MY_EUSART_RX_ISR
  8387 ;; This function uses a non-reentrant model
  8388 ;;
  8389                           
  8390                           	psect	text46
  8391   0034DC                     __ptext46:
  8392                           	callstack 0
  8393   0034DC                     _EUSART_ASYNC_ReadByteNonBlocking:
  8394                           	callstack 22
  8395   0034DC                     
  8396                           ;MCAL/USART/usart.c: 120:     if(1==PIR1bits.RCIF){
  8397   0034DC  AA9E               	btfss	158,5,c	;volatile
  8398   0034DE  EF73  F01A         	goto	i2u408_41
  8399   0034E2  EF75  F01A         	goto	i2u408_40
  8400   0034E6                     i2u408_41:
  8401   0034E6  EF7C  F01A         	goto	i2l4302
  8402   0034EA                     i2u408_40:
  8403   0034EA                     
  8404                           ;MCAL/USART/usart.c: 121:         *_data=RCREG;
  8405   0034EA  5001               	movf	EUSART_ASYNC_ReadByteNonBlocking@_data^0,w,c
  8406   0034EC  6ED9               	movwf	fsr2l,c
  8407   0034EE  6ADA               	clrf	fsr2h,c
  8408   0034F0  CFAE FFDF          	movff	4014,indf2	;volatile
  8409   0034F4                     
  8410                           ;MCAL/USART/usart.c: 123:     }
  8411   0034F4  EF7C  F01A         	goto	i2l549
  8412   0034F8                     i2l4302:
  8413   0034F8                     i2l549:
  8414   0034F8  0012               	return		;funcret
  8415   0034FA                     __end_of_EUSART_ASYNC_ReadByteNonBlocking:
  8416                           	callstack 0
  8417                           
  8418 ;; *************** function _ADC_ISR *****************
  8419 ;; Defined at:
  8420 ;;		line 322 in file "MCAL/ADC/adc.c"
  8421 ;; Parameters:    Size  Location     Type
  8422 ;;		None
  8423 ;; Auto vars:     Size  Location     Type
  8424 ;;		None
  8425 ;; Return value:  Size  Location     Type
  8426 ;;                  1    wreg      void 
  8427 ;; Registers used:
  8428 ;;		None
  8429 ;; Tracked objects:
  8430 ;;		On entry : 0/0
  8431 ;;		On exit  : 0/0
  8432 ;;		Unchanged: 0/0
  8433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8438 ;;Total ram usage:        0 bytes
  8439 ;; Hardware stack levels used: 1
  8440 ;; This function calls:
  8441 ;;		Nothing
  8442 ;; This function is called by:
  8443 ;;		_InterruptManager
  8444 ;; This function uses a non-reentrant model
  8445 ;;
  8446                           
  8447                           	psect	text47
  8448   003520                     __ptext47:
  8449                           	callstack 0
  8450   003520                     _ADC_ISR:
  8451                           	callstack 24
  8452   003520                     
  8453                           ;MCAL/ADC/adc.c: 324:     (PIR1bits.ADIF=0);;
  8454   003520  9C9E               	bcf	158,6,c	;volatile
  8455   003522  0012               	return		;funcret
  8456   003524                     __end_of_ADC_ISR:
  8457                           	callstack 0
  8458                           
  8459                           	psect	text48
  8460   000000                     __ptext48:
  8461                           	callstack 0
  8462   000000                     
  8463                           	psect	rparam
  8464   000000                     
  8465                           	psect	temp
  8466   00007A                     btemp:
  8467                           	callstack 0
  8468   00007A                     	ds	1
  8469   000000                     int$flags	set	btemp
  8470   000000                     wtemp8	set	btemp+1
  8471   000000                     ttemp5	set	btemp+1
  8472   000000                     ttemp6	set	btemp+4
  8473   000000                     ttemp7	set	btemp+8
  8474                           
  8475                           	psect	config
  8476                           
  8477                           ; Padding undefined space
  8478   300000                     	org	3145728
  8479   300000  FF                 	db	255
  8480                           
  8481                           ;Config register CONFIG1H @ 0x300001
  8482                           ;	Oscillator Selection bits
  8483                           ;	OSC = HS, HS oscillator
  8484                           ;	Fail-Safe Clock Monitor Enable bit
  8485                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  8486                           ;	Internal/External Oscillator Switchover bit
  8487                           ;	IESO = OFF, Oscillator Switchover mode disabled
  8488   300001                     	org	3145729
  8489   300001  02                 	db	2
  8490                           
  8491                           ;Config register CONFIG2L @ 0x300002
  8492                           ;	Power-up Timer Enable bit
  8493                           ;	PWRT = OFF, PWRT disabled
  8494                           ;	Brown-out Reset Enable bits
  8495                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  8496                           ;	Brown Out Reset Voltage bits
  8497                           ;	BORV = 1, 
  8498   300002                     	org	3145730
  8499   300002  09                 	db	9
  8500                           
  8501                           ;Config register CONFIG2H @ 0x300003
  8502                           ;	Watchdog Timer Enable bit
  8503                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  8504                           ;	Watchdog Timer Postscale Select bits
  8505                           ;	WDTPS = 32768, 1:32768
  8506   300003                     	org	3145731
  8507   300003  1E                 	db	30
  8508                           
  8509                           ; Padding undefined space
  8510   300004                     	org	3145732
  8511   300004  FF                 	db	255
  8512                           
  8513                           ;Config register CONFIG3H @ 0x300005
  8514                           ;	CCP2 MUX bit
  8515                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  8516                           ;	PORTB A/D Enable bit
  8517                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  8518                           ;	Low-Power Timer1 Oscillator Enable bit
  8519                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  8520                           ;	MCLR Pin Enable bit
  8521                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  8522   300005                     	org	3145733
  8523   300005  81                 	db	129
  8524                           
  8525                           ;Config register CONFIG4L @ 0x300006
  8526                           ;	Stack Full/Underflow Reset Enable bit
  8527                           ;	STVREN = ON, Stack full/underflow will cause Reset
  8528                           ;	Single-Supply ICSP Enable bit
  8529                           ;	LVP = OFF, Single-Supply ICSP disabled
  8530                           ;	Extended Instruction Set Enable bit
  8531                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  8532                           ;	Background Debugger Enable bit
  8533                           ;	DEBUG = 0x1, unprogrammed default
  8534   300006                     	org	3145734
  8535   300006  81                 	db	129
  8536                           
  8537                           ; Padding undefined space
  8538   300007                     	org	3145735
  8539   300007  FF                 	db	255
  8540                           
  8541                           ;Config register CONFIG5L @ 0x300008
  8542                           ;	Code Protection bit
  8543                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  8544                           ;	Code Protection bit
  8545                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  8546                           ;	Code Protection bit
  8547                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  8548                           ;	Code Protection bit
  8549                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  8550   300008                     	org	3145736
  8551   300008  0F                 	db	15
  8552                           
  8553                           ;Config register CONFIG5H @ 0x300009
  8554                           ;	Boot Block Code Protection bit
  8555                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  8556                           ;	Data EEPROM Code Protection bit
  8557                           ;	CPD = OFF, Data EEPROM not code-protected
  8558   300009                     	org	3145737
  8559   300009  C0                 	db	192
  8560                           
  8561                           ;Config register CONFIG6L @ 0x30000A
  8562                           ;	Write Protection bit
  8563                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  8564                           ;	Write Protection bit
  8565                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  8566                           ;	Write Protection bit
  8567                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  8568                           ;	Write Protection bit
  8569                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  8570   30000A                     	org	3145738
  8571   30000A  0F                 	db	15
  8572                           
  8573                           ;Config register CONFIG6H @ 0x30000B
  8574                           ;	Configuration Register Write Protection bit
  8575                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  8576                           ;	Boot Block Write Protection bit
  8577                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  8578                           ;	Data EEPROM Write Protection bit
  8579                           ;	WRTD = OFF, Data EEPROM not write-protected
  8580   30000B                     	org	3145739
  8581   30000B  E0                 	db	224
  8582                           
  8583                           ;Config register CONFIG7L @ 0x30000C
  8584                           ;	Table Read Protection bit
  8585                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  8586                           ;	Table Read Protection bit
  8587                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  8588                           ;	Table Read Protection bit
  8589                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  8590                           ;	Table Read Protection bit
  8591                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  8592   30000C                     	org	3145740
  8593   30000C  0F                 	db	15
  8594                           
  8595                           ;Config register CONFIG7H @ 0x30000D
  8596                           ;	Boot Block Table Read Protection bit
  8597                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  8598   30000D                     	org	3145741
  8599   30000D  40                 	db	64
  8600                           tosu	equ	0xFFF
  8601                           tosh	equ	0xFFE
  8602                           tosl	equ	0xFFD
  8603                           stkptr	equ	0xFFC
  8604                           pclatu	equ	0xFFB
  8605                           pclath	equ	0xFFA
  8606                           pcl	equ	0xFF9
  8607                           tblptru	equ	0xFF8
  8608                           tblptrh	equ	0xFF7
  8609                           tblptrl	equ	0xFF6
  8610                           tablat	equ	0xFF5
  8611                           prodh	equ	0xFF4
  8612                           prodl	equ	0xFF3
  8613                           indf0	equ	0xFEF
  8614                           postinc0	equ	0xFEE
  8615                           postdec0	equ	0xFED
  8616                           preinc0	equ	0xFEC
  8617                           plusw0	equ	0xFEB
  8618                           fsr0h	equ	0xFEA
  8619                           fsr0l	equ	0xFE9
  8620                           wreg	equ	0xFE8
  8621                           indf1	equ	0xFE7
  8622                           postinc1	equ	0xFE6
  8623                           postdec1	equ	0xFE5
  8624                           preinc1	equ	0xFE4
  8625                           plusw1	equ	0xFE3
  8626                           fsr1h	equ	0xFE2
  8627                           fsr1l	equ	0xFE1
  8628                           bsr	equ	0xFE0
  8629                           indf2	equ	0xFDF
  8630                           postinc2	equ	0xFDE
  8631                           postdec2	equ	0xFDD
  8632                           preinc2	equ	0xFDC
  8633                           plusw2	equ	0xFDB
  8634                           fsr2h	equ	0xFDA
  8635                           fsr2l	equ	0xFD9
  8636                           status	equ	0xFD8

Data Sizes:
    Strings     3
    Constant    0
    Data        69
    BSS         62
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     71     121
    BANK0           128     68     117
    BANK1           256      0      32
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    ADC_GetConversionResult@_adc$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    ADC_Init@_adc$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    convert_uint16_to_string@str	PTR unsigned char  size(1) Largest target is 1
		 -> lcd_send_number@number(COMRAM[1]), lcd_send_number_pos@number(COMRAM[1]), 

    dc_motor_init@dc_motor	PTR struct . size(1) Largest target is 3
		 -> air_conditioners(COMRAM[3]), heater(COMRAM[3]), 

    dc_motor_move_right@dc_motor	PTR struct . size(1) Largest target is 3
		 -> air_conditioners(COMRAM[3]), heater(COMRAM[3]), 

    dc_motor_stop@dc_motor	PTR struct . size(1) Largest target is 3
		 -> air_conditioners(COMRAM[3]), heater(COMRAM[3]), 

    EUSART_ASYNC_Init@_eusart	PTR const struct . size(1) Largest target is 16
		 -> uart(BANK0[16]), 

    EUSART_ASYNC_ReadByteNonBlocking@_data	PTR unsigned char  size(1) Largest target is 1
		 -> uart_value(COMRAM[1]), 

    EUSART_ASYNC_RX_Init@_eusart	PTR const struct . size(1) Largest target is 16
		 -> uart(BANK0[16]), 

    EUSART_ASYNC_RX_Init@_eusart$EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_RX_Init@_eusart$EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_RX_Init@_eusart$EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> MY_EUSART_RX_ISR(), 

    EUSART_ASYNC_RX_Init@_eusart$EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_ASYNC_TX_Init@_eusart	PTR const struct . size(1) Largest target is 16
		 -> uart(BANK0[16]), 

    EUSART_ASYNC_TX_Init@_eusart$EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_TX_Init@_eusart$EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_TX_Init@_eusart$EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> MY_EUSART_RX_ISR(), 

    EUSART_ASYNC_TX_Init@_eusart$EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_Baud_Rate_Calculation@_eusart	PTR const struct . size(1) Largest target is 16
		 -> uart(BANK0[16]), 

    EUSART_Baud_Rate_Calculation@_eusart$EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Baud_Rate_Calculation@_eusart$EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Baud_Rate_Calculation@_eusart$EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> MY_EUSART_RX_ISR(), 

    EUSART_Baud_Rate_Calculation@_eusart$EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 2
		 -> uart$EUSART_FramingErrorHandler(BANK0[2]), NULL(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 2
		 -> uart$EUSART_OverrunErrorHandler(BANK0[2]), NULL(), 

    EUSART_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> MY_EUSART_RX_ISR(), NULL(), 

    EUSART_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    gpio_pin_direction_init@pin	PTR struct . size(1) Largest target is 6
		 -> air_conditioners(COMRAM[3]), heater(COMRAM[3]), lcd(COMRAM[6]), lcd$lcd_pins(COMRAM[4]), 
		 -> led_blue(COMRAM[2]), led_red(COMRAM[2]), led_white(COMRAM[2]), 

    gpio_pin_logic_write@pin	PTR struct . size(1) Largest target is 6
		 -> air_conditioners(COMRAM[3]), heater(COMRAM[3]), lcd(COMRAM[6]), lcd$lcd_pins(COMRAM[4]), 
		 -> led_blue(COMRAM[2]), led_red(COMRAM[2]), led_white(COMRAM[2]), 

    gpio_pin_output_low_init@pin	PTR struct . size(1) Largest target is 6
		 -> air_conditioners(COMRAM[3]), heater(COMRAM[3]), lcd(COMRAM[6]), lcd$lcd_pins(COMRAM[4]), 
		 -> led_blue(COMRAM[2]), led_red(COMRAM[2]), led_white(COMRAM[2]), 

    latx	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRlllll[1]), LATB(BITBIGSFRllllh[1]), LATC(BITBIGSFRllllh[1]), LATD(BITBIGSFRllllh[1]), 
		 -> LATE(BITBIGSFRllllh[1]), 

    lcd_init@lcd	PTR struct . size(1) Largest target is 6
		 -> lcd(COMRAM[6]), 

    lcd_send_char_data@lcd	PTR struct . size(1) Largest target is 6
		 -> lcd(COMRAM[6]), 

    lcd_send_command@lcd	PTR struct . size(1) Largest target is 6
		 -> lcd(COMRAM[6]), 

    lcd_send_enable@lcd	PTR struct . size(1) Largest target is 6
		 -> lcd(COMRAM[6]), 

    lcd_send_nbits@lcd	PTR struct . size(1) Largest target is 6
		 -> lcd(COMRAM[6]), 

    lcd_send_number_pos@lcd	PTR struct . size(1) Largest target is 6
		 -> lcd(COMRAM[6]), 

    lcd_send_string@lcd	PTR struct . size(1) Largest target is 6
		 -> lcd(COMRAM[6]), 

    lcd_send_string@str	PTR unsigned char  size(1) Largest target is 1
		 -> lcd_send_number@number(COMRAM[1]), lcd_send_number_pos@number(COMRAM[1]), 

    lcd_send_string_pos@lcd	PTR struct . size(1) Largest target is 6
		 -> lcd(COMRAM[6]), 

    lcd_send_string_pos@str	PTR unsigned char  size(1) Largest target is 1
		 -> lcd_send_number_pos@number(COMRAM[1]), 

    lcd_set_curser@lcd	PTR struct . size(1) Largest target is 6
		 -> lcd(COMRAM[6]), 

    led_init@led	PTR struct . size(1) Largest target is 2
		 -> led_blue(COMRAM[2]), led_red(COMRAM[2]), led_white(COMRAM[2]), 

    led_off@led	PTR struct . size(1) Largest target is 2
		 -> led_blue(COMRAM[2]), led_red(COMRAM[2]), led_white(COMRAM[2]), 

    led_on@led	PTR struct . size(1) Largest target is 2
		 -> led_blue(COMRAM[2]), led_red(COMRAM[2]), led_white(COMRAM[2]), 

    memset@dest	PTR void  size(1) Largest target is 1
		 -> lcd_send_number@number(COMRAM[1]), lcd_send_number_pos@number(COMRAM[1]), 

    memset@p	PTR unsigned char  size(1) Largest target is 1
		 -> lcd_send_number@number(COMRAM[1]), lcd_send_number_pos@number(COMRAM[1]), 

    portx	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRlllll[1]), PORTB(BITBIGSFRlllll[1]), PORTC(BITBIGSFRlllll[1]), PORTD(BITBIGSFRlllll[1]), 
		 -> PORTE(BITBIGSFRlllll[1]), 

    S1020$EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    S1020$EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    S1020$EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> MY_EUSART_RX_ISR(), 

    S1020$EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S2119$buffer	PTR unsigned char  size(2) Largest target is 0

    S2119$source	PTR const unsigned char  size(2) Largest target is 0

    S437$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    sp__memset	PTR void  size(1) Largest target is 1
		 -> lcd_send_number@number(COMRAM[1]), lcd_send_number_pos@number(COMRAM[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 6
		 -> convert_uint16_to_string@Temp_String(COMRAM[6]), 

    trisx	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRlllll[1]), TRISB(ABS[1]), TRISC(ABS[1]), TRISD(ABS[1]), 
		 -> TRISE(ABS[1]), 

    uart$EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    uart$EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    uart$EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> MY_EUSART_RX_ISR(), 

    uart$EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptManager in COMRAM

    _MY_EUSART_RX_ISR->_lcd_send_number_pos
    _led_on->i2_gpio_pin_logic_write
    _led_off->i2_gpio_pin_logic_write
    _lcd_send_number_pos->_convert_uint16_to_string
    _lcd_send_string_pos->_lcd_set_curser
    _lcd_set_curser->i2_lcd_send_command
    i2_lcd_send_command->i2_lcd_send_nbits
    _lcd_send_string->_lcd_send_char_data
    _lcd_send_char_data->i2_lcd_send_nbits
    i2_lcd_send_nbits->i2_gpio_pin_logic_write
    i2_lcd_send_enable->i2_gpio_pin_logic_write
    _convert_uint16_to_string->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _dc_motor_stop->i2_gpio_pin_logic_write
    _dc_motor_move_right->i2_gpio_pin_logic_write

Critical Paths under _main in BANK0

    __init->_EUSART_ASYNC_Init
    _led_init->_gpio_pin_output_low_init
    _lcd_init->_lcd_send_command
    _lcd_send_command->_lcd_send_nbits
    _lcd_send_nbits->_gpio_pin_logic_write
    _lcd_send_enable->_gpio_pin_logic_write
    _dc_motor_init->_gpio_pin_output_low_init
    _gpio_pin_output_low_init->_gpio_pin_direction_init
    _gpio_pin_output_low_init->_gpio_pin_logic_write
    _EUSART_ASYNC_Init->_EUSART_Baud_Rate_Calculation
    _EUSART_Baud_Rate_Calculation->___fladd
    ___fldiv->___xxtofl
    ___fladd->___fldiv

Critical Paths under _InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   32660
                              __init
 ---------------------------------------------------------------------------------
 (1) __init                                                1     1      0   32660
                  _EUSART_ASYNC_Init
                      _dc_motor_init
                           _lcd_init
                           _led_init
 ---------------------------------------------------------------------------------
 (2) _led_init                                             3     2      1    4585
                                             12 BANK0      2     1      1
           _gpio_pin_output_low_init
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             7     6      1   16226
                                             19 BANK0      7     6      1
           _gpio_pin_output_low_init
                   _lcd_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_send_command                                     5     3      2   11414
                                             14 BANK0      5     3      2
               _gpio_pin_logic_write
                    _lcd_send_enable
                     _lcd_send_nbits
 ---------------------------------------------------------------------------------
 (4) _lcd_send_nbits                                       7     5      2    3344
                                              8 BANK0      6     4      2
               _gpio_pin_logic_write
 ---------------------------------------------------------------------------------
 (4) _lcd_send_enable                                      3     2      1    2958
                                              8 BANK0      2     1      1
               _gpio_pin_logic_write
 ---------------------------------------------------------------------------------
 (2) _dc_motor_init                                        3     2      1    4522
                                             12 BANK0      3     2      1
           _gpio_pin_output_low_init
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_output_low_init                             4     3      1    4169
                                              8 BANK0      4     3      1
            _gpio_pin_direction_init
               _gpio_pin_logic_write
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_logic_write                                 8     6      2    2563
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_direction_init                              8     6      2     893
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _EUSART_ASYNC_Init                                    2     1      1    7312
                                             66 BANK0      2     1      1
               _EUSART_ASYNC_RX_Init
               _EUSART_ASYNC_TX_Init
       _EUSART_Baud_Rate_Calculation
 ---------------------------------------------------------------------------------
 (3) _EUSART_Baud_Rate_Calculation                        11    10      1    6663
                                             55 BANK0     11    10      1
                            ___fladd
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     616
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     381
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    2423
                                             14 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    2824
                                             39 BANK0     16     8      8
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _EUSART_ASYNC_TX_Init                                 1     0      1     208
                                              0 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (3) _EUSART_ASYNC_RX_Init                                 1     0      1     252
                                              0 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _InterruptManager                                    12    12      0   23659
                                             59 COMRAM    12    12      0
                            _ADC_ISR
                      _EUSART_RX_ISR
                      _EUSART_TX_ISR
 ---------------------------------------------------------------------------------
 (7) _EUSART_TX_ISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART_RX_ISR                                        0     0      0   23659
                                NULL *
                   _MY_EUSART_RX_ISR *
 ---------------------------------------------------------------------------------
 (8) _MY_EUSART_RX_ISR                                     0     0      0   23659
   _EUSART_ASYNC_ReadByteNonBlocking
                _dc_motor_move_right
                      _dc_motor_stop
                _lcd_send_number_pos
                            _led_off
                             _led_on
 ---------------------------------------------------------------------------------
 (9) _led_on                                               3     2      1    1563
                                              8 COMRAM     3     2      1
             i2_gpio_pin_logic_write
 ---------------------------------------------------------------------------------
 (9) _led_off                                              3     2      1    1833
                                              8 COMRAM     3     2      1
             i2_gpio_pin_logic_write
 ---------------------------------------------------------------------------------
 (9) _lcd_send_number_pos                                  8     3      5   17204
                                             52 COMRAM     7     2      5
           _convert_uint16_to_string
                _lcd_send_string_pos
 ---------------------------------------------------------------------------------
 (10) _lcd_send_string_pos                                 7     3      4   11736
                                             26 COMRAM     6     2      4
                    _lcd_send_string
                     _lcd_set_curser
 ---------------------------------------------------------------------------------
 (11) _lcd_set_curser                                      8     5      3    5558
                                             19 COMRAM     7     4      3
                 i2_lcd_send_command
 ---------------------------------------------------------------------------------
 (12) i2_lcd_send_command                                  5     3      2    4684
                                             14 COMRAM     5     3      2
             i2_gpio_pin_logic_write
                  i2_lcd_send_enable
                   i2_lcd_send_nbits
 ---------------------------------------------------------------------------------
 (11) _lcd_send_string                                     5     3      2    5511
                                             19 COMRAM     5     3      2
                 _lcd_send_char_data
 ---------------------------------------------------------------------------------
 (12) _lcd_send_char_data                                  5     3      2    4944
                                             14 COMRAM     5     3      2
             i2_gpio_pin_logic_write
                  i2_lcd_send_enable
                   i2_lcd_send_nbits
 ---------------------------------------------------------------------------------
 (13) i2_lcd_send_nbits                                    7     5      2    1604
                                              8 COMRAM     6     4      2
             i2_gpio_pin_logic_write
 ---------------------------------------------------------------------------------
 (13) i2_lcd_send_enable                                   3     2      1    1368
                                              8 COMRAM     2     1      1
             i2_gpio_pin_logic_write
 ---------------------------------------------------------------------------------
 (10) _convert_uint16_to_string                           11     8      3    4934
                                             42 COMRAM    10     7      3
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (11) _sprintf                                            19    15      4    3591
                                             25 COMRAM    17    13      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (12) _vfprintf                                            4     1      3    2936
                                             21 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (13) _vfpfcnvrt                                          11     8      3    2586
                                             10 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (14) _fputc                                               8     5      3     782
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (15) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (14) _abs                                                 4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (14) ___awmod                                             6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (14) ___awdiv                                             8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (11) _memset                                              6     1      5     780
                                              0 COMRAM     6     1      5
 ---------------------------------------------------------------------------------
 (9) _dc_motor_stop                                        3     2      1    1476
                                              8 COMRAM     3     2      1
             i2_gpio_pin_logic_write
 ---------------------------------------------------------------------------------
 (9) _dc_motor_move_right                                  3     2      1    1476
                                              8 COMRAM     3     2      1
             i2_gpio_pin_logic_write
 ---------------------------------------------------------------------------------
 (10) i2_gpio_pin_logic_write                              8     6      2    1123
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (9) _EUSART_ASYNC_ReadByteNonBlocking                     2     1      1     107
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (8) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   __init
     _EUSART_ASYNC_Init
       _EUSART_ASYNC_RX_Init
       _EUSART_ASYNC_TX_Init
       _EUSART_Baud_Rate_Calculation
         ___fladd
           ___fldiv (ARG)
             ___xxtofl (ARG)
         ___fldiv
         ___fltol
         ___xxtofl
     _dc_motor_init
       _gpio_pin_output_low_init
         _gpio_pin_direction_init
         _gpio_pin_logic_write
     _lcd_init
       _gpio_pin_output_low_init
       _lcd_send_command
         _gpio_pin_logic_write
         _lcd_send_enable
           _gpio_pin_logic_write
         _lcd_send_nbits
           _gpio_pin_logic_write
     _led_init
       _gpio_pin_output_low_init

 _InterruptManager (ROOT)
   _ADC_ISR
   _EUSART_RX_ISR
     NULL(Fake) *
     _MY_EUSART_RX_ISR *
       _EUSART_ASYNC_ReadByteNonBlocking
       _dc_motor_move_right
         i2_gpio_pin_logic_write
       _dc_motor_stop
         i2_gpio_pin_logic_write
       _lcd_send_number_pos
         _convert_uint16_to_string
           _memset
           _sprintf
             _vfprintf
               _vfpfcnvrt
                 ___awdiv
                 ___awmod
                 _abs
                   ___awmod (ARG)
                 _fputc
                   _putch
         _lcd_send_string_pos
           _lcd_send_string
             _lcd_send_char_data
               i2_gpio_pin_logic_write
               i2_lcd_send_enable
                 i2_gpio_pin_logic_write
               i2_lcd_send_nbits
                 i2_gpio_pin_logic_write
           _lcd_set_curser
             i2_lcd_send_command
               i2_gpio_pin_logic_write
               i2_lcd_send_enable
               i2_lcd_send_nbits
       _led_off
         i2_gpio_pin_logic_write
       _led_on
         i2_gpio_pin_logic_write
   _EUSART_TX_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      45        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      20       7       12.5%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     44      75       5       91.4%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     47      79       1       96.0%
BITBIGSFRhl         2D      0       0      37        0.0%
BITBIGSFRhh          D      0       0      36        0.0%
BITBIGSFRllhl        C      0       0      40        0.0%
BITBIGSFRllhhh       7      0       0      38        0.0%
BITBIGSFRllhhl       7      0       0      39        0.0%
BITBIGSFRlllhh       6      0       0      41        0.0%
BITBIGSFRllllh       4      0       0      42        0.0%
BITBIGSFRlllll       4      0       0      43        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     10E      44        0.0%
DATA                 0      0     10E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Feb 06 19:48:15 2024

                        ??_InterruptManager 003C                                           l9 3280  
                              ___fldiv@aexp 00A6                                ___fldiv@bexp 00A5  
                                         _n 00E2                                ___fldiv@sign 009E  
               gpio_pin_output_low_init@pin 0088                 gpio_pin_output_low_init@ret 008B  
                                        l54 25C4                                          l59 2D9C  
                              ___awdiv@sign 0006                                         l150 34B2  
                                       l170 3236                                         l147 305A  
                                       l506 32E4                                         l354 2368  
                                       l508 330C                                         l373 222C  
                                       l560 1250                                         l561 130C  
                                       l562 13C6                                         l394 2ED8  
                                       l564 150E                                         l556 101C  
                                       l637 3514                                         l574 2C00  
                                       l558 10D8                                         l638 3514  
                                       l559 1194                                         l584 2876  
                                       l667 32C8                                         l967 26CC  
                           ?_lcd_send_nbits 0088                   lcd_send_string_pos@column 001D  
                                       _abs 33C4                      ??_gpio_pin_logic_write 0082  
                                       _lcd 0068                             __end_of_ADC_ISR 3524  
                                       _ret 005B                                 lcd_init@lcd 0093  
                               lcd_init@ret 0097                                ___awmod@sign 0006  
                                       tosl 0FFD                                         wreg 0FE8  
                __end_of_lcd_send_char_data 2FA6                         fp__MY_EUSART_RX_ISR 0000  
                 ?_convert_uint16_to_string 002B                             ?_lcd_set_curser 0014  
                              ___fltol@exp1 0089                      lcd_set_curser@gpio_ret 0019  
                                      l1200 16B4                                        ?_abs 0007  
                                      l1215 181A                                        l1207 19D0  
                                      l1224 18EA                                        l1225 18D8  
                                      l1252 1D6C                                        l1332 202C  
                                      l1325 1F94                                        l1254 1BCC  
                                      l1263 1C12                                        l4000 1C9A  
                                      l1328 20F0                                        l1265 1C8A  
                                      l1257 1B90                                        l4010 1CFC  
                                      l4002 1CA6                                        l1266 1C78  
                                      l1339 2088                                        l4020 1D5A  
                                      l4012 1D12                                        l4004 1CB4  
                                      l4100 205E                                        l1198 1700  
                                      l4022 1D60                                        l4014 1D2C  
                                      l4006 1CDE                                        l4110 209C  
                                      l4102 206A                                        l1199 16EE  
                                      l4024 1D62                                        l4016 1D48  
                                      l4008 1CE2                                        l4040 261C  
                                      l4032 25C6                                        l4112 20C0  
                                      l4104 2078                                        l4018 1D4C  
                                      l4042 261E                                        l4034 25DE  
                                      l4114 20D0                                        l4106 2096  
                                      l5010 3058                                        l5002 3008  
                                      l4044 262E                                        l4116 20DE  
                                      l4108 2098                                        l4220 10DE  
                                      l5020 34A2                                        l5004 3016  
                                      l4070 26AC                                        l4054 2658  
                                      l4046 2632                                        l4038 25F2  
                                      l4118 20E0                                        l4230 12AC  
                                      l4222 1134                                        l4214 1006  
                                      l5022 34B0                                        l5014 3488  
                                      l5006 3042                                        l4072 26BC  
                                      l4064 2680                                        l4056 2662  
                                      l4048 2640                                        l4080 1F5E  
                                      l4232 1310                                        l4224 119A  
                                      l4216 1022                                        l4240 1480  
                                      l5016 348E                                        l5008 3046  
                                      l5120 2D96                                        l5200 255A  
                                      l4250 2B5C                                        l4066 268C  
                                      l4058 266C                                        l4090 1FD6  
                                      l4082 1FA4                                        l4234 1366  
                                      l4226 11F0                                        l4242 14D4  
                                      l4218 1078                                        l5050 2278  
                                      l5042 222E                                        l5018 349A  
                                      l5122 2D9A                                        l5114 2D2C  
                                      l5210 25A0                                        l5202 2568  
                                      l4260 2BAE                                        l4252 2B76  
                                      l3700 153E                                        l4068 269C  
                                      l4092 1FE2                                        l4084 1FBA  
                                      l4076 1F3E                                        l4236 13CA  
                                      l4228 1256                                        l5060 2362  
                                      l5052 22D0                                        l5044 2240  
                                      l5116 2D46                                        l5212 25AE  
                                      l5204 2576                                        l5220 31EE  
                                      l5300 3296                                        l4270 2BFE  
                                      l4262 2BC6                                        l4254 2B78  
                                      l3710 1578                                        l3702 154E  
                                      l4094 2014                                        l4078 1F50  
                                      l4238 1420                                        l5054 2322  
                                      l5062 2366                                        l5046 2260  
                                      l5118 2D4E                                        l5214 25BC  
                                      l5206 2584                                        l5222 3204  
                                      l5302 32A0                                        l4280 27EA  
                                      l4272 27AE                                        l4264 2BC8  
                                      l4256 2B90                                        l3800 1742  
                                      l3720 15A6                                        l3712 157E  
                                      l3704 155E                                        l4096 2016  
                                      l4088 1FCE                                        l5056 2326  
                                      l5048 2270                                        l5080 2ED2  
                                      l5072 2E74                                        l5208 2592  
                                      l5216 25C2                                        l5224 3208  
                                      l5304 32AA                                        l4290 285C  
                                      l4282 2824                                        l4274 27C8  
                                      l4266 2BE0                                        l4258 2B98  
                                      l3810 177C                                        l3802 1750  
                                      l3730 15DA                                        l3722 15A8  
                                      l3714 1590                                        l3706 1560  
                                      l4098 2022                                        l5058 2350  
                                      l5082 2ED6                                        l5074 2E8A  
                                      l5170 326E                                        l5226 3210  
                                      l5306 32B4                                        l4292 2874  
                                      l4284 283C                                        l4276 27CA  
                                      l4268 2BE6                                        l3820 17E8  
                                      l3812 177E                                        l3804 175E  
                                      l3740 1616                                        l3724 15B8  
                                      l3732 15E2                                        l3716 1592  
                                      l3708 1568                                        l3900 19F0  
                                      l4380 3302                                        l5076 2EAA  
                                      l5172 327A                                        l5164 3238  
                                      l5180 24B8                                        l5228 3236  
                                      l5308 32BE                                        l5412 3510  
                                      l4286 283E                                        l4278 27E2  
                                      l3830 1840                                        l3822 17EA  
                                      l3814 1788                                        l3806 176A  
                                      l3750 162A                                        l3742 161A  
                                      l3734 15F2                                        l3726 15C8  
                                      l3718 1598                                        l3902 1A00  
                                      l3910 1A2A                                        l4382 3304  
                                      l4374 32CA                                        l5078 2EB2  
                                      l5174 327E                                        l5166 324E  
                                      l5190 24F0                                        l5182 24C0  
                                      l4288 2856                                        l3840 186E  
                                      l3824 17FA                                        l3808 176E  
                                      l3816 178E                                        l3760 163E  
                                      l3752 162E                                        l3744 161E  
                                      l3736 1604                                        l3728 15D8  
                                      l3920 1A56                                        l3912 1A3A  
                                      l3904 1A10                                        l4384 330A  
                                      l4376 32DC                                        l5168 3256  
                                      l5192 2502                                        l5184 24D8  
                                      l3842 187C                                        l3834 1854  
                                      l3850 189A                                        l3818 17B4  
                                      l3826 180A                                        l3762 1642  
                                      l3754 1632                                        l3746 1622  
                                      l3738 1612                                        l3770 1652  
                                      l3922 1A66                                        l3930 1A90  
                                      l3914 1A40                                        l3906 1A20  
                                      l4378 32EA                                        l5194 2514  
                                      l5186 24E0                                        l5178 249E  
                                      l3844 1884                                        l3836 185E  
                                      l3828 1830                                        l3852 18A8  
                                      l3780 16C2                                        l3772 1656  
                                      l3764 1646                                        l3756 1636  
                                      l3748 1626                                        l3692 1510  
                                      l3940 1AD2                                        l3932 1AA0  
                                      l3924 1A76                                        l3916 1A46  
                                      l3908 1A22                                        l5196 2522  
                                      l5188 24EC                                        l3862 18FA  
                                      l3870 1950                                        l3854 18AC  
                                      l3846 1888                                        l3838 186C  
                                      l3790 16EC                                        l3782 16CE  
                                      l3774 1680                                        l3766 164A  
                                      l3758 163A                                        l3694 151E  
                                      l3934 1AB6                                        l3926 1A86  
                                      l3918 1A54                                        l5198 2542  
                                      l5294 3282                                        l3880 19A2  
                                      l3872 1960                                        l3864 1906  
                                      l3856 18BA                                        l3848 1898  
                                      l3792 170E                                        l3784 16D2  
                                      l3776 169C                                        l3768 164E  
                                      l3696 152C                                        l3960 1B54  
                                      l3952 1B0A                                        l3936 1AC6  
                                      l3944 1AE6                                        l3928 1A88  
                                      l5544 21FE                                        l5296 3282  
                                      l3890 19C0                                        l3882 19A8  
                                      l3874 1970                                        l3866 1914  
                                      l3858 18D0                                        l3794 171E  
                                      l3786 16E0                                        l3778 16AC  
                                      l3698 152E                                        l3970 1B9A  
                                      l3962 1B5C                                        l3954 1B24  
                                      l3946 1AF6                                        l3938 1ACE  
                                      l5546 233A                                        l5298 328C  
                                      l3884 19AA                                        l3876 1990  
                                      l3868 194E                                        l3788 16E2  
                                      l3980 1BF2                                        l3972 1BB8  
                                      l3964 1B6C                                        l3956 1B34  
                                      l3948 1AF6                                        l5548 149E  
                                      l4940 213C                                        l4932 20F2  
                                      l3886 19B0                                        l3878 1994  
                                      l3798 1732                                        l3990 1C30  
                                      l3982 1BF8                                        l3974 1BBA  
                                      l3966 1B80                                        l3958 1B44  
                                      l3894 19D2                                        l4950 2226  
                                      l4942 2194                                        l4934 2104  
                                      l3888 19BE                                        l3992 1C34  
                                      l3984 1C02                                        l3976 1BCA  
                                      l3968 1B8E                                        l3896 19E0  
                                      l4944 21E6                                        l4952 222A  
                                      l4936 2124                                        l3994 1C42  
                                      l3986 1C10                                        l3978 1BDC  
                                      l3898 19EE                                        l4946 21EA  
                                      l4938 2134                                        l3996 1C70  
                                      l3988 1C22                                        l4948 2214  
                                      STR_1 1001                                        STR_2 1001  
                          ?_lcd_send_enable 0088                                        u3100 153E  
                                      u3101 153A                                        _LATA 0F89  
                                      u3110 154E                                        _LATB 0F8A  
                                      u3111 154A                                        _LATC 0F8B  
                                      u4000 2BC6                                        u3200 169A  
                                      u3120 1590                                        _LATD 0F8C  
                                      u4001 2BC2                                        u3121 158C  
                                      _LATE 0F8D                                        u4010 2BE0  
                                      u3210 16C2                                        u3130 15A6  
                                      u4011 2BDC                                        u3211 16BE  
                                      u3131 15A2                                        u4020 2BFE  
                                      u3300 17FA                                        u3220 16E0  
                                      u3140 15B8                                        u4021 2BFA  
                                      u3301 17F6                                        u3221 16DC  
                                      u3141 15B4                                        u4030 27C8  
                                      u3310 1830                                        u3230 1700  
                                      u3150 15C8                                        u4031 27C4  
                                      u3311 182C                                        u3231 16FC  
                                      u3151 15C4                                        u4040 27E2  
                                      u3400 18FA                                        u3320 1840  
                                      u3240 170E                                        u3160 1604  
                                      u4041 27DE                                        u3401 18F6  
                                      u3321 183C                                        u3241 170A  
                                      u3161 1600                                        u4050 283C  
                                      u3410 1914                                        u3330 186C  
                                      u3250 171E                                        u3170 1612  
                                      u3090 152C                                        u4051 2838  
                                      u3411 1910                                        u3331 1868  
                                      u3251 171A                                        u3171 160E  
                                      u3091 1528                                        u4060 2856  
                                      u3420 194E                                        u3340 187C  
                                      u3260 1750                                        u3180 1680  
                                      u3500 1A10                                        u4140 32DC  
                                      u5020 324E                                        u4061 2852  
                                      u3421 194A                                        u3341 1878  
                                      u3261 174C                                        u3181 167C  
                                      u3501 1A0C                                        u4141 32D8  
                                      u5021 324A                                        u4070 2874  
                                      u3430 1960                                        u3350 1898  
                                      u3270 175E                                        u3190 1698  
                                      u3510 1A54                                        u5030 24B8  
                                      u4071 2870                                        u3431 195C  
                                      u3351 1894                                        u3271 175A  
                                      u3191 1692                                        u3511 1A50  
                                      u5031 24B4                                        u3440 1970  
                                      u3360 18A8                                        u3280 177C  
                                      u3600 1BF2                                        u3520 1A66  
                                      u5040 2502                                        u3441 196C  
                                      u3361 18A4                                        u3281 1778  
                                      u3601 1BEE                                        u3521 1A62  
                                      u5041 24FE                                        u3450 1990  
                                      u3370 18BA                                        u3290 17B4  
                                      u3610 1C10                                        u3530 1A76  
                                      u5050 3204                                        u3451 198C  
                                      u3371 18B6                                        u3291 17B0  
                                      u3611 1C0C                                        u3531 1A72  
                                      u5051 3200                                        u3460 19A2  
                                      u3380 18D0                                        u3700 1D5A  
                                      u3620 1C30                                        u3540 1AB6  
                                      u5060 3232                                        u3461 199E  
                                      u3381 18CC                                        u3701 1D56  
                                      u3621 1C2C                                        u3541 1AB2  
                                      u5061 322C                                        u3470 19BE  
                                      u3390 18E6                                        u3630 1C42  
                                      u3550 1AF6                                        u3710 25DE  
                                      u3471 19BA                                        u3391 18E2  
                                      u3631 1C3E                                        u3551 1AF2  
                                      u3711 25DA                                        u3640 1C70  
                                      u3560 1B6C                                        u3480 19EE  
                                      u3720 2612                                        u3800 1FBA  
                                      u3641 1C6C                                        u3561 1B68  
                                      u3481 19EA                                        u3801 1FB6  
                                      u3650 1C86                                        u3570 1B8E  
                                      u3490 1A00                                        u3730 2640  
                                      u3810 2010                                        u5066 3234  
                                      u3651 1C82                                        u3571 1B8A  
                                      u3491 19FC                                        u3731 263C  
                                      u3811 200C                                        u3660 1C9A  
                                      u3580 1BB8                                        u3740 2654  
                                      u3820 205A                                        u3661 1C96  
                                      u3581 1BB4                                        u3741 2650  
                                      u3725 2608                                        u3821 2056  
                                      u3670 1CB4                                        u3590 1BDC  
                                      u3750 267C                                        u3830 2078  
                                      u4710 2104                                        u3671 1CB0  
                                      u3591 1BD8                                        u3751 2678  
                                      u3831 2074                                        u4711 2100  
                                      u5327 250A                                        u3680 1CFC  
                                      u3760 269C                                        u3840 2088  
                                      u4720 2124                                        u3681 1CF8  
                                      u3761 2698                                        u3841 2084  
                                      u4721 2120                                        u5337 252A  
                                      u3690 1D2C                                        u3770 26AC  
                                      u3850 2096                                        u4730 2134  
                                      u4810 3058                                        u3691 1D28  
                                      u3771 26A8                                        u3851 2092  
                                      u4731 2130                                        u4811 3054  
                                      u5347 254E                                        u3860 20D0  
                                      u3780 1F50                                        u4804 3030  
                                      u3861 20CC                                        u3781 1F4C  
                                      u5357 349C                                        u4805 302C  
                                      i2l14 31A0                                        u3870 20DE  
                                      u3790 1F5E                                        u3871 20DA  
                                      u3791 1F5A                                        i2l24 31EC  
                                      u4904 22EE                                        u4744 215A  
                                      u4920 2E8A                                        u4905 22EA  
                                      u4745 2156                                        u4921 2E86  
                                      u4754 21B2                                        u4930 2EAA  
                                      u4915 235E                                        u4755 21AE  
                                      u4931 2EA6                                        u3980 2B76  
                                      u4916 2362                                        u4860 2240  
                                      u3981 2B72                                        u4861 223C  
                                      u4765 2222                                        u3990 2B90  
                                      u4870 2260                                        u4766 2226  
                                      u3991 2B8C                                        u4871 225C  
                                      i2l64 2FA4                                        u4880 2270  
                                      u4960 2D46                                        i2l81 3006  
                                      u4881 226C                                        u4961 2D42  
                                      i2l59 2F3E                                        i2l77 3004  
                                      u4894 2296                                        u4895 2292  
                                      i2l88 2E0A                                        abs@a 0007  
                                      _dbuf 0100                                        _main 3510  
                  __end_of_MY_EUSART_RX_ISR 27AE                                        _latx 00CE  
                                      _prec 0050                                        _uart 00E3  
                                      fsr1h 0FE2                                        fsr2h 0FDA  
                                      indf1 0FE7                                        indf2 0FDF  
                                      fsr1l 0FE1                                        fsr2l 0FD9  
                  ?_gpio_pin_direction_init 0080                                        btemp 007A  
                          ?_lcd_send_string 0014                                        prodh 0FF4  
                                      prodl 0FF3                                        start 000E  
                               led_init@led 008C                             ___fldiv@new_exp 009F  
                              ___param_bank 0000                                       ??_abs 0009  
                 ?_gpio_pin_output_low_init 0088                               _EUSART_RX_ISR 33F8  
                             ___fltol@sign1 0088                               _EUSART_TX_ISR 351C  
                           __end_of___fladd 19D2                                       ?_main 0001  
                           __end_of___fldiv 1D6E                             __end_of___awdiv 2A02  
                           __end_of___awmod 2AB2                             __end_of___fltol 26CE  
                           ___awdiv@divisor 0003                                       i2l121 334E  
                                     i2l150 34DA                                       i2l136 2C96  
                                     i2l306 3522                                       i2l147 3152  
                                     i2l180 3102                                       i2l159 2D2A  
                                     i2l175 30AE                                       i2l373 249C  
                                     i2l632 27AC                                       i2l467 290A  
                                     i2l549 34F8                                       i2l901 2A00  
                                     i2l914 2AB0                                       i2l594 3426  
                                     i2l588 351E                             ___awdiv@counter 0005  
                                     _RCREG 0FAE                           ?_lcd_send_command 008E  
                              vfpfcnvrt@fmt 000C                                       _SPBRG 0FAF  
                                     _PORTA 0F80                                       _PORTB 0F81  
                                     _PORTC 0F82                                       _PORTD 0F83  
                                     _PORTE 0F84                                       _TRISA 0F92  
                                     _TRISB 0F93                                       _TRISC 0F94  
                                     _TRISD 0F95                                       _TRISE 0F96  
                                     _TXREG 0FAD                          ??_lcd_send_command 0090  
                           __end_of_led_off 3104                                       __init 3282  
                    lcd_send_string@lcd_ret 0017                                       _flags 005A  
                                     _fputc 2AB2                                       _width 004E  
                                     _portx 00C4                                       _putch 3524  
                                     _trisx 00D8                                       pclath 0FFA  
                                     pclatu 0FFB                                       tablat 0FF5  
                                     plusw1 0FE3                                       plusw2 0FDB  
                                     ttemp5 007B                                       ttemp6 007E  
                                     ttemp7 0082                                       status 0FD8  
                                     wtemp8 007B                             __end_of_sprintf 33C4  
                           __initialization 2E0C                                __end_of_main 351C  
                                 ??_ADC_ISR 0001                              ?_EUSART_RX_ISR 0001  
                            ?_EUSART_TX_ISR 0001                                      ??_main 00C4  
                 lcd_send_nbits@pin_counter 008D                               __activetblptr 0003  
                                    ?__init 0001                  _EUSART_OverrunErrorHandler 0052  
                   lcd_send_enable@gpio_ret 0089                                      ?_fputc 0001  
                                    _ADRESH 0FC4                                      _ADRESL 0FC3  
                          ___awdiv@dividend 0001                                      ?_putch 0001  
                         _EUSART_ASYNC_Init 32CA                      lcd_send_string_pos@lcd 001B  
                                    i2l1402 33DE                                      i2l1405 33F6  
                                    i2l1417 2B5A                                      i2l1354 33C2  
                                    i2l1347 3456                                      i2l3300 29AE  
                                    i2l1428 3524                      lcd_send_string_pos@row 001C  
                                    i2l3310 29DA                                      i2l3302 29B4  
                                    i2l3304 29CA                                      i2l3312 29E0  
                                    i2l3320 2A02                                      i2l1392 1F38  
                                    i2l3314 29F0                                      i2l3306 29D2  
                                    i2l3330 2A2E                                      i2l3322 2A06  
                                    i2l3410 1DAA                                      i2l3402 1D6E  
                                    i2l4300 34F4                                      i2l5100 31A2  
                                    i2l3316 29F8                                      i2l3308 29D4  
                                    i2l3340 2A66                                      i2l3332 2A36  
                                    i2l3324 2A14                                      i2l3420 1E12  
                                    i2l3412 1DB4                                      i2l3404 1D92  
                                    i2l4302 34F8                                      i2l5110 31EA  
                                    i2l5102 31B6                                      i2l3350 2AA0  
                                    i2l3342 2A7C                                      i2l3334 2A48  
                                    i2l3326 2A1C                                      i2l3430 1E9C  
                                    i2l3422 1E2A                                      i2l3414 1DD2  
                                    i2l3406 1D9A                                      i2l1398 338E  
                                    i2l5030 2DC6                      lcd_send_string_pos@str 001E  
                                    i2l5104 31BE                                      i2l3280 2950  
                                    i2l3352 2AA8                                      i2l3344 2A84  
                                    i2l3336 2A50                                      i2l3328 2A20  
                                    i2l3360 2AD2                                      i2l3432 1EAC  
                                    i2l3440 1EF2                                      i2l3424 1E5E  
                                    i2l3416 1DF0                                      i2l3408 1DA6  
                                    i2l5032 2DD6                      lcd_send_number@counter 005E  
                                    i2l5106 31DA                                      i2l3290 2976  
                                    i2l3282 2958                                      i2l3346 2A8A  
                                    i2l3338 2A58                                      i2l3370 33C4  
                                    i2l3362 2ADC                                      i2l3434 1EBC  
                                    i2l3426 1E7A                                      i2l3418 1E08  
                                    i2l3442 1F08                                      i2l5034 2DE6  
                                    i2l5026 2D9E                                      i2l5130 332A  
                                    i2l5108 31E6                                      i2l3292 297E  
                                    i2l3284 295C                                      i2l3276 293E  
                                    i2l3348 2A90                                      i2l3372 33D2  
                                    i2l3364 2AF8                                      i2l3356 2AB2  
                                    i2l3436 1ED2                                      i2l3428 1E8C  
                                    i2l5036 2DEA                                      i2l5028 2DB6  
                                    i2l5132 333A                                      i2l5140 3078  
                                    i2l3294 2990                                      i2l3286 296A  
                                    i2l3278 2942                                      i2l3366 2B2A  
                                    i2l3358 2AC2                                      i2l3438 1EF0  
                                    i2l3446 1F14                                      i2l5038 2E0A  
                                    i2l5126 330E                                      i2l5150 30B0  
                                    i2l5142 3084                                      i2l2672 3520  
                                    i2l3296 2998                                      i2l3288 2972  
                                    i2l3640 2C02                                      i2l5128 3326  
                                    i2l5160 3100                                      i2l5152 30C4  
                                    i2l5144 30A8                                      i2l5136 305C  
                                    i2l5240 2706                                      i2l5232 26CE  
                                    i2l5400 28CA                                      i2l5090 3170  
                                    i2l3298 29A0                                      i2l3490 3358  
                                    i2l3650 2C2C                                      i2l3642 2C02  
                                    i2l5154 30CC                                      i2l5146 30AC  
                                    i2l5138 3070                                      i2l5250 2748  
                                    i2l5242 2710                                      i2l5234 26D6  
                                    i2l4442 351C                                      i2l5410 2906  
                                    i2l5402 28D8                                      i2l5092 318C  
                                    i2l3580 3428                                      i2l3492 3368  
                                    i2l3660 2C7E                                      i2l3652 2C44  
                                    i2l3644 2C14                                      i2l5156 30D8  
                                    i2l5260 2784                                      i2l5252 275C  
                                    i2l5244 271A                                      i2l5236 26EC  
                                    i2l5404 28E6                                      i2l4294 34DC  
                                    i2l5094 319A                                      i2l5086 3154  
                                    i2l3582 3430                                      i2l3494 3386  
                                    i2l3590 3398                                      i2l3654 2C50  
                                    i2l3646 2C18                                      i2l5158 30FC  
                                    i2l5262 278E                                      i2l5254 2766  
                                    i2l5238 26FC                                      i2l5246 2728  
                                    i2l5406 28EA                                      i2l4296 34DC  
                                    i2l5096 319E                                      i2l5088 3168  
                                    i2l3584 343A                                      i2l3488 3350  
                                    i2l3592 33A0                                      i2l3656 2C68  
                                    i2l3648 2C28                                      i2l5264 2798  
                                    i2l5248 2738                                      i2l5408 28F8  
                                    i2l4298 34EA                                      i2l3586 343C  
                                    i2l3594 33A8                                      i2l3658 2C7C  
                                    i2l5266 27A2                                      i2l5258 2774  
                                    i2l3596 33B8                                      i2l3588 3390  
                                    i2l4900 34C4                                      i2l5292 3426  
                                    i2l4902 34CC                                      i2l4910 2F58  
                                    i2l5550 2D02                                      i2l5286 33F8  
                                    i2l5552 2470                                      i2l4904 34D8  
                                    i2l4912 2F60                                      i2l4920 2EDA  
                                    i2l5288 340A                                      i2l4914 2F9E  
                                    i2l4922 2EF2                                      i2l5394 28AA  
                                    i2l4860 239A                                      i2l4916 2FA2  
                                    i2l4908 2F40                                      i2l4924 2EFA  
                                    i2l5396 28B8                                      i2l4870 245C  
                                    i2l4862 23AA                                      i2l4926 2F38  
                                    i2l5398 28C6                                      i2l4872 2486  
                                    i2l4864 23B2                                      i2l4856 236A  
                                    i2l4928 2F3C                                      i2l4874 2496  
                                    i2l4866 2408                                      i2l4858 237A  
                                    i2l4890 313C                                      i2l4970 2CCA  
                                    i2l4962 2C98                                      i2l4868 2458  
                                    i2l4876 249A                                      i2l4892 3150  
                                    i2l4884 3104                                      i2l4972 2CDC  
                                    i2l4964 2CA0                                      i2l4886 3110  
                                    i2l4990 2FCE                                      i2l4966 2CA6  
                                    i2l4896 34B4                                      i2l4888 313A  
                                    i2l4992 2FD6                                      i2l4968 2CB8  
                                    i2l4976 2CEE                                      i2l4898 34B8  
                                    i2l4994 2FE8                                      i2l4986 2FA6  
                                    i2l4978 2D28                                      i2l4996 2FEA  
                                    i2l4988 2FBE                                      i2l4998 3000  
                             vfpfcnvrt@done 000F         convert_uint16_to_string@Temp_String 002E  
                                    _SPBRGH 0FB0                          ?_EUSART_ASYNC_Init 00C2  
                          __end_of___xxtofl 20F2                    ??i2_gpio_pin_logic_write 0003  
               __end_of_dc_motor_move_right 31A2                                vfprintf@cfmt 0019  
                       ??_EUSART_ASYNC_Init 00C3                            __end_of_lcd_init 25C6  
                          __end_of_led_init 3238                                   ??___fladd 00AF  
                                 ??___fldiv 0096                                   ??___awdiv 0005  
                                 ??___awmod 0005                                   ??___fltol 0084  
                                    _heater 006E                                      _led_on 305C  
                                    _memset 3428                                      clear_0 2E52  
                                    clear_1 2E64                            ___awdiv@quotient 0007  
                           ___awmod@divisor 0003                     lcd_send_string@gpio_ret 0016  
                                    isa$std 0001                             ___awmod@counter 0005  
                                 ??_led_off 000A                 __end_of_lcd_send_number_pos 3350  
                                    fputc@c 0001                                __pdataCOMRAM 0064  
                              __mediumconst 0000                                      tblptrh 0FF7  
                                    tblptrl 0FF6                                      tblptru 0FF8  
                 __end_of_EUSART_ASYNC_Init 330E                                      putch@c 0001  
                          __end_of_vfprintf 3390                           ?i2_lcd_send_nbits 0009  
                                 ??_sprintf 001E                __end_of_EUSART_ASYNC_RX_Init 2878  
              __end_of_EUSART_ASYNC_TX_Init 2C02                          ??i2_lcd_send_nbits 000B  
                              ___xxtofl@arg 008A                                ___xxtofl@exp 0089  
                              ___xxtofl@val 0080                                  __accesstop 0080  
                   __end_of__initialization 2E6A                      lcd_send_number_pos@lcd 0035  
                    lcd_send_number_pos@num 0038                      lcd_send_number_pos@row 0036  
                             ___rparam_used 0001                        lcd_set_curser@column 0016  
                                ___fltol@f1 0080                   i2lcd_send_command@command 0010  
                 i2lcd_send_command@lcd_ret 0012                              __pcstackCOMRAM 0001  
                              __pidataBANK0 3458                   i2gpio_pin_logic_write@pin 0001  
                 i2gpio_pin_logic_write@ret 0008                               __end_of__init 32CA  
                           ??_EUSART_RX_ISR 003C                             ??_EUSART_TX_ISR 0001  
                          ??_lcd_send_nbits 008A                               __end_of_fputc 2B5C  
                             __end_of_putch 3526                 __end_of_lcd_send_string_pos 2E0C  
               lcd_send_string_pos@gpio_ret 001F                            ??_lcd_set_curser 0017  
                                   ??__init 00C4                                     ??_fputc 0004  
                                   ??_putch 0001                                  __pbssBANK0 00F3  
                                __pbssBANK1 0100                       lcd_send_char_data@lcd 000F  
                     lcd_send_char_data@ret 0013                          lcd_send_enable@lcd 0088  
                         ?_MY_EUSART_RX_ISR 0001                          _lcd_send_char_data 2F40  
                        ??_MY_EUSART_RX_ISR 003C                         ?_lcd_send_char_data 000F  
                                   ?_led_on 0009                                     _ADC_ISR 3520  
               EUSART_ASYNC_TX_Init@_eusart 0080                 convert_uint16_to_string@str 002D  
                                   ?_memset 0001                                   ?___xxtofl 0080  
                          lcd_send_number@i 005F                        ??_lcd_send_char_data 0011  
                                 ?_lcd_init 0093                                   ?_led_init 008C  
                       i2lcd_send_nbits@lcd 0009                         i2lcd_send_nbits@ret 000D  
           i2lcd_send_nbits@data_or_command 000A               lcd_send_nbits@data_or_command 0089  
                      _ADC_InterruptHandler 0058                                     __Hparam 0000  
                                   __Lparam 0000                                     ___fladd 1510  
                                   ___fldiv 19D2                                     ___awdiv 293E  
                                   ___awmod 2A02                                     ___fltol 25C6  
         _EUSART_Baud_Rate_Calculation$2548 00BE                        EUSART_ASYNC_Init@ret 00C3  
                                 ?_vfprintf 0016                                __psmallconst 1000  
                      _EUSART_ASYNC_RX_Init 27AE                        _EUSART_ASYNC_TX_Init 2B5C  
                                   __pcinit 2E0C             i2gpio_pin_logic_write@pin_logic 0002  
             gpio_pin_logic_write@pin_logic 0081                                     __ramtop 1000  
                                   __ptext0 3510                                     __ptext1 3282  
                                   __ptext2 31EE                                     __ptext3 249E  
                                   __ptext4 2D2C                                     __ptext5 3008  
                                   __ptext6 3488                                     __ptext7 3238  
                                   __ptext8 2E74                                     __ptext9 20F2  
                                   _led_off 30B0                                     _led_red 0074  
                  _convert_uint16_to_string 2C02                                  ??___xxtofl 0084  
                          ___awmod@dividend 0001                      i2_gpio_pin_logic_write 236A  
EUSART_Baud_Rate_Calculation@Baud_Rate_Temp 00BA                                     _sprintf 3390  
                                ??_lcd_init 0094                             lcd_init@lcd_ret 0099  
                            __pintcode_body 2878                                  ??_led_init 008D  
                      end_of_initialization 2E6A                              led_on@gpio_ret 000A  
                                   fputc@fp 0003                                     memset@c 0002  
                                   memset@n 0004                                     memset@p 0006  
                                   int_func 2878                               _dc_motor_init 3238  
                             _dc_motor_stop 31A2                    _gpio_pin_output_low_init 2E74  
                         i2_lcd_send_enable 34B4                           __end_of_vfpfcnvrt 1F3A  
                                 _RCSTAbits 0FAB                                     postdec1 0FE5  
                                   postdec2 0FDD                                     postinc0 0FEE  
                                   postinc1 0FE6                                     postinc2 0FDE  
                          vfpfcnvrt@convarg 0011                          ?i2_lcd_send_enable 0009  
                     ?_EUSART_ASYNC_RX_Init 0080                                  ??_vfprintf 0019  
                     ?_EUSART_ASYNC_TX_Init 0080                       i2lcd_send_command@lcd 000F  
                     i2lcd_send_command@ret 0013                                  _uart_value 0061  
               dc_motor_move_right@dc_motor 0009                            _InterruptManager 0008  
                       ??i2_lcd_send_enable 000A                                 ___fladd@grs 00B6  
                      lcd_init@pins_counter 0098                               ___xxtofl@sign 0088  
                                 _TRISCbits 0F94                                 ___fldiv@grs 00A1  
                               ___fldiv@rem 009A                          lcd_send_string@lcd 0014  
                        lcd_send_string@ret 0018                          lcd_send_string@str 0015  
               dc_motor_move_right@gpio_ret 000A    __end_of_EUSART_ASYNC_ReadByteNonBlocking 34FA  
        ??_EUSART_ASYNC_ReadByteNonBlocking 0002           ?_EUSART_ASYNC_ReadByteNonBlocking 0001  
          _EUSART_ASYNC_ReadByteNonBlocking 34DC            gpio_pin_output_low_init@gpio_ret 008A  
                     lcd_set_curser@lcd_ret 001A                                   _TXSTAbits 0FAC  
                 __end_ofi2_lcd_send_enable 34DC                              ?_dc_motor_init 008C  
                                led_off@led 0009                                  led_off@ret 000B  
                            ?_dc_motor_stop 0009                   i2lcd_send_enable@gpio_ret 000A  
                  EUSART_ASYNC_Init@_eusart 00C2                  i2lcd_send_command@gpio_ret 0011  
             convert_uint16_to_string@F3180 0048                     _gpio_pin_direction_init 222E  
                               vfpfcnvrt@ap 000D                                 vfpfcnvrt@cp 0010  
                               vfpfcnvrt@fp 000B                                 _BAUDCONbits 0FB8  
                         ??_lcd_send_enable 0089                               __pidataCOMRAM 34FA  
                            __end_of_led_on 30B0                              __end_of_memset 3458  
                         ??_lcd_send_string 0016                         start_initialization 2E0C  
       EUSART_Baud_Rate_Calculation@_eusart 00B7               convert_uint16_to_string@value 002B  
                               __end_of_abs 33F8        __end_of_EUSART_Baud_Rate_Calculation 1510  
              _EUSART_Baud_Rate_Calculation 1006                   _EUSART_RxInterruptHandler 0056  
                          _lcd_send_command 2D2C                            dc_motor_init@ret 008E  
                     lcd_send_number@number 0063                                 vfprintf@fmt 0017  
                _EUSART_FramingErrorHandler 0054                      ??_EUSART_ASYNC_RX_Init 0081  
                    ??_EUSART_ASYNC_TX_Init 0081                   lcd_send_number_pos@column 0037  
                                  ??_led_on 000A                                 __pdataBANK0 00C4  
                                  ?_ADC_ISR 0001                                    ??_memset 0006  
                     __end_of_EUSART_RX_ISR 3428                       __end_of_EUSART_TX_ISR 3520  
                 lcd_send_number_pos@number 0062                                  memset@dest 0001  
               i2lcd_send_nbits@pin_counter 000E                            dc_motor_stop@ret 000B  
                                 ___fladd@a 00AB                                   ___fladd@b 00A7  
                                 ___fldiv@a 0092                                   ___fldiv@b 008E  
               lcd_send_number_pos@gpio_ret 003A                                 __pbssCOMRAM 0048  
                    lcd_send_char_data@data 0010                   lcd_send_char_data@lcd_ret 0012  
                             __pcstackBANK0 0080                  lcd_send_string_pos@lcd_ret 0020  
                __end_ofi2_lcd_send_command 2F40                 lcd_send_custom_char@counter 0060  
                           ??_dc_motor_init 008D                             ??_dc_motor_stop 000A  
             ?_EUSART_Baud_Rate_Calculation 00B7       EUSART_ASYNC_ReadByteNonBlocking@_data 0001  
              __end_of_gpio_pin_logic_write 222E                   ??_gpio_pin_direction_init 0082  
                                 __pintcode 0008                  ??_convert_uint16_to_string 002E  
                                  ?___fladd 00A7                                    ?___fldiv 008E  
                                  ?___awdiv 0001                                    ?___awmod 0001  
                                  ?___fltol 0080                         lcd_send_command@lcd 008E  
                       lcd_send_command@ret 0092                     ?i2_gpio_pin_logic_write 0001  
                                  ?_led_off 0009                           lcd_send_nbits@lcd 0088  
                         lcd_send_nbits@ret 008C                                   _led_white 0076  
                               __smallconst 1000                                    ?_sprintf 001A  
                ??_gpio_pin_output_low_init 0089                        i2lcd_send_enable@lcd 0009  
                                  _RB4_Flag 0067                                    _RB5_Flag 0066  
                                  _RB6_Flag 0065                                    _RB7_Flag 0064  
                  __end_of_InterruptManager 293E                                    _PIE1bits 0F9D  
                                  i2u300_41 2C0C                                    i2u301_40 2C28  
                                  i2u301_41 2C24                                    i2u302_40 2C96  
                                  i2u302_41 2C92                                    i2u250_40 29CA  
                                  i2u250_41 29C6                                    i2u251_40 29F0  
                                  i2u251_41 29EC                                    i2u252_40 2A14  
                                  i2u260_40 2AF8                                    i2u500_40 30C4  
                                  i2u252_41 2A10                                    i2u260_41 2AF4  
                                  i2u500_41 30C0                                    i2u253_40 2A2E  
                                  i2u261_40 2B2A                                    i2u501_40 30F8  
                                  i2u253_41 2A2A                                    i2u261_41 2B26  
                                  i2u501_41 30F2                                    i2u501_46 30FA  
                                  i2u246_40 2950                                    i2u254_40 2A48  
                                  i2u262_40 33D2                                    i2u270_40 1DD2  
                                  i2u510_40 2784                                    i2u246_41 294C  
                                  i2u254_41 2A44                                    i2u262_41 33CE  
                                  i2u270_41 1DCE                                    i2u510_41 2780  
                                  i2u247_40 296A                                    i2u255_40 2A66  
                                  i2u271_40 1DF0                                    i2u247_41 2966  
                                  i2u255_41 2A62                                    i2u271_41 1DEC  
                                  i2u408_40 34EA                                    i2u248_40 2990  
                                  i2u256_40 2A7C                                    i2u272_40 1E26  
                                  i2u408_41 34E6                                    i2u248_41 298C  
                                  i2u256_41 2A78                                    i2u272_41 1E20  
                                  i2u249_40 29AE                                    i2u257_40 2AA0  
                                  i2u273_40 1E28                                    i2u249_41 29AA  
                                  i2u257_41 2A9C                                    _PIR1bits 0F9E  
                                  i2u258_40 2AC2                                    i2u274_40 1E8C  
                                  i2u282_40 3386                                    i2u514_40 340A  
                                  i2u530_40 28F8                                    i2u258_41 2ABE  
                                  i2u274_41 1E88                                    i2u282_41 3382  
                                  i2u514_41 3406                                    i2u530_41 28F4  
                                  i2u259_40 2AD2                                    i2u275_40 1E9C  
                                  i2u507_40 26FC                                    i2u531_40 2906  
                                  i2u259_41 2ACE                                    i2u275_41 1E98  
                                  i2u507_41 26F8                                    i2u531_41 2902  
                                  i2u276_40 1EAC                                    i2u508_40 2738  
                                  i2u515_48 3410                                    i2u276_41 1EA8  
                                  i2u508_41 2734                                    i2u515_49 3422  
                                  i2u461_40 237A                                    i2u293_40 3456  
                                  i2u277_40 1EBC                                    i2u269_40 1D92  
                                  i2u509_40 2748                                    i2u461_41 2376  
                                  i2u293_41 3452                                    i2u277_41 1EB8  
                                  i2u269_41 1D8E                                    i2u509_41 2744  
                                  i2u462_40 239A                                    i2u278_40 1F04  
                                  i2u470_40 2EF2                                    i2u526_40 28B8  
                                  i2u462_41 2396                                    i2u278_41 1F00  
                                  i2u470_41 2EEE                                    i2u526_41 28B4  
                                  i2u463_40 23AA                                    i2u527_40 28C6  
                                  i2u463_41 23A6                                    i2u527_41 28C2  
                                  i2u528_40 28D8                                    i2u528_41 28D4  
                                  i2u464_44 23D0                                    i2u464_45 23CC  
                                  i2u536_47 34C6                                    i2u529_40 28E6  
                                  i2u529_41 28E2                                    i2u465_44 2426  
                                  i2u465_45 2422                                    i2u482_40 2DB6  
                                  i2u482_41 2DB2                                    i2u466_45 2494  
                                  i2u466_46 2496                                    i2u483_40 2DC6  
                                  i2u483_41 2DC2                                    i2u467_44 312A  
                                  i2u467_45 3126                                    i2u468_40 3150  
                                  i2u484_40 2DD6                                    i2u468_41 314C  
                                  i2u484_41 2DD2                                    i2u469_40 2F58  
                                  i2u477_40 2FBE                                    i2u485_40 2DE6  
                                  i2u469_41 2F54                                    i2u477_41 2FBA  
                                  i2u485_41 2DE2                                    i2u494_40 3168  
                                  i2u478_40 2FCE                                    i2u494_41 3164  
                                  i2u478_41 2FCA                                    i2u495_40 31B6  
                                  i2u479_40 3000                                    i2u495_41 31B2  
                                  i2u479_41 2FFC                                    i2u497_40 3326  
                                  i2u497_41 3322                                    i2u498_40 3070  
                                  i2u498_41 306C                                    i2u499_40 30A4  
                                  i2u499_41 309E                                    i2u499_46 30A6  
                          i2_lcd_send_nbits 3104              __end_ofi2_gpio_pin_logic_write 249E  
                                 _vfpfcnvrt 1D6E                                  _ADCON0bits 0FC2  
                                _ADCON1bits 0FC1                                  _ADCON2bits 0FC0  
                                 led_on@led 0009                                   led_on@ret 000B  
           __end_of_gpio_pin_direction_init 236A                                  vfpfcnvrt@c 0015  
                                 copy_data0 2E20                                   copy_data1 2E40  
                       _dc_motor_move_right 3154                             _lcd_send_enable 3488  
                                  __Hrparam 0000        gpio_pin_direction_init@pin_direction 0081  
                                vfprintf@ap 0018                                    __Lrparam 0000  
                                vfprintf@fp 0016              ??_EUSART_Baud_Rate_Calculation 00B8  
                           _lcd_send_string 2FA6                       dc_motor_stop@dc_motor 0009  
               EUSART_ASYNC_RX_Init@_eusart 0080                  lcd_send_number_pos@lcd_ret 003B  
                  lcd_send_command@gpio_ret 0090                         _lcd_send_number_pos 330E  
                lcd_send_number_pos@counter 005C                        lcd_send_number_pos@i 005D  
                                ?_vfpfcnvrt 000B                            _air_conditioners 0071  
                      ?_dc_motor_move_right 0009                            _MY_EUSART_RX_ISR 26CE  
                  __end_of_lcd_send_command 2D9E                                  sprintf@fmt 001B  
                     dc_motor_stop@gpio_ret 000A                                    ___xxtofl 1F3A  
                      _gpio_pin_logic_write 20F2                                    __ptext10 222E  
                                  __ptext11 32CA                                    __ptext20 351C  
                                  __ptext12 1006                                    __ptext21 33F8  
                                  __ptext13 1F3A                                    __ptext30 2F40  
                                  __ptext22 26CE                                    __ptext14 25C6  
                                  __ptext31 3104                                    __ptext23 305C  
                                  __ptext15 19D2                                    __ptext40 2A02  
                                  __ptext32 34B4                                    __ptext24 30B0  
                                  __ptext16 1510                                    __ptext41 293E  
                                  __ptext33 2C02                                    __ptext25 330E  
                                  __ptext17 2B5C                                    __ptext42 3428  
                                  __ptext34 3390                                    __ptext26 2D9E  
                                  __ptext18 27AE                                    __ptext43 31A2  
                                  __ptext35 3350                                    __ptext27 2C98  
                                  __ptext44 3154                                    __ptext36 1D6E  
                                  __ptext28 2EDA                                    __ptext45 236A  
                                  __ptext37 2AB2                                    __ptext29 2FA6  
                                  __ptext46 34DC                                    __ptext38 3524  
                                  __ptext47 3520                                    __ptext39 33C4  
                                  __ptext48 0000                                    _lcd_init 249E  
                                  _led_blue 0078                        ?_lcd_send_number_pos 0035  
                    dc_motor_move_right@ret 000B                                    _led_init 31EE  
                     dc_motor_init@dc_motor 008C                  lcd_send_char_data@gpio_ret 0011  
       convert_uint16_to_string@DataCounter 0034            __end_of_convert_uint16_to_string 2C98  
                       _lcd_send_string_pos 2D9E                                    isa$xinst 0000  
                                  int$flags 007A                                    _vfprintf 3350  
                     dc_motor_init@gpio_ret 008D                       ??_dc_motor_move_right 000A  
                          lcd_init@gpio_ret 0096                                  _INTCONbits 0FF2  
                     ?_gpio_pin_logic_write 0080                             led_off@gpio_ret 000A  
                            _lcd_send_nbits 3008                        ?_lcd_send_string_pos 001B  
                   lcd_send_command@command 008F                     lcd_send_command@lcd_ret 0091  
                     ??_lcd_send_number_pos 003A                           lcd_set_curser@lcd 0014  
                   gpio_pin_logic_write@pin 0080                     gpio_pin_logic_write@ret 0087  
                         lcd_set_curser@row 0015            __end_of_gpio_pin_output_low_init 2EDA  
                   __end_of_lcd_send_enable 34B4                              _lcd_set_curser 2C98  
                                  intlevel2 0000                                   sprintf@ap 001E  
                 _EUSART_TxInterruptHandler 00F3                     __end_of_lcd_send_string 3008  
                        i2_lcd_send_command 2EDA                                 ??_vfpfcnvrt 000E  
                       ?i2_lcd_send_command 000F                                    sprintf@f 001F  
                                  sprintf@s 001A                      __end_of_lcd_send_nbits 305C  
                     ??_lcd_send_string_pos 001F                    __end_ofi2_lcd_send_nbits 3154  
                    __end_of_lcd_set_curser 2D2C                  gpio_pin_direction_init@pin 0080  
                gpio_pin_direction_init@ret 0087                               ___fladd@signs 00B3  
                          led_init@gpio_ret 008D                                ___fladd@aexp 00B4  
                              ___fladd@bexp 00B5                        ??i2_lcd_send_command 0011  
                     __end_of_dc_motor_init 3282                           ?_InterruptManager 0001  
                     __end_of_dc_motor_stop 31EE  
